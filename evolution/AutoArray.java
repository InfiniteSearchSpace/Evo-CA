/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package evolution;

import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyListener;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.security.SecureRandom;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Kraaken
 */
public class AutoArray {
     
    public int[][] pointsArray;
        
    public int maxVal = 0;
    public int totalVal = 0;
    public int notZero = 0;
    public int[] freq = new int[16+1];

    SecureRandom rSec = new SecureRandom();
    Random r = new Random();
    
    int randStr =128; //RANDOMNESS
    int randFunc = 5;
    int fuelLimit = -1; //REDUCCE SEEDING AFTER X ITERATIONS
    int rndRotationSize = 2;
    int doubleBackSize =2;

    /****************************************************************************/
    int rndRotation = rndRotationSize;
    int doubleBack = doubleBackSize;
    int dir = 4;
    /****************************************************************************/
    int functCount = 250;
    int tikExcl = 0;
    int functExcl = 0;
        
    int tikLen = 0; //ADD THIS MANY NEW FUNCTIONS TO THIS SEED ITERATION
    int twoOutOf = tikLen+2+3; //WITH 2/X+2 CHANCE, REMOVE EACH FUNCTION FROM SEED
    
    
    int baseline = 0; //LEFTMOST FUNCTIONS WILL NOT CHANGE

    int[] iticker;
    int ufuel = -1;
    
    //int[] bytefilter = { 1, 1, 1, 1, 1, 1,  1, 1, 1, 1, 1, 1};
    //int bytefilterHead = 0;
    
    int[] iStik = {150, 191, 132, 131, 196, 131, 131, 37};
    
    //165, 241, 31, 156, 78, 117, 78
    
    //24, 192, 14, 54, 0, 216, 127	Custom1	
//68, 14, 216, 127, 0, 70, 72, 72, 0, 68, 0, 97, 0, 24, 24, 0	Custom2	
    		
//68, 14, 216, 127	    //RedRovingMine	//216 = negs move; 127 = neg fuse;
//70, 72, 72	    //Battery Storage	//70 = grow; 72 = limiter
//14, 24, 24	    //Picrobe	//14 = pie filling; 24 = BlueRover Particle;
//97 or 28, 68, 60	    //Basic balance & growth	// 97 || 28 = sticky fuel; 68 = free space; 60 = grow;
//14, 24, 68, 134	    //swirling fuel	// 134 = swirling fuel;
//14, 187, 68, 147	    //irregular, lifelike	//Can't ID 187 & 147...
//218, 14, 128, 226, 248 	 //fast amoeba	//
//24, 192, 14, 54	    // free/libre interactions	//

   
    
    
    public void AutoArray(int mySize) {
        pointsArray = new int[mySize][mySize];
	
	
	
	iticker = new int[tikLen+iStik.length];
	
	int tmpi = 0;
	
	for (int i=tikExcl; i < iStik.length; i++) {
	    if(i >= baseline) {
		if(r.nextInt(twoOutOf) <= 1) {iticker[i] = iStik[i];}
	    } else {
		iticker[i] = iStik[i];
	    }
	}
	
	for (int i=0; i < tikLen; i++) {
	    iticker[i+iStik.length] = r.nextInt(functCount-functExcl)+functExcl;
	}
	
	String s = "";
	for (int i=0; i < tikLen+iStik.length; i++) {
	    if(iticker[i] != 0) {
		s += iticker[i];
                if(i != (tikLen+iStik.length)-1) { s += ", "; }
	    }
	}
	
	System.out.println(s);
	
	int lineCount = 0;
	String[] strAr;
	String line = null;
	int ii=0;
	
	BufferedReader reader;
	
	try {
	    reader = new BufferedReader(new FileReader("C:/fin.csv"));
	    
	    try {
		
		while ((line = reader.readLine()) != null) { lineCount++; }
		
		strAr = new String[lineCount+1];
		
		
		while ((line = reader.readLine()) != null) {
		    ii++;
		    strAr[ii] = line;
		}
		
	    } catch (IOException ex) {
		Logger.getLogger(AutoArray.class.getName()).log(Level.SEVERE, null, ex);
	    }
	} catch (FileNotFoundException ex) {
	    Logger.getLogger(AutoArray.class.getName()).log(Level.SEVERE, null, ex);
	}
	
	strAr = new String[lineCount];
	
	try {
	    reader = new BufferedReader(new FileReader("C:/fin.csv"));
	    
	    try {
		
		while ((line = reader.readLine()) != null) {
		   strAr[ii] = line;
		    ii++;
		}
		
	    } catch (IOException ex) {
		Logger.getLogger(AutoArray.class.getName()).log(Level.SEVERE, null, ex);
	    }
	} catch (FileNotFoundException ex) {
	    Logger.getLogger(AutoArray.class.getName()).log(Level.SEVERE, null, ex);
	}
	
	
	PrintWriter writer;
	try {
	    writer = new PrintWriter("C:/fin.csv", "UTF-8");
	    
	    for (int jj = 0; jj < strAr.length; jj++){
		writer.println(strAr[jj]);
	    }
		
	    String s2 = "";
	    
	    for (int i = 0; i < iStik.length; i++) {
		s2 += iStik[i] + ", ";
	    }
	    
	    writer.println(s2);
	    
	    writer.close();
	} catch (FileNotFoundException | UnsupportedEncodingException ex) {
	    Logger.getLogger(AutoArray.class.getName()).log(Level.SEVERE, null, ex);
	}
	
	
	lineCount = 0;
	String[] strAr2;
	line = null;
	ii=0;
	
	try {
	    reader = new BufferedReader(new FileReader("C:/out.csv"));
	    
	    try {
		
		while ((line = reader.readLine()) != null) { lineCount++; }
		
		strAr2 = new String[lineCount+1];
		
		
		while ((line = reader.readLine()) != null) {
		    ii++;
		    strAr2[ii] = line;
		}
		
	    } catch (IOException ex) {
		Logger.getLogger(AutoArray.class.getName()).log(Level.SEVERE, null, ex);
	    }
	} catch (FileNotFoundException ex) {
	    Logger.getLogger(AutoArray.class.getName()).log(Level.SEVERE, null, ex);
	}
	
	strAr2 = new String[lineCount];
	
	try {
	    reader = new BufferedReader(new FileReader("C:/out.csv"));
	    
	    try {
		
		while ((line = reader.readLine()) != null) {
		   strAr2[ii] = line;
		    ii++;
		}
		
	    } catch (IOException ex) {
		Logger.getLogger(AutoArray.class.getName()).log(Level.SEVERE, null, ex);
	    }
	} catch (FileNotFoundException ex) {
	    Logger.getLogger(AutoArray.class.getName()).log(Level.SEVERE, null, ex);
	}
	
	try {
	    writer = new PrintWriter("C:/out.csv", "UTF-8");
	    
	    for (int jj = 0; jj < strAr2.length; jj++){
		writer.println(strAr2[jj]);
	    }
		
	    writer.println(s);
	    writer.close();
	} catch (FileNotFoundException | UnsupportedEncodingException ex) {
	    Logger.getLogger(AutoArray.class.getName()).log(Level.SEVERE, null, ex);
	}
	
	
	 StringSelection selection = new StringSelection(s);
           Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
           clipboard.setContents(selection, selection);
    }
        
    
    
    
    
    
    public void flipZero(int mySize, int iterations) {
        
	int tik = 0;
	
        for (int t=0; t< iterations;t++){
            
            
            TIMEBOX();
            
            for(int i=0; i < mySize; i++){
                for(int j=0; j < mySize; j++){
		/**************************************************************/
		    
		    for (int k = 0; k < tikLen+iStik.length; k++) {
			
			//if(bytefilter[bytefilterHead] == 1){
			if(r.nextInt(((8-pointsArray[i][j])*(8-pointsArray[i][j]))+16) == 0) {
			
			   /*if((pointsArray[i][j] > 0 && r.nextInt((pointsArray[i][j]*pointsArray[i][j])+1) == 300 )) {
				int rrr = r.nextInt(bytefilter.length);
				
				if(bytefilter[rrr] == 0) {bytefilter[rrr] = 1;} else {bytefilter[rrr] = 0;}
				
				String  bStr = "";
				
				for (int aa = 0; aa < bytefilter.length; aa++) {
				    bStr += bytefilter[aa] + ", ";
				}
				System.out.println(bStr);
				
				
			    }*/
			    
			    
                        tik = iticker[k];
                        
			if(tik == 0 && r.nextInt(1024) == 0) { /*tik=r.nextInt(249)+1;/*f000(i, j, mySize);*/ }
			
                       if(tik == 1) { f001(i, j, mySize); }
                        if(tik == 2) { f002(i, j, mySize); }
                        if(tik == 3) { f003(i, j, mySize); }
                        if(tik == 4) { f004(i, j, mySize); }
                        if(tik == 5) { f005(i, j, mySize); }
                        if(tik == 6) { f006(i, j, mySize); }
                        if(tik == 7) { f007(i, j, mySize); }
                        if(tik == 8) { f008(i, j, mySize); }
                        if(tik == 9) { f009(i, j, mySize); }
                        if(tik == 10) { f010(i, j, mySize); }
                        if(tik == 11) { f011(i, j, mySize); }
                        if(tik == 12) { f012(i, j, mySize); }
                        if(tik == 13) { f013(i, j, mySize); }
                        if(tik == 14) { f014(i, j, mySize); }
                        if(tik == 15) { f015(i, j, mySize); }
                        if(tik == 16) { f016(i, j, mySize); }
                        if(tik == 17) { f017(i, j, mySize); }
                        if(tik == 18) { f018(i, j, mySize); }
                        if(tik == 19) { f019(i, j, mySize); }
                        if(tik == 20) { f020(i, j, mySize); }
                        if(tik == 21) { f021(i, j, mySize); }
                        if(tik == 22) { f022(i, j, mySize); }
                        if(tik == 23) { f023(i, j, mySize); }
                        if(tik == 24) { f024(i, j, mySize); }
                        if(tik == 25) { f025(i, j, mySize); }
                        if(tik == 26) { f026(i, j, mySize); }
                        if(tik == 27) { f027(i, j, mySize); }
                        if(tik == 28) { f028(i, j, mySize); }
                        if(tik == 29) { f029(i, j, mySize); }
                        if(tik == 30) { f030(i, j, mySize); }
                        if(tik == 31) { f031(i, j, mySize); }
                        if(tik == 32) { f032(i, j, mySize); }
                        if(tik == 33) { f033(i, j, mySize); }
                        if(tik == 34) { f034(i, j, mySize); }
                        if(tik == 35) { f035(i, j, mySize); }
                        if(tik == 36) { f036(i, j, mySize); }
                        if(tik == 37) { f037(i, j, mySize); }
                        if(tik == 38) { f038(i, j, mySize); }
                        if(tik == 39) { f039(i, j, mySize); }
                        if(tik == 40) { f040(i, j, mySize); }
                        if(tik == 41) { f041(i, j, mySize); }
                        if(tik == 42) { f042(i, j, mySize); }
                        if(tik == 43) { f043(i, j, mySize); }
                        if(tik == 44) { f044(i, j, mySize); }
                        if(tik == 45) { f045(i, j, mySize); }
                        if(tik == 46) { f046(i, j, mySize); }
                        if(tik == 47) { f047(i, j, mySize); }
                        if(tik == 48) { f048(i, j, mySize); }
                        if(tik == 49) { f049(i, j, mySize); }
                        if(tik == 50) { f050(i, j, mySize); }
                        if(tik == 51) { f051(i, j, mySize); }
                        if(tik == 52) { f052(i, j, mySize); }
                        if(tik == 53) { f053(i, j, mySize); }
                        if(tik == 54) { f054(i, j, mySize); }
                        if(tik == 55) { f055(i, j, mySize); }
                        if(tik == 56) { f056(i, j, mySize); }
                        if(tik == 57) { f057(i, j, mySize); }
                        if(tik == 58) { f058(i, j, mySize); }
                        if(tik == 59) { f059(i, j, mySize); }
                        if(tik == 60) { f060(i, j, mySize); }
                        if(tik == 61) { f061(i, j, mySize); }
                        if(tik == 62) { f062(i, j, mySize); }
                        if(tik == 63) { f063(i, j, mySize); }
                        if(tik == 64) { f064(i, j, mySize); }
                        if(tik == 65) { f065(i, j, mySize); }
                        if(tik == 66) { f066(i, j, mySize); }
                        if(tik == 67) { f067(i, j, mySize); }
                        if(tik == 68) { f068(i, j, mySize); }
                        if(tik == 69) { f069(i, j, mySize); }
                        if(tik == 70) { f070(i, j, mySize); }
                        if(tik == 71) { f071(i, j, mySize); }
                        if(tik == 72) { f072(i, j, mySize); }
                        if(tik == 73) { f073(i, j, mySize); }
                        if(tik == 74) { f074(i, j, mySize); }
                        if(tik == 75) { f075(i, j, mySize); }
                        if(tik == 76) { f076(i, j, mySize); }
                        if(tik == 77) { f077(i, j, mySize); }
                        if(tik == 78) { f078(i, j, mySize); }
                        if(tik == 79) { f079(i, j, mySize); }
                        if(tik == 80) { f080(i, j, mySize); }
                        if(tik == 81) { f081(i, j, mySize); }
                        if(tik == 82) { f082(i, j, mySize); }
                        if(tik == 83) { f083(i, j, mySize); }
                        if(tik == 84) { f084(i, j, mySize); }
                        if(tik == 85) { f085(i, j, mySize); }
                        if(tik == 86) { f086(i, j, mySize); }
                        if(tik == 87) { f087(i, j, mySize); }
                        if(tik == 88) { f088(i, j, mySize); }
                        if(tik == 89) { f089(i, j, mySize); }
                        if(tik == 90) { f090(i, j, mySize); }
                        if(tik == 91) { f091(i, j, mySize); }
                        if(tik == 92) { f092(i, j, mySize); }
                        if(tik == 93) { f093(i, j, mySize); }
                        if(tik == 94) { f094(i, j, mySize); }
                        if(tik == 95) { f095(i, j, mySize); }
                        if(tik == 96) { f096(i, j, mySize); }
                        if(tik == 97) { f097(i, j, mySize); }
                        if(tik == 98) { f098(i, j, mySize); }
                        if(tik == 99) { f099(i, j, mySize); }
                        if(tik == 100) { f100(i, j, mySize); }
			if(tik == 101) { f101(i, j, mySize); }
			if(tik == 102) { f102(i, j, mySize); }
			if(tik == 103) { f103(i, j, mySize); }
			if(tik == 104) { f104(i, j, mySize); }
			if(tik == 105) { f105(i, j, mySize); }
			if(tik == 106) { f106(i, j, mySize); }
			if(tik == 107) { f107(i, j, mySize); }
			if(tik == 108) { f108(i, j, mySize); }
			if(tik == 109) { f109(i, j, mySize); }
			if(tik == 110) { f110(i, j, mySize); }
			if(tik == 111) { f111(i, j, mySize); }
			if(tik == 112) { f112(i, j, mySize); }
			if(tik == 113) { f113(i, j, mySize); }
			if(tik == 114) { f114(i, j, mySize); }
			if(tik == 115) { f115(i, j, mySize); }
			if(tik == 116) { f116(i, j, mySize); }
			if(tik == 117) { f117(i, j, mySize); }
			if(tik == 118) { f118(i, j, mySize); }
			if(tik == 119) { f119(i, j, mySize); }
			if(tik == 120) { f120(i, j, mySize); }
			if(tik == 121) { f121(i, j, mySize); }
			if(tik == 122) { f122(i, j, mySize); }
			if(tik == 123) { f123(i, j, mySize); }
			if(tik == 124) { f124(i, j, mySize); }
			if(tik == 125) { f125(i, j, mySize); }
			if(tik == 126) { f126(i, j, mySize); }
			if(tik == 127) { f127(i, j, mySize); }
			if(tik == 128) { f128(i, j, mySize); }
			if(tik == 129) { f129(i, j, mySize); }
			if(tik == 130) { f130(i, j, mySize); }
			if(tik == 131) { f131(i, j, mySize); }
			if(tik == 132) { f132(i, j, mySize); }
			if(tik == 133) { f133(i, j, mySize); }
			if(tik == 134) { f134(i, j, mySize); }
			if(tik == 135) { f135(i, j, mySize); }
			if(tik == 136) { f136(i, j, mySize); }
			if(tik == 137) { f137(i, j, mySize); }
			if(tik == 138) { f138(i, j, mySize); }
			if(tik == 139) { f139(i, j, mySize); }
			if(tik == 140) { f140(i, j, mySize); }
			if(tik == 141) { f141(i, j, mySize); }
			if(tik == 142) { f142(i, j, mySize); }
			if(tik == 143) { f143(i, j, mySize); }
			if(tik == 144) { f144(i, j, mySize); }
			if(tik == 145) { f145(i, j, mySize); }
			if(tik == 146) { f146(i, j, mySize); }
			if(tik == 147) { f147(i, j, mySize); }
			if(tik == 148) { f148(i, j, mySize); }
			if(tik == 149) { f149(i, j, mySize); }
			if(tik == 150) { f150(i, j, mySize); }
if(tik == 151) { f151(i, j, mySize); }
if(tik == 152) { f152(i, j, mySize); }
if(tik == 153) { f153(i, j, mySize); }
if(tik == 154) { f154(i, j, mySize); }
if(tik == 155) { f155(i, j, mySize); }
if(tik == 156) { f156(i, j, mySize); }
if(tik == 157) { f157(i, j, mySize); }
if(tik == 158) { f158(i, j, mySize); }
if(tik == 159) { f159(i, j, mySize); }
if(tik == 160) { f160(i, j, mySize); }
if(tik == 161) { f161(i, j, mySize); }
if(tik == 162) { f162(i, j, mySize); }
if(tik == 163) { f163(i, j, mySize); }
if(tik == 164) { f164(i, j, mySize); }
if(tik == 165) { f165(i, j, mySize); }
if(tik == 166) { f166(i, j, mySize); }
if(tik == 167) { f167(i, j, mySize); }
if(tik == 168) { f168(i, j, mySize); }
if(tik == 169) { f169(i, j, mySize); }
if(tik == 170) { f170(i, j, mySize); }
if(tik == 171) { f171(i, j, mySize); }
if(tik == 172) { f172(i, j, mySize); }
if(tik == 173) { f173(i, j, mySize); }
if(tik == 174) { f174(i, j, mySize); }
if(tik == 175) { f175(i, j, mySize); }
if(tik == 176) { f176(i, j, mySize); }
if(tik == 177) { f177(i, j, mySize); }
if(tik == 178) { f178(i, j, mySize); }
if(tik == 179) { f179(i, j, mySize); }
if(tik == 180) { f180(i, j, mySize); }
if(tik == 181) { f181(i, j, mySize); }
if(tik == 182) { f182(i, j, mySize); }
if(tik == 183) { f183(i, j, mySize); }
if(tik == 184) { f184(i, j, mySize); }
if(tik == 185) { f185(i, j, mySize); }
if(tik == 186) { f186(i, j, mySize); }
if(tik == 187) { f187(i, j, mySize); }
if(tik == 188) { f188(i, j, mySize); }
if(tik == 189) { f189(i, j, mySize); }
if(tik == 190) { f190(i, j, mySize); }
if(tik == 191) { f191(i, j, mySize); }
if(tik == 192) { f192(i, j, mySize); }
if(tik == 193) { f193(i, j, mySize); }
if(tik == 194) { f194(i, j, mySize); }
if(tik == 195) { f195(i, j, mySize); }
if(tik == 196) { f196(i, j, mySize); }
if(tik == 197) { f197(i, j, mySize); }
if(tik == 198) { f198(i, j, mySize); }
if(tik == 199) { f199(i, j, mySize); }
if(tik == 200) { f200(i, j, mySize); }
if(tik == 201) { f201(i, j, mySize); }
if(tik == 202) { f202(i, j, mySize); }
if(tik == 203) { f203(i, j, mySize); }
if(tik == 204) { f204(i, j, mySize); }
if(tik == 205) { f205(i, j, mySize); }
if(tik == 206) { f206(i, j, mySize); }
if(tik == 207) { f207(i, j, mySize); }
if(tik == 208) { f208(i, j, mySize); }
if(tik == 209) { f209(i, j, mySize); }
if(tik == 210) { f210(i, j, mySize); }
if(tik == 211) { f211(i, j, mySize); }
if(tik == 212) { f212(i, j, mySize); }
if(tik == 213) { f213(i, j, mySize); }
if(tik == 214) { f214(i, j, mySize); }
if(tik == 215) { f215(i, j, mySize); }
if(tik == 216) { f216(i, j, mySize); }
if(tik == 217) { f217(i, j, mySize); }
if(tik == 218) { f218(i, j, mySize); }
if(tik == 219) { f219(i, j, mySize); }
if(tik == 220) { f220(i, j, mySize); }
if(tik == 221) { f221(i, j, mySize); }
if(tik == 222) { f222(i, j, mySize); }
if(tik == 223) { f223(i, j, mySize); }
if(tik == 224) { f224(i, j, mySize); }
if(tik == 225) { f225(i, j, mySize); }
if(tik == 226) { f226(i, j, mySize); }
if(tik == 227) { f227(i, j, mySize); }
if(tik == 228) { f228(i, j, mySize); }
if(tik == 229) { f229(i, j, mySize); }
if(tik == 230) { f230(i, j, mySize); }
if(tik == 231) { f231(i, j, mySize); }
if(tik == 232) { f232(i, j, mySize); }
if(tik == 233) { f233(i, j, mySize); }
if(tik == 234) { f234(i, j, mySize); }
if(tik == 235) { f235(i, j, mySize); }
if(tik == 236) { f236(i, j, mySize); }
if(tik == 237) { f237(i, j, mySize); }
if(tik == 238) { f238(i, j, mySize); }
if(tik == 239) { f239(i, j, mySize); }
if(tik == 240) { f240(i, j, mySize); }
if(tik == 241) { f241(i, j, mySize); }
if(tik == 242) { f242(i, j, mySize); }
if(tik == 243) { f243(i, j, mySize); }
if(tik == 244) { f244(i, j, mySize); }
if(tik == 245) { f245(i, j, mySize); }
if(tik == 246) { f246(i, j, mySize); }
if(tik == 247) { f247(i, j, mySize); }
if(tik == 248) { f248(i, j, mySize); }
if(tik == 249) { f249(i, j, mySize); }
if(tik == 250) { f250(i, j, mySize); }

/**/}
		    //}
			//if(bytefilterHead < bytefilter.length-1) {bytefilterHead++;} else {bytefilterHead = 0;}
		    }
		    
                /**************************************************************/                   
		    if(r.nextInt(8)==0){seedMe(i, j); } //Magic;
		    
		    cutBoarders(i, j, mySize); 
		    
		    MAXVAL(i, j, mySize); //For display
                /**************************************************************/
                }//END J LOOP
            }//END I LOOP
        }//END T LOOP
    } // END flipZero

    
    /************************************************************/
    /************************************************************/
    /*********************** FUNCTION BOX ***********************/
    /************************************************************/
    /************************************************************/
    
    //THE RANDOMLY GENERATED FUNCTIONS
    
        private void f000(int i, int j, int mySize) {} private void f001(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] >= 0 ) || ( pointsArray[i][j]<= 0 )){   if((pointsArray[i+1][j] == 0 ) || ( pointsArray[i-1][j]== 0 ) || ( pointsArray[i][j+1]== 0 ) || ( pointsArray[i][j-1]== 0 )){   if((pointsArray[i+1][j] == pointsArray[i][j] )) { pointsArray[i][j]  = 1; pointsArray[i+1][j] -= 0;  } if(( pointsArray[i-1][j]== pointsArray[i][j] )) { pointsArray[i][j]  = 1; pointsArray[i-1][j] -= 0;  } if(( pointsArray[i][j+1]== pointsArray[i][j] )) { pointsArray[i][j]  = 1; pointsArray[i][j+1] -= 0;  } if(( pointsArray[i][j-1]== pointsArray[i][j] )) { pointsArray[i][j]  = 1; pointsArray[i][j-1] -= 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"p0|", "o0a"}, {"=0|", "=0|", "=0|", "=0b"}, {"=Ic", "=Ic", "=Ic", "=Id"}, {" 1.", "-0."}} */
} private void f002(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 0 ) || ( pointsArray[i][j]>= 1 )){   if((pointsArray[i+1][j] < pointsArray[i][j] ) || ( pointsArray[i-1][j]< pointsArray[i][j] && pointsArray[i][j+1]< pointsArray[i][j] ) || ( pointsArray[i][j-1]< pointsArray[i][j] )){   if((pointsArray[i+1][j] <= 0 )) { pointsArray[i][j] += 0; pointsArray[i+1][j] += 0;  } if(( pointsArray[i-1][j]<= 0 )) { pointsArray[i][j] += 0; pointsArray[i-1][j] += 0;  } if(( pointsArray[i][j+1]<= 0 )) { pointsArray[i][j] += 0; pointsArray[i][j+1] += 0;  } if(( pointsArray[i][j-1]<= 0 )) { pointsArray[i][j] += 0; pointsArray[i][j-1] += 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<0|", "p1a"}, {"<I|", "<I&", "<I|", "<Ib"}, {"o0c", "o0c", "o0c", "o0d"}, {"+0.", "+0."}} */
} private void f003(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] <= 2 )){   if((pointsArray[i+1][j] <= pointsArray[i][j] ) || ( pointsArray[i-1][j]<= pointsArray[i][j] && pointsArray[i][j+1]<= pointsArray[i][j] && pointsArray[i][j-1]<= pointsArray[i][j] )){   if((pointsArray[i+1][j] == 0 )) { pointsArray[i][j] += 0; pointsArray[i+1][j] += 1;  } if(( pointsArray[i-1][j]== 0 )) { pointsArray[i][j] += 0; pointsArray[i-1][j] += 1;  } if(( pointsArray[i][j+1]== 0 )) { pointsArray[i][j] += 0; pointsArray[i][j+1] += 1;  } if(( pointsArray[i][j-1]== 0 )) { pointsArray[i][j] += 0; pointsArray[i][j-1] += 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"o2a"}, {"oI|", "oI&", "oI&", "oIb"}, {"=0c", "=0c", "=0c", "=0d"}, {"+0.", "+1."}} */
} private void f004(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] != 0 && pointsArray[i][j]!= 1 )){   if((pointsArray[i+1][j] <= 1 ) || ( pointsArray[i-1][j]<= 1 && pointsArray[i][j+1]<= 1 && pointsArray[i][j-1]<= 1 )){   if((pointsArray[i+1][j] > 0 && pointsArray[i-1][j]> 0 && pointsArray[i][j+1]> 0 && pointsArray[i][j-1]> 0 )) { pointsArray[i][j]  = 1; pointsArray[i+1][j] -= 1; pointsArray[i-1][j] -= 1; pointsArray[i][j+1] -= 1; pointsArray[i][j-1] -= 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"!0&", "!1a"}, {"o1|", "o1&", "o1&", "o1b"}, {">0&", ">0&", ">0&", ">0d"}, {" 1.", "-1.", "-1.", "-1.", "-1."}} */
} private void f005(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] <= 2 ) || ( pointsArray[i][j]< 3 )){   if((pointsArray[i+1][j] <= pointsArray[i][j] && pointsArray[i-1][j]<= pointsArray[i][j] && pointsArray[i][j+1]<= pointsArray[i][j] ) || ( pointsArray[i][j-1]<= pointsArray[i][j] )){   if((pointsArray[i+1][j] == 1 )) { pointsArray[i][j]  = 1; pointsArray[i+1][j] -= 0;  } if(( pointsArray[i-1][j]== 1 )) { pointsArray[i][j]  = 1; pointsArray[i-1][j] -= 0;  } if(( pointsArray[i][j+1]== 1 )) { pointsArray[i][j]  = 1; pointsArray[i][j+1] -= 0;  } if(( pointsArray[i][j-1]== 1 )) { pointsArray[i][j]  = 1; pointsArray[i][j-1] -= 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"o2|", "<3a"}, {"oI&", "oI&", "oI|", "oIb"}, {"=1c", "=1c", "=1c", "=1d"}, {" 1.", "-0."}} */
} private void f006(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] >= 0 ) || ( pointsArray[i][j]== 0 )){   if((pointsArray[i+1][j] == pointsArray[i][j] && pointsArray[i-1][j]== pointsArray[i][j] ) || ( pointsArray[i][j+1]== pointsArray[i][j] ) || ( pointsArray[i][j-1]== pointsArray[i][j] )){   if((pointsArray[i+1][j] > 1 )) { pointsArray[i][j] -= 0; pointsArray[i+1][j]  = 1;  } if(( pointsArray[i-1][j]> 1 )) { pointsArray[i][j] -= 0; pointsArray[i-1][j]  = 1;  } if(( pointsArray[i][j+1]> 1 )) { pointsArray[i][j] -= 0; pointsArray[i][j+1]  = 1;  } if(( pointsArray[i][j-1]> 1 )) { pointsArray[i][j] -= 0; pointsArray[i][j-1]  = 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"p0|", "=0a"}, {"=I&", "=I|", "=I|", "=Ib"}, {">1c", ">1c", ">1c", ">1d"}, {"-0.", " 1."}} */
} private void f007(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] <= 0 && pointsArray[i][j]>= 0 )){   if((pointsArray[i+1][j] != 1 ) || ( pointsArray[i-1][j]!= 1 ) || ( pointsArray[i][j+1]!= 1 ) || ( pointsArray[i][j-1]!= 1 )){   if((pointsArray[i+1][j] < 0 ) || ( pointsArray[i-1][j]< 0 )) { pointsArray[i][j] += 0; pointsArray[i+1][j]  = 0; pointsArray[i-1][j]  = 0;  } if(( pointsArray[i][j+1]< 0 && pointsArray[i][j-1]< 0 )) { pointsArray[i][j] += 0; pointsArray[i][j+1]  = 0; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"o0&", "p0a"}, {"!1|", "!1|", "!1|", "!1b"}, {"<0|", "<0c", "<0&", "<0d"}, {"+0.", " 0.", " 0."}} */
} private void f008(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 3 ) || ( pointsArray[i][j]> 1 )){   if((pointsArray[i+1][j] == 0 && pointsArray[i-1][j]== 0 ) || ( pointsArray[i][j+1]== 0 ) || ( pointsArray[i][j-1]== 0 )){   if((pointsArray[i+1][j] == 1 )) { pointsArray[i][j] -= 0; pointsArray[i+1][j]  = 0;  } if(( pointsArray[i-1][j]== 1 )) { pointsArray[i][j] -= 0; pointsArray[i-1][j]  = 0;  } if(( pointsArray[i][j+1]== 1 )) { pointsArray[i][j] -= 0; pointsArray[i][j+1]  = 0;  } if(( pointsArray[i][j-1]== 1 )) { pointsArray[i][j] -= 0; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<3|", ">1a"}, {"=0&", "=0|", "=0|", "=0b"}, {"=1c", "=1c", "=1c", "=1d"}, {"-0.", " 0."}} */
} private void f009(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] != 1 )){   if((pointsArray[i+1][j] <= 0 ) || ( pointsArray[i-1][j]<= 0 ) || ( pointsArray[i][j+1]<= 0 ) || ( pointsArray[i][j-1]<= 0 )){   if((pointsArray[i+1][j] > 1 )) { pointsArray[i][j] -= 0; pointsArray[i+1][j] += 1;  } if(( pointsArray[i-1][j]> 1 )) { pointsArray[i][j] -= 0; pointsArray[i-1][j] += 1;  } if(( pointsArray[i][j+1]> 1 )) { pointsArray[i][j] -= 0; pointsArray[i][j+1] += 1;  } if(( pointsArray[i][j-1]> 1 )) { pointsArray[i][j] -= 0; pointsArray[i][j-1] += 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"!1a"}, {"o0|", "o0|", "o0|", "o0b"}, {">1c", ">1c", ">1c", ">1d"}, {"-0.", "+1."}} */
} private void f010(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 2 )){   if((pointsArray[i+1][j] != 2 && pointsArray[i-1][j]!= 2 && pointsArray[i][j+1]!= 2 && pointsArray[i][j-1]!= 2 )){   if((pointsArray[i+1][j] < pointsArray[i][j] ) || ( pointsArray[i-1][j]< pointsArray[i][j] && pointsArray[i][j+1]< pointsArray[i][j] ) || ( pointsArray[i][j-1]< pointsArray[i][j] )) { pointsArray[i][j]  = 1; pointsArray[i+1][j] -= 1; pointsArray[i-1][j] -= 1; pointsArray[i][j+1] -= 1; pointsArray[i][j-1] -= 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">2a"}, {"!2&", "!2&", "!2&", "!2b"}, {"<I|", "<I&", "<I|", "<Id"}, {" 1.", "-1.", "-1.", "-1.", "-1."}} */
} private void f011(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 1 && pointsArray[i][j]!= 1 )){   if((pointsArray[i+1][j] <= pointsArray[i][j] ) || ( pointsArray[i-1][j]<= pointsArray[i][j] && pointsArray[i][j+1]<= pointsArray[i][j] && pointsArray[i][j-1]<= pointsArray[i][j] )){   if((pointsArray[i+1][j] >= pointsArray[i][j] ) || ( pointsArray[i-1][j]>= pointsArray[i][j] && pointsArray[i][j+1]>= pointsArray[i][j] ) || ( pointsArray[i][j-1]>= pointsArray[i][j] )) { pointsArray[i][j] += 0; pointsArray[i+1][j] += 0; pointsArray[i-1][j] += 0; pointsArray[i][j+1] += 0; pointsArray[i][j-1] += 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">1&", "!1a"}, {"oI|", "oI&", "oI&", "oIb"}, {"pI|", "pI&", "pI|", "pId"}, {"+0.", "+0.", "+0.", "+0.", "+0."}} */
} private void f012(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] != 1 )){   if((pointsArray[i+1][j] < 0 ) || ( pointsArray[i-1][j]< 0 && pointsArray[i][j+1]< 0 && pointsArray[i][j-1]< 0 )){   if((pointsArray[i+1][j] > pointsArray[i][j] )) { pointsArray[i][j] += 0; pointsArray[i+1][j] += 0;  } if(( pointsArray[i-1][j]> pointsArray[i][j] )) { pointsArray[i][j] += 0; pointsArray[i-1][j] += 0;  } if(( pointsArray[i][j+1]> pointsArray[i][j] )) { pointsArray[i][j] += 0; pointsArray[i][j+1] += 0;  } if(( pointsArray[i][j-1]> pointsArray[i][j] )) { pointsArray[i][j] += 0; pointsArray[i][j-1] += 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"!1a"}, {"<0|", "<0&", "<0&", "<0b"}, {">Ic", ">Ic", ">Ic", ">Id"}, {"+0.", "+0."}} */
} private void f013(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] == 3 ) || ( pointsArray[i][j]!= 2 )){   if((pointsArray[i+1][j] <= 0 && pointsArray[i-1][j]<= 0 ) || ( pointsArray[i][j+1]<= 0 && pointsArray[i][j-1]<= 0 )){   if((pointsArray[i+1][j] != pointsArray[i][j] && pointsArray[i-1][j]!= pointsArray[i][j] )) { pointsArray[i][j] += 3; pointsArray[i+1][j] += 0; pointsArray[i-1][j] += 0;  } if(( pointsArray[i][j+1]!= pointsArray[i][j] ) || ( pointsArray[i][j-1]!= pointsArray[i][j] )) { pointsArray[i][j] += 3; pointsArray[i][j+1] += 0; pointsArray[i][j-1] += 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"=3|", "!2a"}, {"o0&", "o0|", "o0&", "o0b"}, {"!I&", "!Ic", "!I|", "!Id"}, {"+3.", "+0.", "+0."}} */
} private void f014(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 1 )){   if((pointsArray[i+1][j] < 0 ) || ( pointsArray[i-1][j]< 0 ) || ( pointsArray[i][j+1]< 0 && pointsArray[i][j-1]< 0 )){   if((pointsArray[i+1][j] == 0 )) { pointsArray[i][j] += 1; pointsArray[i+1][j] += 1;  } if(( pointsArray[i-1][j]== 0 )) { pointsArray[i][j] += 1; pointsArray[i-1][j] += 1;  } if(( pointsArray[i][j+1]== 0 )) { pointsArray[i][j] += 1; pointsArray[i][j+1] += 1;  } if(( pointsArray[i][j-1]== 0 )) { pointsArray[i][j] += 1; pointsArray[i][j-1] += 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">1a"}, {"<0|", "<0|", "<0&", "<0b"}, {"=0c", "=0c", "=0c", "=0d"}, {"+1.", "+1."}} */
} private void f015(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] != 0 && pointsArray[i][j]< 1 )){   if((pointsArray[i+1][j] <= 3 && pointsArray[i-1][j]<= 3 && pointsArray[i][j+1]<= 3 ) || ( pointsArray[i][j-1]<= 3 )){   if((pointsArray[i+1][j] <= 0 && pointsArray[i-1][j]<= 0 )) { pointsArray[i][j] += 2; pointsArray[i+1][j] -= 2; pointsArray[i-1][j] -= 2;  } if(( pointsArray[i][j+1]<= 0 && pointsArray[i][j-1]<= 0 )) { pointsArray[i][j] += 2; pointsArray[i][j+1] -= 2; pointsArray[i][j-1] -= 2;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"!0&", "<1a"}, {"o3&", "o3&", "o3|", "o3b"}, {"o0&", "o0c", "o0&", "o0d"}, {"+2.", "-2.", "-2."}} */
} private void f016(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 1 ) || ( pointsArray[i][j]> 1 )){   if((pointsArray[i+1][j] <= pointsArray[i][j] ) || ( pointsArray[i-1][j]<= pointsArray[i][j] ) || ( pointsArray[i][j+1]<= pointsArray[i][j] ) || ( pointsArray[i][j-1]<= pointsArray[i][j] )){   if((pointsArray[i+1][j] <= 1 ) || ( pointsArray[i-1][j]<= 1 && pointsArray[i][j+1]<= 1 && pointsArray[i][j-1]<= 1 )) { pointsArray[i][j] -= 0; pointsArray[i+1][j]  = 1; pointsArray[i-1][j]  = 1; pointsArray[i][j+1]  = 1; pointsArray[i][j-1]  = 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">1|", ">1a"}, {"oI|", "oI|", "oI|", "oIb"}, {"o1|", "o1&", "o1&", "o1d"}, {"-0.", " 1.", " 1.", " 1.", " 1."}} */
} private void f017(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 0 )){   if((pointsArray[i+1][j] >= 1 && pointsArray[i-1][j]>= 1 ) || ( pointsArray[i][j+1]>= 1 && pointsArray[i][j-1]>= 1 )){   if((pointsArray[i+1][j] < 1 )) { pointsArray[i][j]  = 1; pointsArray[i+1][j] += 0;  } if(( pointsArray[i-1][j]< 1 )) { pointsArray[i][j]  = 1; pointsArray[i-1][j] += 0;  } if(( pointsArray[i][j+1]< 1 )) { pointsArray[i][j]  = 1; pointsArray[i][j+1] += 0;  } if(( pointsArray[i][j-1]< 1 )) { pointsArray[i][j]  = 1; pointsArray[i][j-1] += 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">0a"}, {"p1&", "p1|", "p1&", "p1b"}, {"<1c", "<1c", "<1c", "<1d"}, {" 1.", "+0."}} */
} private void f018(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] >= 3 )){   if((pointsArray[i+1][j] == 0 && pointsArray[i-1][j]== 0 ) || ( pointsArray[i][j+1]== 0 && pointsArray[i][j-1]== 0 )){   if((pointsArray[i+1][j] == 0 ) || ( pointsArray[i-1][j]== 0 )) { pointsArray[i][j] += 2; pointsArray[i+1][j] += 3; pointsArray[i-1][j] += 3;  } if(( pointsArray[i][j+1]== 0 ) || ( pointsArray[i][j-1]== 0 )) { pointsArray[i][j] += 2; pointsArray[i][j+1] += 3; pointsArray[i][j-1] += 3;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"p3a"}, {"=0&", "=0|", "=0&", "=0b"}, {"=0|", "=0c", "=0|", "=0d"}, {"+2.", "+3.", "+3."}} */
} private void f019(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] != 0 )){   if((pointsArray[i+1][j] == 1 && pointsArray[i-1][j]== 1 && pointsArray[i][j+1]== 1 ) || ( pointsArray[i][j-1]== 1 )){   if((pointsArray[i+1][j] != 0 ) || ( pointsArray[i-1][j]!= 0 )) { pointsArray[i][j] += 0; pointsArray[i+1][j] += 0; pointsArray[i-1][j] += 0;  } if(( pointsArray[i][j+1]!= 0 ) || ( pointsArray[i][j-1]!= 0 )) { pointsArray[i][j] += 0; pointsArray[i][j+1] += 0; pointsArray[i][j-1] += 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"!0a"}, {"=1&", "=1&", "=1|", "=1b"}, {"!0|", "!0c", "!0|", "!0d"}, {"+0.", "+0.", "+0."}} */
} private void f020(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] >= 2 )){   if((pointsArray[i+1][j] <= pointsArray[i][j] ) || ( pointsArray[i-1][j]<= pointsArray[i][j] && pointsArray[i][j+1]<= pointsArray[i][j] && pointsArray[i][j-1]<= pointsArray[i][j] )){   if((pointsArray[i+1][j] != pointsArray[i][j] )) { pointsArray[i][j]  = 2; pointsArray[i+1][j]  = 2;  } if(( pointsArray[i-1][j]!= pointsArray[i][j] )) { pointsArray[i][j]  = 2; pointsArray[i-1][j]  = 2;  } if(( pointsArray[i][j+1]!= pointsArray[i][j] )) { pointsArray[i][j]  = 2; pointsArray[i][j+1]  = 2;  } if(( pointsArray[i][j-1]!= pointsArray[i][j] )) { pointsArray[i][j]  = 2; pointsArray[i][j-1]  = 2;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"p2a"}, {"oI|", "oI&", "oI&", "oIb"}, {"!Ic", "!Ic", "!Ic", "!Id"}, {" 2.", " 2."}} */
} private void f021(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] != 0 && pointsArray[i][j]!= 0 )){   if((pointsArray[i+1][j] < 0 ) || ( pointsArray[i-1][j]< 0 && pointsArray[i][j+1]< 0 && pointsArray[i][j-1]< 0 )){   if((pointsArray[i+1][j] <= 0 && pointsArray[i-1][j]<= 0 )) { pointsArray[i][j] += 1; pointsArray[i+1][j]  = 1; pointsArray[i-1][j]  = 1;  } if(( pointsArray[i][j+1]<= 0 && pointsArray[i][j-1]<= 0 )) { pointsArray[i][j] += 1; pointsArray[i][j+1]  = 1; pointsArray[i][j-1]  = 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"!0&", "!0a"}, {"<0|", "<0&", "<0&", "<0b"}, {"o0&", "o0c", "o0&", "o0d"}, {"+1.", " 1.", " 1."}} */
} private void f022(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] >= 1 ) || ( pointsArray[i][j]== 1 )){   if((pointsArray[i+1][j] == 1 ) || ( pointsArray[i-1][j]== 1 ) || ( pointsArray[i][j+1]== 1 ) || ( pointsArray[i][j-1]== 1 )){   if((pointsArray[i+1][j] == 0 ) || ( pointsArray[i-1][j]== 0 )) { pointsArray[i][j]  = 1; pointsArray[i+1][j] -= 0; pointsArray[i-1][j] -= 0;  } if(( pointsArray[i][j+1]== 0 && pointsArray[i][j-1]== 0 )) { pointsArray[i][j]  = 1; pointsArray[i][j+1] -= 0; pointsArray[i][j-1] -= 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"p1|", "=1a"}, {"=1|", "=1|", "=1|", "=1b"}, {"=0|", "=0c", "=0&", "=0d"}, {" 1.", "-0.", "-0."}} */
} private void f023(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 1 && pointsArray[i][j]<= 3 )){   if((pointsArray[i+1][j] != 1 ) || ( pointsArray[i-1][j]!= 1 && pointsArray[i][j+1]!= 1 && pointsArray[i][j-1]!= 1 )){   if((pointsArray[i+1][j] != pointsArray[i][j] ) || ( pointsArray[i-1][j]!= pointsArray[i][j] && pointsArray[i][j+1]!= pointsArray[i][j] ) || ( pointsArray[i][j-1]!= pointsArray[i][j] )) { pointsArray[i][j] -= 3; pointsArray[i+1][j]  = 0; pointsArray[i-1][j]  = 0; pointsArray[i][j+1]  = 0; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">1&", "o3a"}, {"!1|", "!1&", "!1&", "!1b"}, {"!I|", "!I&", "!I|", "!Id"}, {"-3.", " 0.", " 0.", " 0.", " 0."}} */
} private void f024(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] <= 0 && pointsArray[i][j]>= 0 )){   if((pointsArray[i+1][j] >= 1 ) || ( pointsArray[i-1][j]>= 1 && pointsArray[i][j+1]>= 1 ) || ( pointsArray[i][j-1]>= 1 )){   if((pointsArray[i+1][j] < pointsArray[i][j] ) || ( pointsArray[i-1][j]< pointsArray[i][j] && pointsArray[i][j+1]< pointsArray[i][j] ) || ( pointsArray[i][j-1]< pointsArray[i][j] )) { pointsArray[i][j] -= 1; pointsArray[i+1][j] += 1; pointsArray[i-1][j] += 1; pointsArray[i][j+1] += 1; pointsArray[i][j-1] += 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"o0&", "p0a"}, {"p1|", "p1&", "p1|", "p1b"}, {"<I|", "<I&", "<I|", "<Id"}, {"-1.", "+1.", "+1.", "+1.", "+1."}} */
} private void f025(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 2 && pointsArray[i][j]!= 0 )){   if((pointsArray[i+1][j] == 3 ) || ( pointsArray[i-1][j]== 3 && pointsArray[i][j+1]== 3 && pointsArray[i][j-1]== 3 )){   if((pointsArray[i+1][j] == 1 ) || ( pointsArray[i-1][j]== 1 && pointsArray[i][j+1]== 1 ) || ( pointsArray[i][j-1]== 1 )) { pointsArray[i][j] += 0; pointsArray[i+1][j] -= 3; pointsArray[i-1][j] -= 3; pointsArray[i][j+1] -= 3; pointsArray[i][j-1] -= 3;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">2&", "!0a"}, {"=3|", "=3&", "=3&", "=3b"}, {"=1|", "=1&", "=1|", "=1d"}, {"+0.", "-3.", "-3.", "-3.", "-3."}} */
} private void f026(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] == 1 )){   if((pointsArray[i+1][j] >= pointsArray[i][j] ) || ( pointsArray[i-1][j]>= pointsArray[i][j] ) || ( pointsArray[i][j+1]>= pointsArray[i][j] ) || ( pointsArray[i][j-1]>= pointsArray[i][j] )){   if((pointsArray[i+1][j] > 1 )) { pointsArray[i][j] += 0; pointsArray[i+1][j] += 0;  } if(( pointsArray[i-1][j]> 1 )) { pointsArray[i][j] += 0; pointsArray[i-1][j] += 0;  } if(( pointsArray[i][j+1]> 1 )) { pointsArray[i][j] += 0; pointsArray[i][j+1] += 0;  } if(( pointsArray[i][j-1]> 1 )) { pointsArray[i][j] += 0; pointsArray[i][j-1] += 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"=1a"}, {"pI|", "pI|", "pI|", "pIb"}, {">1c", ">1c", ">1c", ">1d"}, {"+0.", "+0."}} */
} private void f027(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] == 1 && pointsArray[i][j]!= 0 )){   if((pointsArray[i+1][j] < 1 ) || ( pointsArray[i-1][j]< 1 ) || ( pointsArray[i][j+1]< 1 ) || ( pointsArray[i][j-1]< 1 )){   if((pointsArray[i+1][j] < 1 )) { pointsArray[i][j]  = 1; pointsArray[i+1][j] -= 1;  } if(( pointsArray[i-1][j]< 1 )) { pointsArray[i][j]  = 1; pointsArray[i-1][j] -= 1;  } if(( pointsArray[i][j+1]< 1 )) { pointsArray[i][j]  = 1; pointsArray[i][j+1] -= 1;  } if(( pointsArray[i][j-1]< 1 )) { pointsArray[i][j]  = 1; pointsArray[i][j-1] -= 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"=1&", "!0a"}, {"<1|", "<1|", "<1|", "<1b"}, {"<1c", "<1c", "<1c", "<1d"}, {" 1.", "-1."}} */
} private void f028(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] == 1 )){   if((pointsArray[i+1][j] < pointsArray[i][j] && pointsArray[i-1][j]< pointsArray[i][j] && pointsArray[i][j+1]< pointsArray[i][j] ) || ( pointsArray[i][j-1]< pointsArray[i][j] )){   if((pointsArray[i+1][j] > 2 )) { pointsArray[i][j]  = 0; pointsArray[i+1][j] -= 1;  } if(( pointsArray[i-1][j]> 2 )) { pointsArray[i][j]  = 0; pointsArray[i-1][j] -= 1;  } if(( pointsArray[i][j+1]> 2 )) { pointsArray[i][j]  = 0; pointsArray[i][j+1] -= 1;  } if(( pointsArray[i][j-1]> 2 )) { pointsArray[i][j]  = 0; pointsArray[i][j-1] -= 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"=1a"}, {"<I&", "<I&", "<I|", "<Ib"}, {">2c", ">2c", ">2c", ">2d"}, {" 0.", "-1."}} */
} private void f029(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 1 ) || ( pointsArray[i][j]!= 0 )){   if((pointsArray[i+1][j] < 0 ) || ( pointsArray[i-1][j]< 0 ) || ( pointsArray[i][j+1]< 0 ) || ( pointsArray[i][j-1]< 0 )){   if((pointsArray[i+1][j] < 0 ) || ( pointsArray[i-1][j]< 0 )) { pointsArray[i][j]  = 1; pointsArray[i+1][j] += 1; pointsArray[i-1][j] += 1;  } if(( pointsArray[i][j+1]< 0 && pointsArray[i][j-1]< 0 )) { pointsArray[i][j]  = 1; pointsArray[i][j+1] += 1; pointsArray[i][j-1] += 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">1|", "!0a"}, {"<0|", "<0|", "<0|", "<0b"}, {"<0|", "<0c", "<0&", "<0d"}, {" 1.", "+1.", "+1."}} */
} private void f030(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] <= 0 ) || ( pointsArray[i][j]>= 0 )){   if((pointsArray[i+1][j] > pointsArray[i][j] ) || ( pointsArray[i-1][j]> pointsArray[i][j] ) || ( pointsArray[i][j+1]> pointsArray[i][j] && pointsArray[i][j-1]> pointsArray[i][j] )){   if((pointsArray[i+1][j] > 0 && pointsArray[i-1][j]> 0 )) { pointsArray[i][j]  = 3; pointsArray[i+1][j]  = 3; pointsArray[i-1][j]  = 3;  } if(( pointsArray[i][j+1]> 0 && pointsArray[i][j-1]> 0 )) { pointsArray[i][j]  = 3; pointsArray[i][j+1]  = 3; pointsArray[i][j-1]  = 3;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"o0|", "p0a"}, {">I|", ">I|", ">I&", ">Ib"}, {">0&", ">0c", ">0&", ">0d"}, {" 3.", " 3.", " 3."}} */
} private void f031(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] != 1 )){   if((pointsArray[i+1][j] >= pointsArray[i][j] && pointsArray[i-1][j]>= pointsArray[i][j] && pointsArray[i][j+1]>= pointsArray[i][j] ) || ( pointsArray[i][j-1]>= pointsArray[i][j] )){   if((pointsArray[i+1][j] > 0 ) || ( pointsArray[i-1][j]> 0 )) { pointsArray[i][j]  = 0; pointsArray[i+1][j] -= 1; pointsArray[i-1][j] -= 1;  } if(( pointsArray[i][j+1]> 0 && pointsArray[i][j-1]> 0 )) { pointsArray[i][j]  = 0; pointsArray[i][j+1] -= 1; pointsArray[i][j-1] -= 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"!1a"}, {"pI&", "pI&", "pI|", "pIb"}, {">0|", ">0c", ">0&", ">0d"}, {" 0.", "-1.", "-1."}} */
} private void f032(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] != 0 )){   if((pointsArray[i+1][j] >= pointsArray[i][j] ) || ( pointsArray[i-1][j]>= pointsArray[i][j] && pointsArray[i][j+1]>= pointsArray[i][j] && pointsArray[i][j-1]>= pointsArray[i][j] )){   if((pointsArray[i+1][j] >= pointsArray[i][j] ) || ( pointsArray[i-1][j]>= pointsArray[i][j] && pointsArray[i][j+1]>= pointsArray[i][j] && pointsArray[i][j-1]>= pointsArray[i][j] )) { pointsArray[i][j] += 1; pointsArray[i+1][j] += 1; pointsArray[i-1][j] += 1; pointsArray[i][j+1] += 1; pointsArray[i][j-1] += 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"!0a"}, {"pI|", "pI&", "pI&", "pIb"}, {"pI|", "pI&", "pI&", "pId"}, {"+1.", "+1.", "+1.", "+1.", "+1."}} */
} private void f033(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] >= 1 )){   if((pointsArray[i+1][j] <= 1 && pointsArray[i-1][j]<= 1 ) || ( pointsArray[i][j+1]<= 1 && pointsArray[i][j-1]<= 1 )){   if((pointsArray[i+1][j] != 0 && pointsArray[i-1][j]!= 0 ) || ( pointsArray[i][j+1]!= 0 ) || ( pointsArray[i][j-1]!= 0 )) { pointsArray[i][j] -= 2; pointsArray[i+1][j] += 0; pointsArray[i-1][j] += 0; pointsArray[i][j+1] += 0; pointsArray[i][j-1] += 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"p1a"}, {"o1&", "o1|", "o1&", "o1b"}, {"!0&", "!0|", "!0|", "!0d"}, {"-2.", "+0.", "+0.", "+0.", "+0."}} */
} private void f034(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] != 0 )){   if((pointsArray[i+1][j] > 0 ) || ( pointsArray[i-1][j]> 0 && pointsArray[i][j+1]> 0 && pointsArray[i][j-1]> 0 )){   if((pointsArray[i+1][j] < 1 )) { pointsArray[i][j] -= 1; pointsArray[i+1][j] -= 1;  } if(( pointsArray[i-1][j]< 1 )) { pointsArray[i][j] -= 1; pointsArray[i-1][j] -= 1;  } if(( pointsArray[i][j+1]< 1 )) { pointsArray[i][j] -= 1; pointsArray[i][j+1] -= 1;  } if(( pointsArray[i][j-1]< 1 )) { pointsArray[i][j] -= 1; pointsArray[i][j-1] -= 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"!0a"}, {">0|", ">0&", ">0&", ">0b"}, {"<1c", "<1c", "<1c", "<1d"}, {"-1.", "-1."}} */
} private void f035(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] != 1 && pointsArray[i][j]<= 0 )){   if((pointsArray[i+1][j] == 0 && pointsArray[i-1][j]== 0 && pointsArray[i][j+1]== 0 ) || ( pointsArray[i][j-1]== 0 )){   if((pointsArray[i+1][j] <= pointsArray[i][j] )) { pointsArray[i][j]  = 2; pointsArray[i+1][j] -= 3;  } if(( pointsArray[i-1][j]<= pointsArray[i][j] )) { pointsArray[i][j]  = 2; pointsArray[i-1][j] -= 3;  } if(( pointsArray[i][j+1]<= pointsArray[i][j] )) { pointsArray[i][j]  = 2; pointsArray[i][j+1] -= 3;  } if(( pointsArray[i][j-1]<= pointsArray[i][j] )) { pointsArray[i][j]  = 2; pointsArray[i][j-1] -= 3;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"!1&", "o0a"}, {"=0&", "=0&", "=0|", "=0b"}, {"oIc", "oIc", "oIc", "oId"}, {" 2.", "-3."}} */
} private void f036(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] <= 1 )){   if((pointsArray[i+1][j] >= 1 && pointsArray[i-1][j]>= 1 ) || ( pointsArray[i][j+1]>= 1 && pointsArray[i][j-1]>= 1 )){   if((pointsArray[i+1][j] < 1 && pointsArray[i-1][j]< 1 && pointsArray[i][j+1]< 1 ) || ( pointsArray[i][j-1]< 1 )) { pointsArray[i][j]  = 0; pointsArray[i+1][j] -= 1; pointsArray[i-1][j] -= 1; pointsArray[i][j+1] -= 1; pointsArray[i][j-1] -= 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"o1a"}, {"p1&", "p1|", "p1&", "p1b"}, {"<1&", "<1&", "<1|", "<1d"}, {" 0.", "-1.", "-1.", "-1.", "-1."}} */
} private void f037(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] == 0 ) || ( pointsArray[i][j]< 1 )){   if((pointsArray[i+1][j] < 1 ) || ( pointsArray[i-1][j]< 1 && pointsArray[i][j+1]< 1 ) || ( pointsArray[i][j-1]< 1 )){   if((pointsArray[i+1][j] > pointsArray[i][j] ) || ( pointsArray[i-1][j]> pointsArray[i][j] )) { pointsArray[i][j] -= 0; pointsArray[i+1][j]  = 0; pointsArray[i-1][j]  = 0;  } if(( pointsArray[i][j+1]> pointsArray[i][j] && pointsArray[i][j-1]> pointsArray[i][j] )) { pointsArray[i][j] -= 0; pointsArray[i][j+1]  = 0; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"=0|", "<1a"}, {"<1|", "<1&", "<1|", "<1b"}, {">I|", ">Ic", ">I&", ">Id"}, {"-0.", " 0.", " 0."}} */
} private void f038(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] == 0 ) || ( pointsArray[i][j]< 2 )){   if((pointsArray[i+1][j] >= 3 && pointsArray[i-1][j]>= 3 && pointsArray[i][j+1]>= 3 && pointsArray[i][j-1]>= 3 )){   if((pointsArray[i+1][j] > pointsArray[i][j] )) { pointsArray[i][j]  = 2; pointsArray[i+1][j]  = 1;  } if(( pointsArray[i-1][j]> pointsArray[i][j] )) { pointsArray[i][j]  = 2; pointsArray[i-1][j]  = 1;  } if(( pointsArray[i][j+1]> pointsArray[i][j] )) { pointsArray[i][j]  = 2; pointsArray[i][j+1]  = 1;  } if(( pointsArray[i][j-1]> pointsArray[i][j] )) { pointsArray[i][j]  = 2; pointsArray[i][j-1]  = 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"=0|", "<2a"}, {"p3&", "p3&", "p3&", "p3b"}, {">Ic", ">Ic", ">Ic", ">Id"}, {" 2.", " 1."}} */
} private void f039(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] >= 0 )){   if((pointsArray[i+1][j] == pointsArray[i][j] ) || ( pointsArray[i-1][j]== pointsArray[i][j] && pointsArray[i][j+1]== pointsArray[i][j] && pointsArray[i][j-1]== pointsArray[i][j] )){   if((pointsArray[i+1][j] <= 1 && pointsArray[i-1][j]<= 1 )) { pointsArray[i][j]  = 1; pointsArray[i+1][j] -= 1; pointsArray[i-1][j] -= 1;  } if(( pointsArray[i][j+1]<= 1 ) || ( pointsArray[i][j-1]<= 1 )) { pointsArray[i][j]  = 1; pointsArray[i][j+1] -= 1; pointsArray[i][j-1] -= 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"p0a"}, {"=I|", "=I&", "=I&", "=Ib"}, {"o1&", "o1c", "o1|", "o1d"}, {" 1.", "-1.", "-1."}} */
} private void f040(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 0 ) || ( pointsArray[i][j]== 1 )){   if((pointsArray[i+1][j] <= 3 ) || ( pointsArray[i-1][j]<= 3 && pointsArray[i][j+1]<= 3 ) || ( pointsArray[i][j-1]<= 3 )){   if((pointsArray[i+1][j] <= pointsArray[i][j] )) { pointsArray[i][j] -= 1; pointsArray[i+1][j]  = 1;  } if(( pointsArray[i-1][j]<= pointsArray[i][j] )) { pointsArray[i][j] -= 1; pointsArray[i-1][j]  = 1;  } if(( pointsArray[i][j+1]<= pointsArray[i][j] )) { pointsArray[i][j] -= 1; pointsArray[i][j+1]  = 1;  } if(( pointsArray[i][j-1]<= pointsArray[i][j] )) { pointsArray[i][j] -= 1; pointsArray[i][j-1]  = 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">0|", "=1a"}, {"o3|", "o3&", "o3|", "o3b"}, {"oIc", "oIc", "oIc", "oId"}, {"-1.", " 1."}} */
} private void f041(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] <= 1 )){   if((pointsArray[i+1][j] == 0 && pointsArray[i-1][j]== 0 ) || ( pointsArray[i][j+1]== 0 ) || ( pointsArray[i][j-1]== 0 )){   if((pointsArray[i+1][j] == pointsArray[i][j] )) { pointsArray[i][j]  = 1; pointsArray[i+1][j] += 0;  } if(( pointsArray[i-1][j]== pointsArray[i][j] )) { pointsArray[i][j]  = 1; pointsArray[i-1][j] += 0;  } if(( pointsArray[i][j+1]== pointsArray[i][j] )) { pointsArray[i][j]  = 1; pointsArray[i][j+1] += 0;  } if(( pointsArray[i][j-1]== pointsArray[i][j] )) { pointsArray[i][j]  = 1; pointsArray[i][j-1] += 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"o1a"}, {"=0&", "=0|", "=0|", "=0b"}, {"=Ic", "=Ic", "=Ic", "=Id"}, {" 1.", "+0."}} */
} private void f042(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] == 1 ) || ( pointsArray[i][j]>= 0 )){   if((pointsArray[i+1][j] >= 1 && pointsArray[i-1][j]>= 1 ) || ( pointsArray[i][j+1]>= 1 && pointsArray[i][j-1]>= 1 )){   if((pointsArray[i+1][j] <= 1 )) { pointsArray[i][j] -= 1; pointsArray[i+1][j] += 1;  } if(( pointsArray[i-1][j]<= 1 )) { pointsArray[i][j] -= 1; pointsArray[i-1][j] += 1;  } if(( pointsArray[i][j+1]<= 1 )) { pointsArray[i][j] -= 1; pointsArray[i][j+1] += 1;  } if(( pointsArray[i][j-1]<= 1 )) { pointsArray[i][j] -= 1; pointsArray[i][j-1] += 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"=1|", "p0a"}, {"p1&", "p1|", "p1&", "p1b"}, {"o1c", "o1c", "o1c", "o1d"}, {"-1.", "+1."}} */
} private void f043(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 2 )){   if((pointsArray[i+1][j] >= 2 ) || ( pointsArray[i-1][j]>= 2 ) || ( pointsArray[i][j+1]>= 2 && pointsArray[i][j-1]>= 2 )){   if((pointsArray[i+1][j] < pointsArray[i][j] && pointsArray[i-1][j]< pointsArray[i][j] )) { pointsArray[i][j] += 0; pointsArray[i+1][j]  = 3; pointsArray[i-1][j]  = 3;  } if(( pointsArray[i][j+1]< pointsArray[i][j] ) || ( pointsArray[i][j-1]< pointsArray[i][j] )) { pointsArray[i][j] += 0; pointsArray[i][j+1]  = 3; pointsArray[i][j-1]  = 3;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<2a"}, {"p2|", "p2|", "p2&", "p2b"}, {"<I&", "<Ic", "<I|", "<Id"}, {"+0.", " 3.", " 3."}} */
} private void f044(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] <= 1 )){   if((pointsArray[i+1][j] == 1 && pointsArray[i-1][j]== 1 && pointsArray[i][j+1]== 1 && pointsArray[i][j-1]== 1 )){   if((pointsArray[i+1][j] == 1 ) || ( pointsArray[i-1][j]== 1 )) { pointsArray[i][j] += 1; pointsArray[i+1][j] += 1; pointsArray[i-1][j] += 1;  } if(( pointsArray[i][j+1]== 1 ) || ( pointsArray[i][j-1]== 1 )) { pointsArray[i][j] += 1; pointsArray[i][j+1] += 1; pointsArray[i][j-1] += 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"o1a"}, {"=1&", "=1&", "=1&", "=1b"}, {"=1|", "=1c", "=1|", "=1d"}, {"+1.", "+1.", "+1."}} */
} private void f045(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 0 )){   if((pointsArray[i+1][j] == pointsArray[i][j] && pointsArray[i-1][j]== pointsArray[i][j] && pointsArray[i][j+1]== pointsArray[i][j] && pointsArray[i][j-1]== pointsArray[i][j] )){   if((pointsArray[i+1][j] == pointsArray[i][j] ) || ( pointsArray[i-1][j]== pointsArray[i][j] && pointsArray[i][j+1]== pointsArray[i][j] && pointsArray[i][j-1]== pointsArray[i][j] )) { pointsArray[i][j]  = 1; pointsArray[i+1][j] -= 3; pointsArray[i-1][j] -= 3; pointsArray[i][j+1] -= 3; pointsArray[i][j-1] -= 3;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<0a"}, {"=I&", "=I&", "=I&", "=Ib"}, {"=I|", "=I&", "=I&", "=Id"}, {" 1.", "-3.", "-3.", "-3.", "-3."}} */
} private void f046(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] != 1 ) || ( pointsArray[i][j]!= 0 )){   if((pointsArray[i+1][j] == pointsArray[i][j] ) || ( pointsArray[i-1][j]== pointsArray[i][j] ) || ( pointsArray[i][j+1]== pointsArray[i][j] ) || ( pointsArray[i][j-1]== pointsArray[i][j] )){   if((pointsArray[i+1][j] < 0 && pointsArray[i-1][j]< 0 && pointsArray[i][j+1]< 0 && pointsArray[i][j-1]< 0 )) { pointsArray[i][j]  = 0; pointsArray[i+1][j] += 0; pointsArray[i-1][j] += 0; pointsArray[i][j+1] += 0; pointsArray[i][j-1] += 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"!1|", "!0a"}, {"=I|", "=I|", "=I|", "=Ib"}, {"<0&", "<0&", "<0&", "<0d"}, {" 0.", "+0.", "+0.", "+0.", "+0."}} */
} private void f047(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] == 0 )){   if((pointsArray[i+1][j] > pointsArray[i][j] ) || ( pointsArray[i-1][j]> pointsArray[i][j] ) || ( pointsArray[i][j+1]> pointsArray[i][j] ) || ( pointsArray[i][j-1]> pointsArray[i][j] )){   if((pointsArray[i+1][j] >= 1 ) || ( pointsArray[i-1][j]>= 1 ) || ( pointsArray[i][j+1]>= 1 && pointsArray[i][j-1]>= 1 )) { pointsArray[i][j]  = 0; pointsArray[i+1][j]  = 0; pointsArray[i-1][j]  = 0; pointsArray[i][j+1]  = 0; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"=0a"}, {">I|", ">I|", ">I|", ">Ib"}, {"p1|", "p1|", "p1&", "p1d"}, {" 0.", " 0.", " 0.", " 0.", " 0."}} */
} private void f048(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 2 )){   if((pointsArray[i+1][j] != 0 ) || ( pointsArray[i-1][j]!= 0 && pointsArray[i][j+1]!= 0 ) || ( pointsArray[i][j-1]!= 0 )){   if((pointsArray[i+1][j] > 1 )) { pointsArray[i][j] -= 0; pointsArray[i+1][j]  = 2;  } if(( pointsArray[i-1][j]> 1 )) { pointsArray[i][j] -= 0; pointsArray[i-1][j]  = 2;  } if(( pointsArray[i][j+1]> 1 )) { pointsArray[i][j] -= 0; pointsArray[i][j+1]  = 2;  } if(( pointsArray[i][j-1]> 1 )) { pointsArray[i][j] -= 0; pointsArray[i][j-1]  = 2;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<2a"}, {"!0|", "!0&", "!0|", "!0b"}, {">1c", ">1c", ">1c", ">1d"}, {"-0.", " 2."}} */
} private void f049(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] == 0 )){   if((pointsArray[i+1][j] < 1 ) || ( pointsArray[i-1][j]< 1 && pointsArray[i][j+1]< 1 ) || ( pointsArray[i][j-1]< 1 )){   if((pointsArray[i+1][j] >= 1 )) { pointsArray[i][j]  = 0; pointsArray[i+1][j] -= 1;  } if(( pointsArray[i-1][j]>= 1 )) { pointsArray[i][j]  = 0; pointsArray[i-1][j] -= 1;  } if(( pointsArray[i][j+1]>= 1 )) { pointsArray[i][j]  = 0; pointsArray[i][j+1] -= 1;  } if(( pointsArray[i][j-1]>= 1 )) { pointsArray[i][j]  = 0; pointsArray[i][j-1] -= 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"=0a"}, {"<1|", "<1&", "<1|", "<1b"}, {"p1c", "p1c", "p1c", "p1d"}, {" 0.", "-1."}} */
} private void f050(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 0 )){   if((pointsArray[i+1][j] < 3 ) || ( pointsArray[i-1][j]< 3 ) || ( pointsArray[i][j+1]< 3 && pointsArray[i][j-1]< 3 )){   if((pointsArray[i+1][j] < pointsArray[i][j] )) { pointsArray[i][j] += 2; pointsArray[i+1][j] -= 0;  } if(( pointsArray[i-1][j]< pointsArray[i][j] )) { pointsArray[i][j] += 2; pointsArray[i-1][j] -= 0;  } if(( pointsArray[i][j+1]< pointsArray[i][j] )) { pointsArray[i][j] += 2; pointsArray[i][j+1] -= 0;  } if(( pointsArray[i][j-1]< pointsArray[i][j] )) { pointsArray[i][j] += 2; pointsArray[i][j-1] -= 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<0a"}, {"<3|", "<3|", "<3&", "<3b"}, {"<Ic", "<Ic", "<Ic", "<Id"}, {"+2.", "-0."}} */
} private void f051(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] <= 0 && pointsArray[i][j]< 0 )){   if((pointsArray[i+1][j] == 1 && pointsArray[i-1][j]== 1 ) || ( pointsArray[i][j+1]== 1 ) || ( pointsArray[i][j-1]== 1 )){   if((pointsArray[i+1][j] >= 0 )) { pointsArray[i][j] -= 0; pointsArray[i+1][j] -= 1;  } if(( pointsArray[i-1][j]>= 0 )) { pointsArray[i][j] -= 0; pointsArray[i-1][j] -= 1;  } if(( pointsArray[i][j+1]>= 0 )) { pointsArray[i][j] -= 0; pointsArray[i][j+1] -= 1;  } if(( pointsArray[i][j-1]>= 0 )) { pointsArray[i][j] -= 0; pointsArray[i][j-1] -= 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"o0&", "<0a"}, {"=1&", "=1|", "=1|", "=1b"}, {"p0c", "p0c", "p0c", "p0d"}, {"-0.", "-1."}} */
} private void f052(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 0 && pointsArray[i][j]>= 1 )){   if((pointsArray[i+1][j] > 1 ) || ( pointsArray[i-1][j]> 1 && pointsArray[i][j+1]> 1 && pointsArray[i][j-1]> 1 )){   if((pointsArray[i+1][j] > pointsArray[i][j] ) || ( pointsArray[i-1][j]> pointsArray[i][j] )) { pointsArray[i][j]  = 0; pointsArray[i+1][j] += 0; pointsArray[i-1][j] += 0;  } if(( pointsArray[i][j+1]> pointsArray[i][j] ) || ( pointsArray[i][j-1]> pointsArray[i][j] )) { pointsArray[i][j]  = 0; pointsArray[i][j+1] += 0; pointsArray[i][j-1] += 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<0&", "p1a"}, {">1|", ">1&", ">1&", ">1b"}, {">I|", ">Ic", ">I|", ">Id"}, {" 0.", "+0.", "+0."}} */
} private void f053(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 2 )){   if((pointsArray[i+1][j] == pointsArray[i][j] && pointsArray[i-1][j]== pointsArray[i][j] ) || ( pointsArray[i][j+1]== pointsArray[i][j] && pointsArray[i][j-1]== pointsArray[i][j] )){   if((pointsArray[i+1][j] != 0 )) { pointsArray[i][j]  = 0; pointsArray[i+1][j] += 3;  } if(( pointsArray[i-1][j]!= 0 )) { pointsArray[i][j]  = 0; pointsArray[i-1][j] += 3;  } if(( pointsArray[i][j+1]!= 0 )) { pointsArray[i][j]  = 0; pointsArray[i][j+1] += 3;  } if(( pointsArray[i][j-1]!= 0 )) { pointsArray[i][j]  = 0; pointsArray[i][j-1] += 3;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<2a"}, {"=I&", "=I|", "=I&", "=Ib"}, {"!0c", "!0c", "!0c", "!0d"}, {" 0.", "+3."}} */
} private void f054(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] >= 1 ) || ( pointsArray[i][j]!= 0 )){   if((pointsArray[i+1][j] != pointsArray[i][j] ) || ( pointsArray[i-1][j]!= pointsArray[i][j] ) || ( pointsArray[i][j+1]!= pointsArray[i][j] && pointsArray[i][j-1]!= pointsArray[i][j] )){   if((pointsArray[i+1][j] > 1 ) || ( pointsArray[i-1][j]> 1 ) || ( pointsArray[i][j+1]> 1 && pointsArray[i][j-1]> 1 )) { pointsArray[i][j]  = 0; pointsArray[i+1][j]  = 1; pointsArray[i-1][j]  = 1; pointsArray[i][j+1]  = 1; pointsArray[i][j-1]  = 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"p1|", "!0a"}, {"!I|", "!I|", "!I&", "!Ib"}, {">1|", ">1|", ">1&", ">1d"}, {" 0.", " 1.", " 1.", " 1.", " 1."}} */
} private void f055(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] != 2 )){   if((pointsArray[i+1][j] == 0 && pointsArray[i-1][j]== 0 && pointsArray[i][j+1]== 0 && pointsArray[i][j-1]== 0 )){   if((pointsArray[i+1][j] > 1 ) || ( pointsArray[i-1][j]> 1 )) { pointsArray[i][j] -= 3; pointsArray[i+1][j] -= 1; pointsArray[i-1][j] -= 1;  } if(( pointsArray[i][j+1]> 1 && pointsArray[i][j-1]> 1 )) { pointsArray[i][j] -= 3; pointsArray[i][j+1] -= 1; pointsArray[i][j-1] -= 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"!2a"}, {"=0&", "=0&", "=0&", "=0b"}, {">1|", ">1c", ">1&", ">1d"}, {"-3.", "-1.", "-1."}} */
} private void f056(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 0 && pointsArray[i][j]!= 0 )){   if((pointsArray[i+1][j] <= 0 && pointsArray[i-1][j]<= 0 ) || ( pointsArray[i][j+1]<= 0 && pointsArray[i][j-1]<= 0 )){   if((pointsArray[i+1][j] <= 0 ) || ( pointsArray[i-1][j]<= 0 )) { pointsArray[i][j] -= 1; pointsArray[i+1][j] += 0; pointsArray[i-1][j] += 0;  } if(( pointsArray[i][j+1]<= 0 && pointsArray[i][j-1]<= 0 )) { pointsArray[i][j] -= 1; pointsArray[i][j+1] += 0; pointsArray[i][j-1] += 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<0&", "!0a"}, {"o0&", "o0|", "o0&", "o0b"}, {"o0|", "o0c", "o0&", "o0d"}, {"-1.", "+0.", "+0."}} */
} private void f057(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 1 && pointsArray[i][j]> 0 )){   if((pointsArray[i+1][j] < 0 ) || ( pointsArray[i-1][j]< 0 && pointsArray[i][j+1]< 0 ) || ( pointsArray[i][j-1]< 0 )){   if((pointsArray[i+1][j] <= pointsArray[i][j] && pointsArray[i-1][j]<= pointsArray[i][j] )) { pointsArray[i][j]  = 0; pointsArray[i+1][j] -= 0; pointsArray[i-1][j] -= 0;  } if(( pointsArray[i][j+1]<= pointsArray[i][j] ) || ( pointsArray[i][j-1]<= pointsArray[i][j] )) { pointsArray[i][j]  = 0; pointsArray[i][j+1] -= 0; pointsArray[i][j-1] -= 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">1&", ">0a"}, {"<0|", "<0&", "<0|", "<0b"}, {"oI&", "oIc", "oI|", "oId"}, {" 0.", "-0.", "-0."}} */
} private void f058(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] != 3 )){   if((pointsArray[i+1][j] != 1 && pointsArray[i-1][j]!= 1 ) || ( pointsArray[i][j+1]!= 1 ) || ( pointsArray[i][j-1]!= 1 )){   if((pointsArray[i+1][j] >= 3 && pointsArray[i-1][j]>= 3 && pointsArray[i][j+1]>= 3 ) || ( pointsArray[i][j-1]>= 3 )) { pointsArray[i][j] -= 1; pointsArray[i+1][j] += 3; pointsArray[i-1][j] += 3; pointsArray[i][j+1] += 3; pointsArray[i][j-1] += 3;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"!3a"}, {"!1&", "!1|", "!1|", "!1b"}, {"p3&", "p3&", "p3|", "p3d"}, {"-1.", "+3.", "+3.", "+3.", "+3."}} */
} private void f059(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 1 )){   if((pointsArray[i+1][j] > pointsArray[i][j] ) || ( pointsArray[i-1][j]> pointsArray[i][j] ) || ( pointsArray[i][j+1]> pointsArray[i][j] && pointsArray[i][j-1]> pointsArray[i][j] )){   if((pointsArray[i+1][j] == 1 )) { pointsArray[i][j] += 0; pointsArray[i+1][j] -= 1;  } if(( pointsArray[i-1][j]== 1 )) { pointsArray[i][j] += 0; pointsArray[i-1][j] -= 1;  } if(( pointsArray[i][j+1]== 1 )) { pointsArray[i][j] += 0; pointsArray[i][j+1] -= 1;  } if(( pointsArray[i][j-1]== 1 )) { pointsArray[i][j] += 0; pointsArray[i][j-1] -= 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">1a"}, {">I|", ">I|", ">I&", ">Ib"}, {"=1c", "=1c", "=1c", "=1d"}, {"+0.", "-1."}} */
} private void f060(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] <= 1 && pointsArray[i][j]<= 1 )){   if((pointsArray[i+1][j] != pointsArray[i][j] ) || ( pointsArray[i-1][j]!= pointsArray[i][j] ) || ( pointsArray[i][j+1]!= pointsArray[i][j] && pointsArray[i][j-1]!= pointsArray[i][j] )){   if((pointsArray[i+1][j] <= 2 )) { pointsArray[i][j] -= 1; pointsArray[i+1][j] -= 0;  } if(( pointsArray[i-1][j]<= 2 )) { pointsArray[i][j] -= 1; pointsArray[i-1][j] -= 0;  } if(( pointsArray[i][j+1]<= 2 )) { pointsArray[i][j] -= 1; pointsArray[i][j+1] -= 0;  } if(( pointsArray[i][j-1]<= 2 )) { pointsArray[i][j] -= 1; pointsArray[i][j-1] -= 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"o1&", "o1a"}, {"!I|", "!I|", "!I&", "!Ib"}, {"o2c", "o2c", "o2c", "o2d"}, {"-1.", "-0."}} */
} private void f061(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 0 && pointsArray[i][j]!= 0 )){   if((pointsArray[i+1][j] > pointsArray[i][j] ) || ( pointsArray[i-1][j]> pointsArray[i][j] ) || ( pointsArray[i][j+1]> pointsArray[i][j] ) || ( pointsArray[i][j-1]> pointsArray[i][j] )){   if((pointsArray[i+1][j] > 1 ) || ( pointsArray[i-1][j]> 1 && pointsArray[i][j+1]> 1 && pointsArray[i][j-1]> 1 )) { pointsArray[i][j] += 1; pointsArray[i+1][j] -= 1; pointsArray[i-1][j] -= 1; pointsArray[i][j+1] -= 1; pointsArray[i][j-1] -= 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<0&", "!0a"}, {">I|", ">I|", ">I|", ">Ib"}, {">1|", ">1&", ">1&", ">1d"}, {"+1.", "-1.", "-1.", "-1.", "-1."}} */
} private void f062(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 0 && pointsArray[i][j]> 1 )){   if((pointsArray[i+1][j] < pointsArray[i][j] && pointsArray[i-1][j]< pointsArray[i][j] && pointsArray[i][j+1]< pointsArray[i][j] ) || ( pointsArray[i][j-1]< pointsArray[i][j] )){   if((pointsArray[i+1][j] <= pointsArray[i][j] && pointsArray[i-1][j]<= pointsArray[i][j] ) || ( pointsArray[i][j+1]<= pointsArray[i][j] ) || ( pointsArray[i][j-1]<= pointsArray[i][j] )) { pointsArray[i][j]  = 1; pointsArray[i+1][j] -= 0; pointsArray[i-1][j] -= 0; pointsArray[i][j+1] -= 0; pointsArray[i][j-1] -= 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<0&", ">1a"}, {"<I&", "<I&", "<I|", "<Ib"}, {"oI&", "oI|", "oI|", "oId"}, {" 1.", "-0.", "-0.", "-0.", "-0."}} */
} private void f063(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 0 ) || ( pointsArray[i][j]== 3 )){   if((pointsArray[i+1][j] <= pointsArray[i][j] && pointsArray[i-1][j]<= pointsArray[i][j] && pointsArray[i][j+1]<= pointsArray[i][j] ) || ( pointsArray[i][j-1]<= pointsArray[i][j] )){   if((pointsArray[i+1][j] > 3 && pointsArray[i-1][j]> 3 && pointsArray[i][j+1]> 3 ) || ( pointsArray[i][j-1]> 3 )) { pointsArray[i][j] += 0; pointsArray[i+1][j] += 1; pointsArray[i-1][j] += 1; pointsArray[i][j+1] += 1; pointsArray[i][j-1] += 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">0|", "=3a"}, {"oI&", "oI&", "oI|", "oIb"}, {">3&", ">3&", ">3|", ">3d"}, {"+0.", "+1.", "+1.", "+1.", "+1."}} */
} private void f064(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] <= 1 ) || ( pointsArray[i][j]> 1 )){   if((pointsArray[i+1][j] < pointsArray[i][j] && pointsArray[i-1][j]< pointsArray[i][j] ) || ( pointsArray[i][j+1]< pointsArray[i][j] && pointsArray[i][j-1]< pointsArray[i][j] )){   if((pointsArray[i+1][j] != pointsArray[i][j] ) || ( pointsArray[i-1][j]!= pointsArray[i][j] && pointsArray[i][j+1]!= pointsArray[i][j] ) || ( pointsArray[i][j-1]!= pointsArray[i][j] )) { pointsArray[i][j]  = 0; pointsArray[i+1][j] += 0; pointsArray[i-1][j] += 0; pointsArray[i][j+1] += 0; pointsArray[i][j-1] += 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"o1|", ">1a"}, {"<I&", "<I|", "<I&", "<Ib"}, {"!I|", "!I&", "!I|", "!Id"}, {" 0.", "+0.", "+0.", "+0.", "+0."}} */
} private void f065(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 1 && pointsArray[i][j]== 3 )){   if((pointsArray[i+1][j] > 2 ) || ( pointsArray[i-1][j]> 2 && pointsArray[i][j+1]> 2 && pointsArray[i][j-1]> 2 )){   if((pointsArray[i+1][j] < 1 ) || ( pointsArray[i-1][j]< 1 && pointsArray[i][j+1]< 1 && pointsArray[i][j-1]< 1 )) { pointsArray[i][j] -= 2; pointsArray[i+1][j] += 0; pointsArray[i-1][j] += 0; pointsArray[i][j+1] += 0; pointsArray[i][j-1] += 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">1&", "=3a"}, {">2|", ">2&", ">2&", ">2b"}, {"<1|", "<1&", "<1&", "<1d"}, {"-2.", "+0.", "+0.", "+0.", "+0."}} */
} private void f066(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 1 ) || ( pointsArray[i][j]== 0 )){   if((pointsArray[i+1][j] > 1 ) || ( pointsArray[i-1][j]> 1 ) || ( pointsArray[i][j+1]> 1 ) || ( pointsArray[i][j-1]> 1 )){   if((pointsArray[i+1][j] > 0 && pointsArray[i-1][j]> 0 )) { pointsArray[i][j]  = 1; pointsArray[i+1][j] -= 0; pointsArray[i-1][j] -= 0;  } if(( pointsArray[i][j+1]> 0 ) || ( pointsArray[i][j-1]> 0 )) { pointsArray[i][j]  = 1; pointsArray[i][j+1] -= 0; pointsArray[i][j-1] -= 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<1|", "=0a"}, {">1|", ">1|", ">1|", ">1b"}, {">0&", ">0c", ">0|", ">0d"}, {" 1.", "-0.", "-0."}} */
} private void f067(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 0 )){   if((pointsArray[i+1][j] > 0 ) || ( pointsArray[i-1][j]> 0 ) || ( pointsArray[i][j+1]> 0 ) || ( pointsArray[i][j-1]> 0 )){   if((pointsArray[i+1][j] == pointsArray[i][j] ) || ( pointsArray[i-1][j]== pointsArray[i][j] )) { pointsArray[i][j] += 1; pointsArray[i+1][j]  = 0; pointsArray[i-1][j]  = 0;  } if(( pointsArray[i][j+1]== pointsArray[i][j] ) || ( pointsArray[i][j-1]== pointsArray[i][j] )) { pointsArray[i][j] += 1; pointsArray[i][j+1]  = 0; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">0a"}, {">0|", ">0|", ">0|", ">0b"}, {"=I|", "=Ic", "=I|", "=Id"}, {"+1.", " 0.", " 0."}} */
} private void f068(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] != 1 )){   if((pointsArray[i+1][j] != 0 ) || ( pointsArray[i-1][j]!= 0 ) || ( pointsArray[i][j+1]!= 0 && pointsArray[i][j-1]!= 0 )){   if((pointsArray[i+1][j] == 1 && pointsArray[i-1][j]== 1 )) { pointsArray[i][j]  = 1; pointsArray[i+1][j]  = 2; pointsArray[i-1][j]  = 2;  } if(( pointsArray[i][j+1]== 1 && pointsArray[i][j-1]== 1 )) { pointsArray[i][j]  = 1; pointsArray[i][j+1]  = 2; pointsArray[i][j-1]  = 2;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"!1a"}, {"!0|", "!0|", "!0&", "!0b"}, {"=1&", "=1c", "=1&", "=1d"}, {" 1.", " 2.", " 2."}} */
} private void f069(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] != 1 ) || ( pointsArray[i][j]< 1 )){   if((pointsArray[i+1][j] != 0 && pointsArray[i-1][j]!= 0 && pointsArray[i][j+1]!= 0 && pointsArray[i][j-1]!= 0 )){   if((pointsArray[i+1][j] > pointsArray[i][j] ) || ( pointsArray[i-1][j]> pointsArray[i][j] )) { pointsArray[i][j] -= 0; pointsArray[i+1][j] += 1; pointsArray[i-1][j] += 1;  } if(( pointsArray[i][j+1]> pointsArray[i][j] ) || ( pointsArray[i][j-1]> pointsArray[i][j] )) { pointsArray[i][j] -= 0; pointsArray[i][j+1] += 1; pointsArray[i][j-1] += 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"!1|", "<1a"}, {"!0&", "!0&", "!0&", "!0b"}, {">I|", ">Ic", ">I|", ">Id"}, {"-0.", "+1.", "+1."}} */
} private void f070(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] <= 2 )){   if((pointsArray[i+1][j] <= pointsArray[i][j] ) || ( pointsArray[i-1][j]<= pointsArray[i][j] && pointsArray[i][j+1]<= pointsArray[i][j] ) || ( pointsArray[i][j-1]<= pointsArray[i][j] )){   if((pointsArray[i+1][j] != pointsArray[i][j] ) || ( pointsArray[i-1][j]!= pointsArray[i][j] )) { pointsArray[i][j] += 0; pointsArray[i+1][j] -= 3; pointsArray[i-1][j] -= 3;  } if(( pointsArray[i][j+1]!= pointsArray[i][j] ) || ( pointsArray[i][j-1]!= pointsArray[i][j] )) { pointsArray[i][j] += 0; pointsArray[i][j+1] -= 3; pointsArray[i][j-1] -= 3;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"o2a"}, {"oI|", "oI&", "oI|", "oIb"}, {"!I|", "!Ic", "!I|", "!Id"}, {"+0.", "-3.", "-3."}} */
} private void f071(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] >= 1 )){   if((pointsArray[i+1][j] != 0 ) || ( pointsArray[i-1][j]!= 0 ) || ( pointsArray[i][j+1]!= 0 && pointsArray[i][j-1]!= 0 )){   if((pointsArray[i+1][j] != pointsArray[i][j] && pointsArray[i-1][j]!= pointsArray[i][j] )) { pointsArray[i][j] -= 1; pointsArray[i+1][j] += 0; pointsArray[i-1][j] += 0;  } if(( pointsArray[i][j+1]!= pointsArray[i][j] ) || ( pointsArray[i][j-1]!= pointsArray[i][j] )) { pointsArray[i][j] -= 1; pointsArray[i][j+1] += 0; pointsArray[i][j-1] += 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"p1a"}, {"!0|", "!0|", "!0&", "!0b"}, {"!I&", "!Ic", "!I|", "!Id"}, {"-1.", "+0.", "+0."}} */
} private void f072(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] == 1 )){   if((pointsArray[i+1][j] >= pointsArray[i][j] && pointsArray[i-1][j]>= pointsArray[i][j] && pointsArray[i][j+1]>= pointsArray[i][j] && pointsArray[i][j-1]>= pointsArray[i][j] )){   if((pointsArray[i+1][j] < pointsArray[i][j] )) { pointsArray[i][j] -= 0; pointsArray[i+1][j]  = 1;  } if(( pointsArray[i-1][j]< pointsArray[i][j] )) { pointsArray[i][j] -= 0; pointsArray[i-1][j]  = 1;  } if(( pointsArray[i][j+1]< pointsArray[i][j] )) { pointsArray[i][j] -= 0; pointsArray[i][j+1]  = 1;  } if(( pointsArray[i][j-1]< pointsArray[i][j] )) { pointsArray[i][j] -= 0; pointsArray[i][j-1]  = 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"=1a"}, {"pI&", "pI&", "pI&", "pIb"}, {"<Ic", "<Ic", "<Ic", "<Id"}, {"-0.", " 1."}} */
} private void f073(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 0 )){   if((pointsArray[i+1][j] != pointsArray[i][j] && pointsArray[i-1][j]!= pointsArray[i][j] && pointsArray[i][j+1]!= pointsArray[i][j] ) || ( pointsArray[i][j-1]!= pointsArray[i][j] )){   if((pointsArray[i+1][j] <= pointsArray[i][j] )) { pointsArray[i][j] -= 1; pointsArray[i+1][j]  = 3;  } if(( pointsArray[i-1][j]<= pointsArray[i][j] )) { pointsArray[i][j] -= 1; pointsArray[i-1][j]  = 3;  } if(( pointsArray[i][j+1]<= pointsArray[i][j] )) { pointsArray[i][j] -= 1; pointsArray[i][j+1]  = 3;  } if(( pointsArray[i][j-1]<= pointsArray[i][j] )) { pointsArray[i][j] -= 1; pointsArray[i][j-1]  = 3;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">0a"}, {"!I&", "!I&", "!I|", "!Ib"}, {"oIc", "oIc", "oIc", "oId"}, {"-1.", " 3."}} */
} private void f074(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] >= 0 && pointsArray[i][j]<= 1 )){   if((pointsArray[i+1][j] >= 0 ) || ( pointsArray[i-1][j]>= 0 && pointsArray[i][j+1]>= 0 ) || ( pointsArray[i][j-1]>= 0 )){   if((pointsArray[i+1][j] >= pointsArray[i][j] )) { pointsArray[i][j]  = 1; pointsArray[i+1][j] -= 0;  } if(( pointsArray[i-1][j]>= pointsArray[i][j] )) { pointsArray[i][j]  = 1; pointsArray[i-1][j] -= 0;  } if(( pointsArray[i][j+1]>= pointsArray[i][j] )) { pointsArray[i][j]  = 1; pointsArray[i][j+1] -= 0;  } if(( pointsArray[i][j-1]>= pointsArray[i][j] )) { pointsArray[i][j]  = 1; pointsArray[i][j-1] -= 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"p0&", "o1a"}, {"p0|", "p0&", "p0|", "p0b"}, {"pIc", "pIc", "pIc", "pId"}, {" 1.", "-0."}} */
} private void f075(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 3 )){   if((pointsArray[i+1][j] >= 1 && pointsArray[i-1][j]>= 1 ) || ( pointsArray[i][j+1]>= 1 ) || ( pointsArray[i][j-1]>= 1 )){   if((pointsArray[i+1][j] != pointsArray[i][j] ) || ( pointsArray[i-1][j]!= pointsArray[i][j] && pointsArray[i][j+1]!= pointsArray[i][j] && pointsArray[i][j-1]!= pointsArray[i][j] )) { pointsArray[i][j] += 1; pointsArray[i+1][j] += 3; pointsArray[i-1][j] += 3; pointsArray[i][j+1] += 3; pointsArray[i][j-1] += 3;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">3a"}, {"p1&", "p1|", "p1|", "p1b"}, {"!I|", "!I&", "!I&", "!Id"}, {"+1.", "+3.", "+3.", "+3.", "+3."}} */
} private void f076(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] >= 1 )){   if((pointsArray[i+1][j] < pointsArray[i][j] ) || ( pointsArray[i-1][j]< pointsArray[i][j] ) || ( pointsArray[i][j+1]< pointsArray[i][j] && pointsArray[i][j-1]< pointsArray[i][j] )){   if((pointsArray[i+1][j] < pointsArray[i][j] && pointsArray[i-1][j]< pointsArray[i][j] )) { pointsArray[i][j] -= 0; pointsArray[i+1][j]  = 0; pointsArray[i-1][j]  = 0;  } if(( pointsArray[i][j+1]< pointsArray[i][j] ) || ( pointsArray[i][j-1]< pointsArray[i][j] )) { pointsArray[i][j] -= 0; pointsArray[i][j+1]  = 0; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"p1a"}, {"<I|", "<I|", "<I&", "<Ib"}, {"<I&", "<Ic", "<I|", "<Id"}, {"-0.", " 0.", " 0."}} */
} private void f077(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 1 && pointsArray[i][j]>= 1 )){   if((pointsArray[i+1][j] < 0 ) || ( pointsArray[i-1][j]< 0 ) || ( pointsArray[i][j+1]< 0 && pointsArray[i][j-1]< 0 )){   if((pointsArray[i+1][j] == pointsArray[i][j] )) { pointsArray[i][j] += 1; pointsArray[i+1][j] += 0;  } if(( pointsArray[i-1][j]== pointsArray[i][j] )) { pointsArray[i][j] += 1; pointsArray[i-1][j] += 0;  } if(( pointsArray[i][j+1]== pointsArray[i][j] )) { pointsArray[i][j] += 1; pointsArray[i][j+1] += 0;  } if(( pointsArray[i][j-1]== pointsArray[i][j] )) { pointsArray[i][j] += 1; pointsArray[i][j-1] += 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<1&", "p1a"}, {"<0|", "<0|", "<0&", "<0b"}, {"=Ic", "=Ic", "=Ic", "=Id"}, {"+1.", "+0."}} */
} private void f078(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] >= 0 && pointsArray[i][j]>= 3 )){   if((pointsArray[i+1][j] > 0 && pointsArray[i-1][j]> 0 && pointsArray[i][j+1]> 0 && pointsArray[i][j-1]> 0 )){   if((pointsArray[i+1][j] <= 1 && pointsArray[i-1][j]<= 1 && pointsArray[i][j+1]<= 1 ) || ( pointsArray[i][j-1]<= 1 )) { pointsArray[i][j] += 2; pointsArray[i+1][j] += 1; pointsArray[i-1][j] += 1; pointsArray[i][j+1] += 1; pointsArray[i][j-1] += 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"p0&", "p3a"}, {">0&", ">0&", ">0&", ">0b"}, {"o1&", "o1&", "o1|", "o1d"}, {"+2.", "+1.", "+1.", "+1.", "+1."}} */
} private void f079(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 1 )){   if((pointsArray[i+1][j] >= pointsArray[i][j] ) || ( pointsArray[i-1][j]>= pointsArray[i][j] ) || ( pointsArray[i][j+1]>= pointsArray[i][j] && pointsArray[i][j-1]>= pointsArray[i][j] )){   if((pointsArray[i+1][j] != pointsArray[i][j] ) || ( pointsArray[i-1][j]!= pointsArray[i][j] )) { pointsArray[i][j] -= 1; pointsArray[i+1][j] += 0; pointsArray[i-1][j] += 0;  } if(( pointsArray[i][j+1]!= pointsArray[i][j] ) || ( pointsArray[i][j-1]!= pointsArray[i][j] )) { pointsArray[i][j] -= 1; pointsArray[i][j+1] += 0; pointsArray[i][j-1] += 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">1a"}, {"pI|", "pI|", "pI&", "pIb"}, {"!I|", "!Ic", "!I|", "!Id"}, {"-1.", "+0.", "+0."}} */
} private void f080(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] >= 3 )){   if((pointsArray[i+1][j] >= pointsArray[i][j] && pointsArray[i-1][j]>= pointsArray[i][j] ) || ( pointsArray[i][j+1]>= pointsArray[i][j] ) || ( pointsArray[i][j-1]>= pointsArray[i][j] )){   if((pointsArray[i+1][j] != 2 ) || ( pointsArray[i-1][j]!= 2 )) { pointsArray[i][j] += 0; pointsArray[i+1][j]  = 2; pointsArray[i-1][j]  = 2;  } if(( pointsArray[i][j+1]!= 2 && pointsArray[i][j-1]!= 2 )) { pointsArray[i][j] += 0; pointsArray[i][j+1]  = 2; pointsArray[i][j-1]  = 2;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"p3a"}, {"pI&", "pI|", "pI|", "pIb"}, {"!2|", "!2c", "!2&", "!2d"}, {"+0.", " 2.", " 2."}} */
} private void f081(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 1 ) || ( pointsArray[i][j]< 0 )){   if((pointsArray[i+1][j] <= 1 ) || ( pointsArray[i-1][j]<= 1 && pointsArray[i][j+1]<= 1 ) || ( pointsArray[i][j-1]<= 1 )){   if((pointsArray[i+1][j] > 1 )) { pointsArray[i][j] -= 1; pointsArray[i+1][j] += 1;  } if(( pointsArray[i-1][j]> 1 )) { pointsArray[i][j] -= 1; pointsArray[i-1][j] += 1;  } if(( pointsArray[i][j+1]> 1 )) { pointsArray[i][j] -= 1; pointsArray[i][j+1] += 1;  } if(( pointsArray[i][j-1]> 1 )) { pointsArray[i][j] -= 1; pointsArray[i][j-1] += 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<1|", "<0a"}, {"o1|", "o1&", "o1|", "o1b"}, {">1c", ">1c", ">1c", ">1d"}, {"-1.", "+1."}} */
} private void f082(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] == 0 )){   if((pointsArray[i+1][j] == 1 && pointsArray[i-1][j]== 1 && pointsArray[i][j+1]== 1 && pointsArray[i][j-1]== 1 )){   if((pointsArray[i+1][j] == pointsArray[i][j] )) { pointsArray[i][j]  = 1; pointsArray[i+1][j] += 0;  } if(( pointsArray[i-1][j]== pointsArray[i][j] )) { pointsArray[i][j]  = 1; pointsArray[i-1][j] += 0;  } if(( pointsArray[i][j+1]== pointsArray[i][j] )) { pointsArray[i][j]  = 1; pointsArray[i][j+1] += 0;  } if(( pointsArray[i][j-1]== pointsArray[i][j] )) { pointsArray[i][j]  = 1; pointsArray[i][j-1] += 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"=0a"}, {"=1&", "=1&", "=1&", "=1b"}, {"=Ic", "=Ic", "=Ic", "=Id"}, {" 1.", "+0."}} */
} private void f083(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] == 0 ) || ( pointsArray[i][j]< 2 )){   if((pointsArray[i+1][j] <= 2 ) || ( pointsArray[i-1][j]<= 2 && pointsArray[i][j+1]<= 2 && pointsArray[i][j-1]<= 2 )){   if((pointsArray[i+1][j] >= 0 )) { pointsArray[i][j] -= 0; pointsArray[i+1][j] += 3;  } if(( pointsArray[i-1][j]>= 0 )) { pointsArray[i][j] -= 0; pointsArray[i-1][j] += 3;  } if(( pointsArray[i][j+1]>= 0 )) { pointsArray[i][j] -= 0; pointsArray[i][j+1] += 3;  } if(( pointsArray[i][j-1]>= 0 )) { pointsArray[i][j] -= 0; pointsArray[i][j-1] += 3;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"=0|", "<2a"}, {"o2|", "o2&", "o2&", "o2b"}, {"p0c", "p0c", "p0c", "p0d"}, {"-0.", "+3."}} */
} private void f084(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 1 ) || ( pointsArray[i][j]>= 0 )){   if((pointsArray[i+1][j] < 0 ) || ( pointsArray[i-1][j]< 0 ) || ( pointsArray[i][j+1]< 0 ) || ( pointsArray[i][j-1]< 0 )){   if((pointsArray[i+1][j] == 0 )) { pointsArray[i][j] -= 1; pointsArray[i+1][j]  = 0;  } if(( pointsArray[i-1][j]== 0 )) { pointsArray[i][j] -= 1; pointsArray[i-1][j]  = 0;  } if(( pointsArray[i][j+1]== 0 )) { pointsArray[i][j] -= 1; pointsArray[i][j+1]  = 0;  } if(( pointsArray[i][j-1]== 0 )) { pointsArray[i][j] -= 1; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<1|", "p0a"}, {"<0|", "<0|", "<0|", "<0b"}, {"=0c", "=0c", "=0c", "=0d"}, {"-1.", " 0."}} */
} private void f085(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 0 )){   if((pointsArray[i+1][j] >= pointsArray[i][j] ) || ( pointsArray[i-1][j]>= pointsArray[i][j] && pointsArray[i][j+1]>= pointsArray[i][j] && pointsArray[i][j-1]>= pointsArray[i][j] )){   if((pointsArray[i+1][j] < 1 ) || ( pointsArray[i-1][j]< 1 ) || ( pointsArray[i][j+1]< 1 && pointsArray[i][j-1]< 1 )) { pointsArray[i][j] -= 1; pointsArray[i+1][j] -= 2; pointsArray[i-1][j] -= 2; pointsArray[i][j+1] -= 2; pointsArray[i][j-1] -= 2;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">0a"}, {"pI|", "pI&", "pI&", "pIb"}, {"<1|", "<1|", "<1&", "<1d"}, {"-1.", "-2.", "-2.", "-2.", "-2."}} */
} private void f086(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 1 )){   if((pointsArray[i+1][j] > 0 ) || ( pointsArray[i-1][j]> 0 ) || ( pointsArray[i][j+1]> 0 ) || ( pointsArray[i][j-1]> 0 )){   if((pointsArray[i+1][j] > 0 ) || ( pointsArray[i-1][j]> 0 )) { pointsArray[i][j]  = 1; pointsArray[i+1][j]  = 0; pointsArray[i-1][j]  = 0;  } if(( pointsArray[i][j+1]> 0 && pointsArray[i][j-1]> 0 )) { pointsArray[i][j]  = 1; pointsArray[i][j+1]  = 0; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<1a"}, {">0|", ">0|", ">0|", ">0b"}, {">0|", ">0c", ">0&", ">0d"}, {" 1.", " 0.", " 0."}} */
} private void f087(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 1 && pointsArray[i][j]> 0 )){   if((pointsArray[i+1][j] > 0 && pointsArray[i-1][j]> 0 ) || ( pointsArray[i][j+1]> 0 ) || ( pointsArray[i][j-1]> 0 )){   if((pointsArray[i+1][j] >= 1 )) { pointsArray[i][j] -= 1; pointsArray[i+1][j] += 1;  } if(( pointsArray[i-1][j]>= 1 )) { pointsArray[i][j] -= 1; pointsArray[i-1][j] += 1;  } if(( pointsArray[i][j+1]>= 1 )) { pointsArray[i][j] -= 1; pointsArray[i][j+1] += 1;  } if(( pointsArray[i][j-1]>= 1 )) { pointsArray[i][j] -= 1; pointsArray[i][j-1] += 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<1&", ">0a"}, {">0&", ">0|", ">0|", ">0b"}, {"p1c", "p1c", "p1c", "p1d"}, {"-1.", "+1."}} */
} private void f088(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] <= 3 )){   if((pointsArray[i+1][j] != 0 && pointsArray[i-1][j]!= 0 && pointsArray[i][j+1]!= 0 ) || ( pointsArray[i][j-1]!= 0 )){   if((pointsArray[i+1][j] < 3 ) || ( pointsArray[i-1][j]< 3 )) { pointsArray[i][j]  = 1; pointsArray[i+1][j] += 2; pointsArray[i-1][j] += 2;  } if(( pointsArray[i][j+1]< 3 ) || ( pointsArray[i][j-1]< 3 )) { pointsArray[i][j]  = 1; pointsArray[i][j+1] += 2; pointsArray[i][j-1] += 2;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"o3a"}, {"!0&", "!0&", "!0|", "!0b"}, {"<3|", "<3c", "<3|", "<3d"}, {" 1.", "+2.", "+2."}} */
} private void f089(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] <= 0 ) || ( pointsArray[i][j]<= 0 )){   if((pointsArray[i+1][j] < 1 ) || ( pointsArray[i-1][j]< 1 && pointsArray[i][j+1]< 1 ) || ( pointsArray[i][j-1]< 1 )){   if((pointsArray[i+1][j] == 1 && pointsArray[i-1][j]== 1 ) || ( pointsArray[i][j+1]== 1 ) || ( pointsArray[i][j-1]== 1 )) { pointsArray[i][j] -= 1; pointsArray[i+1][j] -= 0; pointsArray[i-1][j] -= 0; pointsArray[i][j+1] -= 0; pointsArray[i][j-1] -= 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"o0|", "o0a"}, {"<1|", "<1&", "<1|", "<1b"}, {"=1&", "=1|", "=1|", "=1d"}, {"-1.", "-0.", "-0.", "-0.", "-0."}} */
} private void f090(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] <= 2 ) || ( pointsArray[i][j]>= 1 )){   if((pointsArray[i+1][j] == 1 && pointsArray[i-1][j]== 1 && pointsArray[i][j+1]== 1 ) || ( pointsArray[i][j-1]== 1 )){   if((pointsArray[i+1][j] == 0 ) || ( pointsArray[i-1][j]== 0 ) || ( pointsArray[i][j+1]== 0 && pointsArray[i][j-1]== 0 )) { pointsArray[i][j] -= 3; pointsArray[i+1][j] += 3; pointsArray[i-1][j] += 3; pointsArray[i][j+1] += 3; pointsArray[i][j-1] += 3;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"o2|", "p1a"}, {"=1&", "=1&", "=1|", "=1b"}, {"=0|", "=0|", "=0&", "=0d"}, {"-3.", "+3.", "+3.", "+3.", "+3."}} */
} private void f091(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] != 1 ) || ( pointsArray[i][j]< 1 )){   if((pointsArray[i+1][j] >= pointsArray[i][j] ) || ( pointsArray[i-1][j]>= pointsArray[i][j] && pointsArray[i][j+1]>= pointsArray[i][j] && pointsArray[i][j-1]>= pointsArray[i][j] )){   if((pointsArray[i+1][j] == 1 ) || ( pointsArray[i-1][j]== 1 && pointsArray[i][j+1]== 1 ) || ( pointsArray[i][j-1]== 1 )) { pointsArray[i][j] -= 1; pointsArray[i+1][j] -= 1; pointsArray[i-1][j] -= 1; pointsArray[i][j+1] -= 1; pointsArray[i][j-1] -= 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"!1|", "<1a"}, {"pI|", "pI&", "pI&", "pIb"}, {"=1|", "=1&", "=1|", "=1d"}, {"-1.", "-1.", "-1.", "-1.", "-1."}} */
} private void f092(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 1 && pointsArray[i][j]== 0 )){   if((pointsArray[i+1][j] > 1 ) || ( pointsArray[i-1][j]> 1 && pointsArray[i][j+1]> 1 ) || ( pointsArray[i][j-1]> 1 )){   if((pointsArray[i+1][j] != 1 ) || ( pointsArray[i-1][j]!= 1 )) { pointsArray[i][j] -= 1; pointsArray[i+1][j] -= 1; pointsArray[i-1][j] -= 1;  } if(( pointsArray[i][j+1]!= 1 && pointsArray[i][j-1]!= 1 )) { pointsArray[i][j] -= 1; pointsArray[i][j+1] -= 1; pointsArray[i][j-1] -= 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<1&", "=0a"}, {">1|", ">1&", ">1|", ">1b"}, {"!1|", "!1c", "!1&", "!1d"}, {"-1.", "-1.", "-1."}} */
} private void f093(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] != 0 )){   if((pointsArray[i+1][j] < 3 ) || ( pointsArray[i-1][j]< 3 ) || ( pointsArray[i][j+1]< 3 ) || ( pointsArray[i][j-1]< 3 )){   if((pointsArray[i+1][j] != 2 ) || ( pointsArray[i-1][j]!= 2 )) { pointsArray[i][j] -= 2; pointsArray[i+1][j] += 3; pointsArray[i-1][j] += 3;  } if(( pointsArray[i][j+1]!= 2 && pointsArray[i][j-1]!= 2 )) { pointsArray[i][j] -= 2; pointsArray[i][j+1] += 3; pointsArray[i][j-1] += 3;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"!0a"}, {"<3|", "<3|", "<3|", "<3b"}, {"!2|", "!2c", "!2&", "!2d"}, {"-2.", "+3.", "+3."}} */
} private void f094(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] == 1 ) || ( pointsArray[i][j]<= 0 )){   if((pointsArray[i+1][j] <= 1 ) || ( pointsArray[i-1][j]<= 1 ) || ( pointsArray[i][j+1]<= 1 && pointsArray[i][j-1]<= 1 )){   if((pointsArray[i+1][j] <= 0 && pointsArray[i-1][j]<= 0 ) || ( pointsArray[i][j+1]<= 0 && pointsArray[i][j-1]<= 0 )) { pointsArray[i][j] -= 0; pointsArray[i+1][j] -= 1; pointsArray[i-1][j] -= 1; pointsArray[i][j+1] -= 1; pointsArray[i][j-1] -= 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"=1|", "o0a"}, {"o1|", "o1|", "o1&", "o1b"}, {"o0&", "o0|", "o0&", "o0d"}, {"-0.", "-1.", "-1.", "-1.", "-1."}} */
} private void f095(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] == 0 && pointsArray[i][j]< 0 )){   if((pointsArray[i+1][j] > pointsArray[i][j] && pointsArray[i-1][j]> pointsArray[i][j] ) || ( pointsArray[i][j+1]> pointsArray[i][j] ) || ( pointsArray[i][j-1]> pointsArray[i][j] )){   if((pointsArray[i+1][j] <= 2 ) || ( pointsArray[i-1][j]<= 2 )) { pointsArray[i][j]  = 2; pointsArray[i+1][j] -= 0; pointsArray[i-1][j] -= 0;  } if(( pointsArray[i][j+1]<= 2 && pointsArray[i][j-1]<= 2 )) { pointsArray[i][j]  = 2; pointsArray[i][j+1] -= 0; pointsArray[i][j-1] -= 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"=0&", "<0a"}, {">I&", ">I|", ">I|", ">Ib"}, {"o2|", "o2c", "o2&", "o2d"}, {" 2.", "-0.", "-0."}} */
} private void f096(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] != 0 ) || ( pointsArray[i][j]== 0 )){   if((pointsArray[i+1][j] <= 0 ) || ( pointsArray[i-1][j]<= 0 ) || ( pointsArray[i][j+1]<= 0 && pointsArray[i][j-1]<= 0 )){   if((pointsArray[i+1][j] >= 1 ) || ( pointsArray[i-1][j]>= 1 )) { pointsArray[i][j] -= 0; pointsArray[i+1][j] -= 1; pointsArray[i-1][j] -= 1;  } if(( pointsArray[i][j+1]>= 1 && pointsArray[i][j-1]>= 1 )) { pointsArray[i][j] -= 0; pointsArray[i][j+1] -= 1; pointsArray[i][j-1] -= 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"!0|", "=0a"}, {"o0|", "o0|", "o0&", "o0b"}, {"p1|", "p1c", "p1&", "p1d"}, {"-0.", "-1.", "-1."}} */
} private void f097(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 0 ) || ( pointsArray[i][j]<= 1 )){   if((pointsArray[i+1][j] == pointsArray[i][j] ) || ( pointsArray[i-1][j]== pointsArray[i][j] ) || ( pointsArray[i][j+1]== pointsArray[i][j] && pointsArray[i][j-1]== pointsArray[i][j] )){   if((pointsArray[i+1][j] < 0 )) { pointsArray[i][j]  = 1; pointsArray[i+1][j] += 1;  } if(( pointsArray[i-1][j]< 0 )) { pointsArray[i][j]  = 1; pointsArray[i-1][j] += 1;  } if(( pointsArray[i][j+1]< 0 )) { pointsArray[i][j]  = 1; pointsArray[i][j+1] += 1;  } if(( pointsArray[i][j-1]< 0 )) { pointsArray[i][j]  = 1; pointsArray[i][j-1] += 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<0|", "o1a"}, {"=I|", "=I|", "=I&", "=Ib"}, {"<0c", "<0c", "<0c", "<0d"}, {" 1.", "+1."}} */
} private void f098(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 2 )){   if((pointsArray[i+1][j] == 1 ) || ( pointsArray[i-1][j]== 1 ) || ( pointsArray[i][j+1]== 1 && pointsArray[i][j-1]== 1 )){   if((pointsArray[i+1][j] >= 3 && pointsArray[i-1][j]>= 3 ) || ( pointsArray[i][j+1]>= 3 ) || ( pointsArray[i][j-1]>= 3 )) { pointsArray[i][j]  = 0; pointsArray[i+1][j]  = 3; pointsArray[i-1][j]  = 3; pointsArray[i][j+1]  = 3; pointsArray[i][j-1]  = 3;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<2a"}, {"=1|", "=1|", "=1&", "=1b"}, {"p3&", "p3|", "p3|", "p3d"}, {" 0.", " 3.", " 3.", " 3.", " 3."}} */
} private void f099(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 1 && pointsArray[i][j]< 0 )){   if((pointsArray[i+1][j] >= 1 ) || ( pointsArray[i-1][j]>= 1 ) || ( pointsArray[i][j+1]>= 1 ) || ( pointsArray[i][j-1]>= 1 )){   if((pointsArray[i+1][j] > 1 ) || ( pointsArray[i-1][j]> 1 && pointsArray[i][j+1]> 1 && pointsArray[i][j-1]> 1 )) { pointsArray[i][j] -= 1; pointsArray[i+1][j] -= 0; pointsArray[i-1][j] -= 0; pointsArray[i][j+1] -= 0; pointsArray[i][j-1] -= 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">1&", "<0a"}, {"p1|", "p1|", "p1|", "p1b"}, {">1|", ">1&", ">1&", ">1d"}, {"-1.", "-0.", "-0.", "-0.", "-0."}} */
} private void f100(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 2 && pointsArray[i][j]<= 2 )){   if((pointsArray[i+1][j] == pointsArray[i][j] && pointsArray[i-1][j]== pointsArray[i][j] ) || ( pointsArray[i][j+1]== pointsArray[i][j] && pointsArray[i][j-1]== pointsArray[i][j] )){   if((pointsArray[i+1][j] <= 0 )) { pointsArray[i][j]  = 3; pointsArray[i+1][j]  = 0;  } if(( pointsArray[i-1][j]<= 0 )) { pointsArray[i][j]  = 3; pointsArray[i-1][j]  = 0;  } if(( pointsArray[i][j+1]<= 0 )) { pointsArray[i][j]  = 3; pointsArray[i][j+1]  = 0;  } if(( pointsArray[i][j-1]<= 0 )) { pointsArray[i][j]  = 3; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<2&", "o2a"}, {"=I&", "=I|", "=I&", "=Ib"}, {"o0c", "o0c", "o0c", "o0d"}, {" 3.", " 0."}} */
} private void f101(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 0 && pointsArray[i][j]> 0 )){   if((pointsArray[i+1][j] >= pointsArray[i][j] ) || ( pointsArray[i-1][j]>= pointsArray[i][j] && pointsArray[i][j+1]>= pointsArray[i][j] ) || ( pointsArray[i][j-1]>= pointsArray[i][j] )){   if((pointsArray[i+1][j] >= pointsArray[i][j] && pointsArray[i-1][j]>= pointsArray[i][j] ) || ( pointsArray[i][j+1]>= pointsArray[i][j] && pointsArray[i][j-1]>= pointsArray[i][j] )) { pointsArray[i][j] += 1; pointsArray[i+1][j] -= 0; pointsArray[i-1][j] -= 0; pointsArray[i][j+1] -= 0; pointsArray[i][j-1] -= 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">0&", ">0a"}, {"pI|", "pI&", "pI|", "pIb"}, {"pI&", "pI|", "pI&", "pId"}, {"+1.", "-0.", "-0.", "-0.", "-0."}} */
} private void f102(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 1 )){   if((pointsArray[i+1][j] == 1 ) || ( pointsArray[i-1][j]== 1 && pointsArray[i][j+1]== 1 ) || ( pointsArray[i][j-1]== 1 )){   if((pointsArray[i+1][j] > 1 ) || ( pointsArray[i-1][j]> 1 ) || ( pointsArray[i][j+1]> 1 ) || ( pointsArray[i][j-1]> 1 )) { pointsArray[i][j] -= 1; pointsArray[i+1][j]  = 0; pointsArray[i-1][j]  = 0; pointsArray[i][j+1]  = 0; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">1a"}, {"=1|", "=1&", "=1|", "=1b"}, {">1|", ">1|", ">1|", ">1d"}, {"-1.", " 0.", " 0.", " 0.", " 0."}} */
} private void f103(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 0 )){   if((pointsArray[i+1][j] < pointsArray[i][j] && pointsArray[i-1][j]< pointsArray[i][j] && pointsArray[i][j+1]< pointsArray[i][j] && pointsArray[i][j-1]< pointsArray[i][j] )){   if((pointsArray[i+1][j] <= pointsArray[i][j] )) { pointsArray[i][j] += 3; pointsArray[i+1][j]  = 0;  } if(( pointsArray[i-1][j]<= pointsArray[i][j] )) { pointsArray[i][j] += 3; pointsArray[i-1][j]  = 0;  } if(( pointsArray[i][j+1]<= pointsArray[i][j] )) { pointsArray[i][j] += 3; pointsArray[i][j+1]  = 0;  } if(( pointsArray[i][j-1]<= pointsArray[i][j] )) { pointsArray[i][j] += 3; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">0a"}, {"<I&", "<I&", "<I&", "<Ib"}, {"oIc", "oIc", "oIc", "oId"}, {"+3.", " 0."}} */
} private void f104(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] >= 1 && pointsArray[i][j]<= 1 )){   if((pointsArray[i+1][j] < pointsArray[i][j] ) || ( pointsArray[i-1][j]< pointsArray[i][j] && pointsArray[i][j+1]< pointsArray[i][j] && pointsArray[i][j-1]< pointsArray[i][j] )){   if((pointsArray[i+1][j] <= 1 ) || ( pointsArray[i-1][j]<= 1 && pointsArray[i][j+1]<= 1 && pointsArray[i][j-1]<= 1 )) { pointsArray[i][j] += 1; pointsArray[i+1][j]  = 1; pointsArray[i-1][j]  = 1; pointsArray[i][j+1]  = 1; pointsArray[i][j-1]  = 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"p1&", "o1a"}, {"<I|", "<I&", "<I&", "<Ib"}, {"o1|", "o1&", "o1&", "o1d"}, {"+1.", " 1.", " 1.", " 1.", " 1."}} */
} private void f105(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 0 )){   if((pointsArray[i+1][j] == 1 && pointsArray[i-1][j]== 1 && pointsArray[i][j+1]== 1 ) || ( pointsArray[i][j-1]== 1 )){   if((pointsArray[i+1][j] != 3 )) { pointsArray[i][j] -= 0; pointsArray[i+1][j] += 1;  } if(( pointsArray[i-1][j]!= 3 )) { pointsArray[i][j] -= 0; pointsArray[i-1][j] += 1;  } if(( pointsArray[i][j+1]!= 3 )) { pointsArray[i][j] -= 0; pointsArray[i][j+1] += 1;  } if(( pointsArray[i][j-1]!= 3 )) { pointsArray[i][j] -= 0; pointsArray[i][j-1] += 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<0a"}, {"=1&", "=1&", "=1|", "=1b"}, {"!3c", "!3c", "!3c", "!3d"}, {"-0.", "+1."}} */
} private void f106(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] != 1 )){   if((pointsArray[i+1][j] != pointsArray[i][j] ) || ( pointsArray[i-1][j]!= pointsArray[i][j] && pointsArray[i][j+1]!= pointsArray[i][j] ) || ( pointsArray[i][j-1]!= pointsArray[i][j] )){   if((pointsArray[i+1][j] <= 1 && pointsArray[i-1][j]<= 1 ) || ( pointsArray[i][j+1]<= 1 ) || ( pointsArray[i][j-1]<= 1 )) { pointsArray[i][j] += 0; pointsArray[i+1][j]  = 0; pointsArray[i-1][j]  = 0; pointsArray[i][j+1]  = 0; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"!1a"}, {"!I|", "!I&", "!I|", "!Ib"}, {"o1&", "o1|", "o1|", "o1d"}, {"+0.", " 0.", " 0.", " 0.", " 0."}} */
} private void f107(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] == 0 )){   if((pointsArray[i+1][j] >= 0 ) || ( pointsArray[i-1][j]>= 0 ) || ( pointsArray[i][j+1]>= 0 && pointsArray[i][j-1]>= 0 )){   if((pointsArray[i+1][j] <= 1 ) || ( pointsArray[i-1][j]<= 1 && pointsArray[i][j+1]<= 1 ) || ( pointsArray[i][j-1]<= 1 )) { pointsArray[i][j] -= 1; pointsArray[i+1][j] += 1; pointsArray[i-1][j] += 1; pointsArray[i][j+1] += 1; pointsArray[i][j-1] += 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"=0a"}, {"p0|", "p0|", "p0&", "p0b"}, {"o1|", "o1&", "o1|", "o1d"}, {"-1.", "+1.", "+1.", "+1.", "+1."}} */
} private void f108(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] != 2 )){   if((pointsArray[i+1][j] < 1 && pointsArray[i-1][j]< 1 && pointsArray[i][j+1]< 1 && pointsArray[i][j-1]< 1 )){   if((pointsArray[i+1][j] > 2 )) { pointsArray[i][j] += 3; pointsArray[i+1][j] += 3;  } if(( pointsArray[i-1][j]> 2 )) { pointsArray[i][j] += 3; pointsArray[i-1][j] += 3;  } if(( pointsArray[i][j+1]> 2 )) { pointsArray[i][j] += 3; pointsArray[i][j+1] += 3;  } if(( pointsArray[i][j-1]> 2 )) { pointsArray[i][j] += 3; pointsArray[i][j-1] += 3;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"!2a"}, {"<1&", "<1&", "<1&", "<1b"}, {">2c", ">2c", ">2c", ">2d"}, {"+3.", "+3."}} */
} private void f109(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] <= 0 && pointsArray[i][j]== 0 )){   if((pointsArray[i+1][j] != 1 && pointsArray[i-1][j]!= 1 && pointsArray[i][j+1]!= 1 && pointsArray[i][j-1]!= 1 )){   if((pointsArray[i+1][j] > pointsArray[i][j] )) { pointsArray[i][j] -= 1; pointsArray[i+1][j] -= 1;  } if(( pointsArray[i-1][j]> pointsArray[i][j] )) { pointsArray[i][j] -= 1; pointsArray[i-1][j] -= 1;  } if(( pointsArray[i][j+1]> pointsArray[i][j] )) { pointsArray[i][j] -= 1; pointsArray[i][j+1] -= 1;  } if(( pointsArray[i][j-1]> pointsArray[i][j] )) { pointsArray[i][j] -= 1; pointsArray[i][j-1] -= 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"o0&", "=0a"}, {"!1&", "!1&", "!1&", "!1b"}, {">Ic", ">Ic", ">Ic", ">Id"}, {"-1.", "-1."}} */
} private void f110(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] != 0 )){   if((pointsArray[i+1][j] >= pointsArray[i][j] && pointsArray[i-1][j]>= pointsArray[i][j] && pointsArray[i][j+1]>= pointsArray[i][j] && pointsArray[i][j-1]>= pointsArray[i][j] )){   if((pointsArray[i+1][j] > pointsArray[i][j] ) || ( pointsArray[i-1][j]> pointsArray[i][j] ) || ( pointsArray[i][j+1]> pointsArray[i][j] ) || ( pointsArray[i][j-1]> pointsArray[i][j] )) { pointsArray[i][j] += 2; pointsArray[i+1][j]  = 1; pointsArray[i-1][j]  = 1; pointsArray[i][j+1]  = 1; pointsArray[i][j-1]  = 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"!0a"}, {"pI&", "pI&", "pI&", "pIb"}, {">I|", ">I|", ">I|", ">Id"}, {"+2.", " 1.", " 1.", " 1.", " 1."}} */
} private void f111(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 1 )){   if((pointsArray[i+1][j] != pointsArray[i][j] ) || ( pointsArray[i-1][j]!= pointsArray[i][j] ) || ( pointsArray[i][j+1]!= pointsArray[i][j] && pointsArray[i][j-1]!= pointsArray[i][j] )){   if((pointsArray[i+1][j] < pointsArray[i][j] )) { pointsArray[i][j]  = 0; pointsArray[i+1][j] += 1;  } if(( pointsArray[i-1][j]< pointsArray[i][j] )) { pointsArray[i][j]  = 0; pointsArray[i-1][j] += 1;  } if(( pointsArray[i][j+1]< pointsArray[i][j] )) { pointsArray[i][j]  = 0; pointsArray[i][j+1] += 1;  } if(( pointsArray[i][j-1]< pointsArray[i][j] )) { pointsArray[i][j]  = 0; pointsArray[i][j-1] += 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">1a"}, {"!I|", "!I|", "!I&", "!Ib"}, {"<Ic", "<Ic", "<Ic", "<Id"}, {" 0.", "+1."}} */
} private void f112(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 1 ) || ( pointsArray[i][j]>= 1 )){   if((pointsArray[i+1][j] <= pointsArray[i][j] && pointsArray[i-1][j]<= pointsArray[i][j] && pointsArray[i][j+1]<= pointsArray[i][j] ) || ( pointsArray[i][j-1]<= pointsArray[i][j] )){   if((pointsArray[i+1][j] <= 0 )) { pointsArray[i][j]  = 0; pointsArray[i+1][j] -= 1;  } if(( pointsArray[i-1][j]<= 0 )) { pointsArray[i][j]  = 0; pointsArray[i-1][j] -= 1;  } if(( pointsArray[i][j+1]<= 0 )) { pointsArray[i][j]  = 0; pointsArray[i][j+1] -= 1;  } if(( pointsArray[i][j-1]<= 0 )) { pointsArray[i][j]  = 0; pointsArray[i][j-1] -= 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">1|", "p1a"}, {"oI&", "oI&", "oI|", "oIb"}, {"o0c", "o0c", "o0c", "o0d"}, {" 0.", "-1."}} */
} private void f113(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] >= 2 )){   if((pointsArray[i+1][j] <= 3 ) || ( pointsArray[i-1][j]<= 3 ) || ( pointsArray[i][j+1]<= 3 && pointsArray[i][j-1]<= 3 )){   if((pointsArray[i+1][j] <= 2 ) || ( pointsArray[i-1][j]<= 2 )) { pointsArray[i][j] += 3; pointsArray[i+1][j] -= 3; pointsArray[i-1][j] -= 3;  } if(( pointsArray[i][j+1]<= 2 && pointsArray[i][j-1]<= 2 )) { pointsArray[i][j] += 3; pointsArray[i][j+1] -= 3; pointsArray[i][j-1] -= 3;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"p2a"}, {"o3|", "o3|", "o3&", "o3b"}, {"o2|", "o2c", "o2&", "o2d"}, {"+3.", "-3.", "-3."}} */
} private void f114(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] >= 0 ) || ( pointsArray[i][j]<= 1 )){   if((pointsArray[i+1][j] != pointsArray[i][j] && pointsArray[i-1][j]!= pointsArray[i][j] ) || ( pointsArray[i][j+1]!= pointsArray[i][j] ) || ( pointsArray[i][j-1]!= pointsArray[i][j] )){   if((pointsArray[i+1][j] >= pointsArray[i][j] && pointsArray[i-1][j]>= pointsArray[i][j] )) { pointsArray[i][j]  = 0; pointsArray[i+1][j] += 0; pointsArray[i-1][j] += 0;  } if(( pointsArray[i][j+1]>= pointsArray[i][j] && pointsArray[i][j-1]>= pointsArray[i][j] )) { pointsArray[i][j]  = 0; pointsArray[i][j+1] += 0; pointsArray[i][j-1] += 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"p0|", "o1a"}, {"!I&", "!I|", "!I|", "!Ib"}, {"pI&", "pIc", "pI&", "pId"}, {" 0.", "+0.", "+0."}} */
} private void f115(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 1 )){   if((pointsArray[i+1][j] == 1 && pointsArray[i-1][j]== 1 ) || ( pointsArray[i][j+1]== 1 && pointsArray[i][j-1]== 1 )){   if((pointsArray[i+1][j] != 0 ) || ( pointsArray[i-1][j]!= 0 ) || ( pointsArray[i][j+1]!= 0 && pointsArray[i][j-1]!= 0 )) { pointsArray[i][j]  = 1; pointsArray[i+1][j] -= 3; pointsArray[i-1][j] -= 3; pointsArray[i][j+1] -= 3; pointsArray[i][j-1] -= 3;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">1a"}, {"=1&", "=1|", "=1&", "=1b"}, {"!0|", "!0|", "!0&", "!0d"}, {" 1.", "-3.", "-3.", "-3.", "-3."}} */
} private void f116(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] == 0 ) || ( pointsArray[i][j]>= 1 )){   if((pointsArray[i+1][j] != 0 ) || ( pointsArray[i-1][j]!= 0 ) || ( pointsArray[i][j+1]!= 0 && pointsArray[i][j-1]!= 0 )){   if((pointsArray[i+1][j] < 1 && pointsArray[i-1][j]< 1 )) { pointsArray[i][j]  = 0; pointsArray[i+1][j]  = 0; pointsArray[i-1][j]  = 0;  } if(( pointsArray[i][j+1]< 1 && pointsArray[i][j-1]< 1 )) { pointsArray[i][j]  = 0; pointsArray[i][j+1]  = 0; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"=0|", "p1a"}, {"!0|", "!0|", "!0&", "!0b"}, {"<1&", "<1c", "<1&", "<1d"}, {" 0.", " 0.", " 0."}} */
} private void f117(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] >= 0 )){   if((pointsArray[i+1][j] >= pointsArray[i][j] && pointsArray[i-1][j]>= pointsArray[i][j] ) || ( pointsArray[i][j+1]>= pointsArray[i][j] ) || ( pointsArray[i][j-1]>= pointsArray[i][j] )){   if((pointsArray[i+1][j] > 0 )) { pointsArray[i][j] -= 1; pointsArray[i+1][j]  = 0;  } if(( pointsArray[i-1][j]> 0 )) { pointsArray[i][j] -= 1; pointsArray[i-1][j]  = 0;  } if(( pointsArray[i][j+1]> 0 )) { pointsArray[i][j] -= 1; pointsArray[i][j+1]  = 0;  } if(( pointsArray[i][j-1]> 0 )) { pointsArray[i][j] -= 1; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"p0a"}, {"pI&", "pI|", "pI|", "pIb"}, {">0c", ">0c", ">0c", ">0d"}, {"-1.", " 0."}} */
} private void f118(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] >= 1 )){   if((pointsArray[i+1][j] != 3 && pointsArray[i-1][j]!= 3 ) || ( pointsArray[i][j+1]!= 3 && pointsArray[i][j-1]!= 3 )){   if((pointsArray[i+1][j] < 2 )) { pointsArray[i][j]  = 2; pointsArray[i+1][j] += 1;  } if(( pointsArray[i-1][j]< 2 )) { pointsArray[i][j]  = 2; pointsArray[i-1][j] += 1;  } if(( pointsArray[i][j+1]< 2 )) { pointsArray[i][j]  = 2; pointsArray[i][j+1] += 1;  } if(( pointsArray[i][j-1]< 2 )) { pointsArray[i][j]  = 2; pointsArray[i][j-1] += 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"p1a"}, {"!3&", "!3|", "!3&", "!3b"}, {"<2c", "<2c", "<2c", "<2d"}, {" 2.", "+1."}} */
} private void f119(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] <= 0 )){   if((pointsArray[i+1][j] != pointsArray[i][j] && pointsArray[i-1][j]!= pointsArray[i][j] && pointsArray[i][j+1]!= pointsArray[i][j] ) || ( pointsArray[i][j-1]!= pointsArray[i][j] )){   if((pointsArray[i+1][j] < pointsArray[i][j] )) { pointsArray[i][j]  = 1; pointsArray[i+1][j] -= 1;  } if(( pointsArray[i-1][j]< pointsArray[i][j] )) { pointsArray[i][j]  = 1; pointsArray[i-1][j] -= 1;  } if(( pointsArray[i][j+1]< pointsArray[i][j] )) { pointsArray[i][j]  = 1; pointsArray[i][j+1] -= 1;  } if(( pointsArray[i][j-1]< pointsArray[i][j] )) { pointsArray[i][j]  = 1; pointsArray[i][j-1] -= 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"o0a"}, {"!I&", "!I&", "!I|", "!Ib"}, {"<Ic", "<Ic", "<Ic", "<Id"}, {" 1.", "-1."}} */
} private void f120(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] <= 1 ) || ( pointsArray[i][j]< 3 )){   if((pointsArray[i+1][j] != 2 ) || ( pointsArray[i-1][j]!= 2 ) || ( pointsArray[i][j+1]!= 2 && pointsArray[i][j-1]!= 2 )){   if((pointsArray[i+1][j] <= 1 ) || ( pointsArray[i-1][j]<= 1 && pointsArray[i][j+1]<= 1 ) || ( pointsArray[i][j-1]<= 1 )) { pointsArray[i][j]  = 2; pointsArray[i+1][j] += 2; pointsArray[i-1][j] += 2; pointsArray[i][j+1] += 2; pointsArray[i][j-1] += 2;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"o1|", "<3a"}, {"!2|", "!2|", "!2&", "!2b"}, {"o1|", "o1&", "o1|", "o1d"}, {" 2.", "+2.", "+2.", "+2.", "+2."}} */
} private void f121(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] == 0 ) || ( pointsArray[i][j]!= 1 )){   if((pointsArray[i+1][j] > 0 ) || ( pointsArray[i-1][j]> 0 ) || ( pointsArray[i][j+1]> 0 ) || ( pointsArray[i][j-1]> 0 )){   if((pointsArray[i+1][j] < 1 ) || ( pointsArray[i-1][j]< 1 ) || ( pointsArray[i][j+1]< 1 ) || ( pointsArray[i][j-1]< 1 )) { pointsArray[i][j] += 0; pointsArray[i+1][j] += 0; pointsArray[i-1][j] += 0; pointsArray[i][j+1] += 0; pointsArray[i][j-1] += 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"=0|", "!1a"}, {">0|", ">0|", ">0|", ">0b"}, {"<1|", "<1|", "<1|", "<1d"}, {"+0.", "+0.", "+0.", "+0.", "+0."}} */
} private void f122(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 1 )){   if((pointsArray[i+1][j] < 1 ) || ( pointsArray[i-1][j]< 1 && pointsArray[i][j+1]< 1 ) || ( pointsArray[i][j-1]< 1 )){   if((pointsArray[i+1][j] <= 0 )) { pointsArray[i][j] -= 0; pointsArray[i+1][j] -= 1;  } if(( pointsArray[i-1][j]<= 0 )) { pointsArray[i][j] -= 0; pointsArray[i-1][j] -= 1;  } if(( pointsArray[i][j+1]<= 0 )) { pointsArray[i][j] -= 0; pointsArray[i][j+1] -= 1;  } if(( pointsArray[i][j-1]<= 0 )) { pointsArray[i][j] -= 0; pointsArray[i][j-1] -= 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">1a"}, {"<1|", "<1&", "<1|", "<1b"}, {"o0c", "o0c", "o0c", "o0d"}, {"-0.", "-1."}} */
} private void f123(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] >= 0 )){   if((pointsArray[i+1][j] <= pointsArray[i][j] ) || ( pointsArray[i-1][j]<= pointsArray[i][j] ) || ( pointsArray[i][j+1]<= pointsArray[i][j] ) || ( pointsArray[i][j-1]<= pointsArray[i][j] )){   if((pointsArray[i+1][j] < pointsArray[i][j] && pointsArray[i-1][j]< pointsArray[i][j] )) { pointsArray[i][j] -= 3; pointsArray[i+1][j] += 3; pointsArray[i-1][j] += 3;  } if(( pointsArray[i][j+1]< pointsArray[i][j] ) || ( pointsArray[i][j-1]< pointsArray[i][j] )) { pointsArray[i][j] -= 3; pointsArray[i][j+1] += 3; pointsArray[i][j-1] += 3;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"p0a"}, {"oI|", "oI|", "oI|", "oIb"}, {"<I&", "<Ic", "<I|", "<Id"}, {"-3.", "+3.", "+3."}} */
} private void f124(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 0 )){   if((pointsArray[i+1][j] <= 1 && pointsArray[i-1][j]<= 1 && pointsArray[i][j+1]<= 1 ) || ( pointsArray[i][j-1]<= 1 )){   if((pointsArray[i+1][j] == 1 ) || ( pointsArray[i-1][j]== 1 ) || ( pointsArray[i][j+1]== 1 && pointsArray[i][j-1]== 1 )) { pointsArray[i][j]  = 1; pointsArray[i+1][j] += 1; pointsArray[i-1][j] += 1; pointsArray[i][j+1] += 1; pointsArray[i][j-1] += 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">0a"}, {"o1&", "o1&", "o1|", "o1b"}, {"=1|", "=1|", "=1&", "=1d"}, {" 1.", "+1.", "+1.", "+1.", "+1."}} */
} private void f125(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] >= 3 )){   if((pointsArray[i+1][j] < 0 && pointsArray[i-1][j]< 0 && pointsArray[i][j+1]< 0 && pointsArray[i][j-1]< 0 )){   if((pointsArray[i+1][j] >= 0 && pointsArray[i-1][j]>= 0 )) { pointsArray[i][j]  = 2; pointsArray[i+1][j] -= 0; pointsArray[i-1][j] -= 0;  } if(( pointsArray[i][j+1]>= 0 && pointsArray[i][j-1]>= 0 )) { pointsArray[i][j]  = 2; pointsArray[i][j+1] -= 0; pointsArray[i][j-1] -= 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"p3a"}, {"<0&", "<0&", "<0&", "<0b"}, {"p0&", "p0c", "p0&", "p0d"}, {" 2.", "-0.", "-0."}} */
} private void f126(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 0 )){   if((pointsArray[i+1][j] != 0 && pointsArray[i-1][j]!= 0 && pointsArray[i][j+1]!= 0 && pointsArray[i][j-1]!= 0 )){   if((pointsArray[i+1][j] > pointsArray[i][j] )) { pointsArray[i][j]  = 1; pointsArray[i+1][j] += 0;  } if(( pointsArray[i-1][j]> pointsArray[i][j] )) { pointsArray[i][j]  = 1; pointsArray[i-1][j] += 0;  } if(( pointsArray[i][j+1]> pointsArray[i][j] )) { pointsArray[i][j]  = 1; pointsArray[i][j+1] += 0;  } if(( pointsArray[i][j-1]> pointsArray[i][j] )) { pointsArray[i][j]  = 1; pointsArray[i][j-1] += 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">0a"}, {"!0&", "!0&", "!0&", "!0b"}, {">Ic", ">Ic", ">Ic", ">Id"}, {" 1.", "+0."}} */
} private void f127(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] >= 0 )){   if((pointsArray[i+1][j] <= 0 && pointsArray[i-1][j]<= 0 ) || ( pointsArray[i][j+1]<= 0 ) || ( pointsArray[i][j-1]<= 0 )){   if((pointsArray[i+1][j] != 0 && pointsArray[i-1][j]!= 0 )) { pointsArray[i][j] += 1; pointsArray[i+1][j]  = 0; pointsArray[i-1][j]  = 0;  } if(( pointsArray[i][j+1]!= 0 ) || ( pointsArray[i][j-1]!= 0 )) { pointsArray[i][j] += 1; pointsArray[i][j+1]  = 0; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"p0a"}, {"o0&", "o0|", "o0|", "o0b"}, {"!0&", "!0c", "!0|", "!0d"}, {"+1.", " 0.", " 0."}} */
} private void f128(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] == 0 && pointsArray[i][j]== 0 )){   if((pointsArray[i+1][j] == pointsArray[i][j] ) || ( pointsArray[i-1][j]== pointsArray[i][j] && pointsArray[i][j+1]== pointsArray[i][j] && pointsArray[i][j-1]== pointsArray[i][j] )){   if((pointsArray[i+1][j] < pointsArray[i][j] ) || ( pointsArray[i-1][j]< pointsArray[i][j] && pointsArray[i][j+1]< pointsArray[i][j] ) || ( pointsArray[i][j-1]< pointsArray[i][j] )) { pointsArray[i][j] += 2; pointsArray[i+1][j]  = 1; pointsArray[i-1][j]  = 1; pointsArray[i][j+1]  = 1; pointsArray[i][j-1]  = 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"=0&", "=0a"}, {"=I|", "=I&", "=I&", "=Ib"}, {"<I|", "<I&", "<I|", "<Id"}, {"+2.", " 1.", " 1.", " 1.", " 1."}} */
} private void f129(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 0 && pointsArray[i][j]> 1 )){   if((pointsArray[i+1][j] > 1 && pointsArray[i-1][j]> 1 ) || ( pointsArray[i][j+1]> 1 ) || ( pointsArray[i][j-1]> 1 )){   if((pointsArray[i+1][j] == pointsArray[i][j] && pointsArray[i-1][j]== pointsArray[i][j] )) { pointsArray[i][j] -= 0; pointsArray[i+1][j]  = 0; pointsArray[i-1][j]  = 0;  } if(( pointsArray[i][j+1]== pointsArray[i][j] ) || ( pointsArray[i][j-1]== pointsArray[i][j] )) { pointsArray[i][j] -= 0; pointsArray[i][j+1]  = 0; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<0&", ">1a"}, {">1&", ">1|", ">1|", ">1b"}, {"=I&", "=Ic", "=I|", "=Id"}, {"-0.", " 0.", " 0."}} */
} private void f130(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] >= 0 )){   if((pointsArray[i+1][j] > 0 && pointsArray[i-1][j]> 0 && pointsArray[i][j+1]> 0 && pointsArray[i][j-1]> 0 )){   if((pointsArray[i+1][j] != 0 )) { pointsArray[i][j] -= 2; pointsArray[i+1][j]  = 1;  } if(( pointsArray[i-1][j]!= 0 )) { pointsArray[i][j] -= 2; pointsArray[i-1][j]  = 1;  } if(( pointsArray[i][j+1]!= 0 )) { pointsArray[i][j] -= 2; pointsArray[i][j+1]  = 1;  } if(( pointsArray[i][j-1]!= 0 )) { pointsArray[i][j] -= 2; pointsArray[i][j-1]  = 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"p0a"}, {">0&", ">0&", ">0&", ">0b"}, {"!0c", "!0c", "!0c", "!0d"}, {"-2.", " 1."}} */
} private void f131(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 1 )){   if((pointsArray[i+1][j] <= 1 && pointsArray[i-1][j]<= 1 && pointsArray[i][j+1]<= 1 ) || ( pointsArray[i][j-1]<= 1 )){   if((pointsArray[i+1][j] == 1 )) { pointsArray[i][j] += 1; pointsArray[i+1][j]  = 0;  } if(( pointsArray[i-1][j]== 1 )) { pointsArray[i][j] += 1; pointsArray[i-1][j]  = 0;  } if(( pointsArray[i][j+1]== 1 )) { pointsArray[i][j] += 1; pointsArray[i][j+1]  = 0;  } if(( pointsArray[i][j-1]== 1 )) { pointsArray[i][j] += 1; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<1a"}, {"o1&", "o1&", "o1|", "o1b"}, {"=1c", "=1c", "=1c", "=1d"}, {"+1.", " 0."}} */
} private void f132(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] >= 0 )){   if((pointsArray[i+1][j] == 1 ) || ( pointsArray[i-1][j]== 1 ) || ( pointsArray[i][j+1]== 1 ) || ( pointsArray[i][j-1]== 1 )){   if((pointsArray[i+1][j] > pointsArray[i][j] ) || ( pointsArray[i-1][j]> pointsArray[i][j] )) { pointsArray[i][j] -= 0; pointsArray[i+1][j] += 1; pointsArray[i-1][j] += 1;  } if(( pointsArray[i][j+1]> pointsArray[i][j] && pointsArray[i][j-1]> pointsArray[i][j] )) { pointsArray[i][j] -= 0; pointsArray[i][j+1] += 1; pointsArray[i][j-1] += 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"p0a"}, {"=1|", "=1|", "=1|", "=1b"}, {">I|", ">Ic", ">I&", ">Id"}, {"-0.", "+1.", "+1."}} */
} private void f133(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] != 2 )){   if((pointsArray[i+1][j] == 0 ) || ( pointsArray[i-1][j]== 0 ) || ( pointsArray[i][j+1]== 0 && pointsArray[i][j-1]== 0 )){   if((pointsArray[i+1][j] < 1 )) { pointsArray[i][j] -= 0; pointsArray[i+1][j] -= 3;  } if(( pointsArray[i-1][j]< 1 )) { pointsArray[i][j] -= 0; pointsArray[i-1][j] -= 3;  } if(( pointsArray[i][j+1]< 1 )) { pointsArray[i][j] -= 0; pointsArray[i][j+1] -= 3;  } if(( pointsArray[i][j-1]< 1 )) { pointsArray[i][j] -= 0; pointsArray[i][j-1] -= 3;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"!2a"}, {"=0|", "=0|", "=0&", "=0b"}, {"<1c", "<1c", "<1c", "<1d"}, {"-0.", "-3."}} */
} private void f134(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 0 )){   if((pointsArray[i+1][j] != pointsArray[i][j] ) || ( pointsArray[i-1][j]!= pointsArray[i][j] ) || ( pointsArray[i][j+1]!= pointsArray[i][j] ) || ( pointsArray[i][j-1]!= pointsArray[i][j] )){   if((pointsArray[i+1][j] == 1 && pointsArray[i-1][j]== 1 && pointsArray[i][j+1]== 1 && pointsArray[i][j-1]== 1 )) { pointsArray[i][j]  = 1; pointsArray[i+1][j]  = 0; pointsArray[i-1][j]  = 0; pointsArray[i][j+1]  = 0; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<0a"}, {"!I|", "!I|", "!I|", "!Ib"}, {"=1&", "=1&", "=1&", "=1d"}, {" 1.", " 0.", " 0.", " 0.", " 0."}} */
} private void f135(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 2 )){   if((pointsArray[i+1][j] != pointsArray[i][j] ) || ( pointsArray[i-1][j]!= pointsArray[i][j] && pointsArray[i][j+1]!= pointsArray[i][j] && pointsArray[i][j-1]!= pointsArray[i][j] )){   if((pointsArray[i+1][j] < 3 && pointsArray[i-1][j]< 3 ) || ( pointsArray[i][j+1]< 3 ) || ( pointsArray[i][j-1]< 3 )) { pointsArray[i][j] += 2; pointsArray[i+1][j] -= 3; pointsArray[i-1][j] -= 3; pointsArray[i][j+1] -= 3; pointsArray[i][j-1] -= 3;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">2a"}, {"!I|", "!I&", "!I&", "!Ib"}, {"<3&", "<3|", "<3|", "<3d"}, {"+2.", "-3.", "-3.", "-3.", "-3."}} */
} private void f136(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] <= 1 )){   if((pointsArray[i+1][j] != 1 && pointsArray[i-1][j]!= 1 && pointsArray[i][j+1]!= 1 ) || ( pointsArray[i][j-1]!= 1 )){   if((pointsArray[i+1][j] == 1 ) || ( pointsArray[i-1][j]== 1 )) { pointsArray[i][j]  = 1; pointsArray[i+1][j] -= 0; pointsArray[i-1][j] -= 0;  } if(( pointsArray[i][j+1]== 1 && pointsArray[i][j-1]== 1 )) { pointsArray[i][j]  = 1; pointsArray[i][j+1] -= 0; pointsArray[i][j-1] -= 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"o1a"}, {"!1&", "!1&", "!1|", "!1b"}, {"=1|", "=1c", "=1&", "=1d"}, {" 1.", "-0.", "-0."}} */
} private void f137(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] == 0 )){   if((pointsArray[i+1][j] != 0 ) || ( pointsArray[i-1][j]!= 0 && pointsArray[i][j+1]!= 0 && pointsArray[i][j-1]!= 0 )){   if((pointsArray[i+1][j] < 0 )) { pointsArray[i][j] += 0; pointsArray[i+1][j] += 0;  } if(( pointsArray[i-1][j]< 0 )) { pointsArray[i][j] += 0; pointsArray[i-1][j] += 0;  } if(( pointsArray[i][j+1]< 0 )) { pointsArray[i][j] += 0; pointsArray[i][j+1] += 0;  } if(( pointsArray[i][j-1]< 0 )) { pointsArray[i][j] += 0; pointsArray[i][j-1] += 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"=0a"}, {"!0|", "!0&", "!0&", "!0b"}, {"<0c", "<0c", "<0c", "<0d"}, {"+0.", "+0."}} */
} private void f138(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 1 )){   if((pointsArray[i+1][j] == 2 && pointsArray[i-1][j]== 2 && pointsArray[i][j+1]== 2 && pointsArray[i][j-1]== 2 )){   if((pointsArray[i+1][j] >= 1 && pointsArray[i-1][j]>= 1 )) { pointsArray[i][j]  = 3; pointsArray[i+1][j] -= 1; pointsArray[i-1][j] -= 1;  } if(( pointsArray[i][j+1]>= 1 ) || ( pointsArray[i][j-1]>= 1 )) { pointsArray[i][j]  = 3; pointsArray[i][j+1] -= 1; pointsArray[i][j-1] -= 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">1a"}, {"=2&", "=2&", "=2&", "=2b"}, {"p1&", "p1c", "p1|", "p1d"}, {" 3.", "-1.", "-1."}} */
} private void f139(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] <= 1 && pointsArray[i][j]> 0 )){   if((pointsArray[i+1][j] < 0 && pointsArray[i-1][j]< 0 && pointsArray[i][j+1]< 0 ) || ( pointsArray[i][j-1]< 0 )){   if((pointsArray[i+1][j] == 1 )) { pointsArray[i][j] += 1; pointsArray[i+1][j] += 1;  } if(( pointsArray[i-1][j]== 1 )) { pointsArray[i][j] += 1; pointsArray[i-1][j] += 1;  } if(( pointsArray[i][j+1]== 1 )) { pointsArray[i][j] += 1; pointsArray[i][j+1] += 1;  } if(( pointsArray[i][j-1]== 1 )) { pointsArray[i][j] += 1; pointsArray[i][j-1] += 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"o1&", ">0a"}, {"<0&", "<0&", "<0|", "<0b"}, {"=1c", "=1c", "=1c", "=1d"}, {"+1.", "+1."}} */
} private void f140(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] >= 3 ) || ( pointsArray[i][j]>= 1 )){   if((pointsArray[i+1][j] < pointsArray[i][j] && pointsArray[i-1][j]< pointsArray[i][j] && pointsArray[i][j+1]< pointsArray[i][j] && pointsArray[i][j-1]< pointsArray[i][j] )){   if((pointsArray[i+1][j] != 3 && pointsArray[i-1][j]!= 3 )) { pointsArray[i][j]  = 1; pointsArray[i+1][j] += 1; pointsArray[i-1][j] += 1;  } if(( pointsArray[i][j+1]!= 3 ) || ( pointsArray[i][j-1]!= 3 )) { pointsArray[i][j]  = 1; pointsArray[i][j+1] += 1; pointsArray[i][j-1] += 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"p3|", "p1a"}, {"<I&", "<I&", "<I&", "<Ib"}, {"!3&", "!3c", "!3|", "!3d"}, {" 1.", "+1.", "+1."}} */
} private void f141(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] >= 1 )){   if((pointsArray[i+1][j] < 0 && pointsArray[i-1][j]< 0 && pointsArray[i][j+1]< 0 ) || ( pointsArray[i][j-1]< 0 )){   if((pointsArray[i+1][j] != pointsArray[i][j] )) { pointsArray[i][j] += 0; pointsArray[i+1][j] -= 0;  } if(( pointsArray[i-1][j]!= pointsArray[i][j] )) { pointsArray[i][j] += 0; pointsArray[i-1][j] -= 0;  } if(( pointsArray[i][j+1]!= pointsArray[i][j] )) { pointsArray[i][j] += 0; pointsArray[i][j+1] -= 0;  } if(( pointsArray[i][j-1]!= pointsArray[i][j] )) { pointsArray[i][j] += 0; pointsArray[i][j-1] -= 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"p1a"}, {"<0&", "<0&", "<0|", "<0b"}, {"!Ic", "!Ic", "!Ic", "!Id"}, {"+0.", "-0."}} */
} private void f142(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] != 0 )){   if((pointsArray[i+1][j] >= 0 ) || ( pointsArray[i-1][j]>= 0 && pointsArray[i][j+1]>= 0 && pointsArray[i][j-1]>= 0 )){   if((pointsArray[i+1][j] == 1 )) { pointsArray[i][j]  = 1; pointsArray[i+1][j] += 0;  } if(( pointsArray[i-1][j]== 1 )) { pointsArray[i][j]  = 1; pointsArray[i-1][j] += 0;  } if(( pointsArray[i][j+1]== 1 )) { pointsArray[i][j]  = 1; pointsArray[i][j+1] += 0;  } if(( pointsArray[i][j-1]== 1 )) { pointsArray[i][j]  = 1; pointsArray[i][j-1] += 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"!0a"}, {"p0|", "p0&", "p0&", "p0b"}, {"=1c", "=1c", "=1c", "=1d"}, {" 1.", "+0."}} */
} private void f143(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 1 ) || ( pointsArray[i][j]== 2 )){   if((pointsArray[i+1][j] != 0 && pointsArray[i-1][j]!= 0 && pointsArray[i][j+1]!= 0 ) || ( pointsArray[i][j-1]!= 0 )){   if((pointsArray[i+1][j] == 3 )) { pointsArray[i][j] -= 3; pointsArray[i+1][j] -= 0;  } if(( pointsArray[i-1][j]== 3 )) { pointsArray[i][j] -= 3; pointsArray[i-1][j] -= 0;  } if(( pointsArray[i][j+1]== 3 )) { pointsArray[i][j] -= 3; pointsArray[i][j+1] -= 0;  } if(( pointsArray[i][j-1]== 3 )) { pointsArray[i][j] -= 3; pointsArray[i][j-1] -= 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">1|", "=2a"}, {"!0&", "!0&", "!0|", "!0b"}, {"=3c", "=3c", "=3c", "=3d"}, {"-3.", "-0."}} */
} private void f144(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] == 0 )){   if((pointsArray[i+1][j] >= pointsArray[i][j] ) || ( pointsArray[i-1][j]>= pointsArray[i][j] ) || ( pointsArray[i][j+1]>= pointsArray[i][j] ) || ( pointsArray[i][j-1]>= pointsArray[i][j] )){   if((pointsArray[i+1][j] != pointsArray[i][j] && pointsArray[i-1][j]!= pointsArray[i][j] && pointsArray[i][j+1]!= pointsArray[i][j] ) || ( pointsArray[i][j-1]!= pointsArray[i][j] )) { pointsArray[i][j]  = 0; pointsArray[i+1][j]  = 1; pointsArray[i-1][j]  = 1; pointsArray[i][j+1]  = 1; pointsArray[i][j-1]  = 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"=0a"}, {"pI|", "pI|", "pI|", "pIb"}, {"!I&", "!I&", "!I|", "!Id"}, {" 0.", " 1.", " 1.", " 1.", " 1."}} */
} private void f145(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] != 3 && pointsArray[i][j]>= 2 )){   if((pointsArray[i+1][j] >= 0 && pointsArray[i-1][j]>= 0 && pointsArray[i][j+1]>= 0 && pointsArray[i][j-1]>= 0 )){   if((pointsArray[i+1][j] <= 2 ) || ( pointsArray[i-1][j]<= 2 )) { pointsArray[i][j] += 2; pointsArray[i+1][j]  = 0; pointsArray[i-1][j]  = 0;  } if(( pointsArray[i][j+1]<= 2 ) || ( pointsArray[i][j-1]<= 2 )) { pointsArray[i][j] += 2; pointsArray[i][j+1]  = 0; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"!3&", "p2a"}, {"p0&", "p0&", "p0&", "p0b"}, {"o2|", "o2c", "o2|", "o2d"}, {"+2.", " 0.", " 0."}} */
} private void f146(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] >= 1 ) || ( pointsArray[i][j]> 0 )){   if((pointsArray[i+1][j] != 0 ) || ( pointsArray[i-1][j]!= 0 && pointsArray[i][j+1]!= 0 && pointsArray[i][j-1]!= 0 )){   if((pointsArray[i+1][j] <= 0 )) { pointsArray[i][j] += 1; pointsArray[i+1][j]  = 0;  } if(( pointsArray[i-1][j]<= 0 )) { pointsArray[i][j] += 1; pointsArray[i-1][j]  = 0;  } if(( pointsArray[i][j+1]<= 0 )) { pointsArray[i][j] += 1; pointsArray[i][j+1]  = 0;  } if(( pointsArray[i][j-1]<= 0 )) { pointsArray[i][j] += 1; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"p1|", ">0a"}, {"!0|", "!0&", "!0&", "!0b"}, {"o0c", "o0c", "o0c", "o0d"}, {"+1.", " 0."}} */
} private void f147(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] <= 1 && pointsArray[i][j]< 1 )){   if((pointsArray[i+1][j] <= pointsArray[i][j] && pointsArray[i-1][j]<= pointsArray[i][j] && pointsArray[i][j+1]<= pointsArray[i][j] ) || ( pointsArray[i][j-1]<= pointsArray[i][j] )){   if((pointsArray[i+1][j] <= 0 && pointsArray[i-1][j]<= 0 )) { pointsArray[i][j]  = 1; pointsArray[i+1][j] += 1; pointsArray[i-1][j] += 1;  } if(( pointsArray[i][j+1]<= 0 ) || ( pointsArray[i][j-1]<= 0 )) { pointsArray[i][j]  = 1; pointsArray[i][j+1] += 1; pointsArray[i][j-1] += 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"o1&", "<1a"}, {"oI&", "oI&", "oI|", "oIb"}, {"o0&", "o0c", "o0|", "o0d"}, {" 1.", "+1.", "+1."}} */
} private void f148(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 2 )){   if((pointsArray[i+1][j] > 0 && pointsArray[i-1][j]> 0 && pointsArray[i][j+1]> 0 && pointsArray[i][j-1]> 0 )){   if((pointsArray[i+1][j] > 2 )) { pointsArray[i][j] += 2; pointsArray[i+1][j] += 2;  } if(( pointsArray[i-1][j]> 2 )) { pointsArray[i][j] += 2; pointsArray[i-1][j] += 2;  } if(( pointsArray[i][j+1]> 2 )) { pointsArray[i][j] += 2; pointsArray[i][j+1] += 2;  } if(( pointsArray[i][j-1]> 2 )) { pointsArray[i][j] += 2; pointsArray[i][j-1] += 2;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<2a"}, {">0&", ">0&", ">0&", ">0b"}, {">2c", ">2c", ">2c", ">2d"}, {"+2.", "+2."}} */
} private void f149(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 0 )){   if((pointsArray[i+1][j] == 0 ) || ( pointsArray[i-1][j]== 0 && pointsArray[i][j+1]== 0 && pointsArray[i][j-1]== 0 )){   if((pointsArray[i+1][j] >= 0 ) || ( pointsArray[i-1][j]>= 0 && pointsArray[i][j+1]>= 0 && pointsArray[i][j-1]>= 0 )) { pointsArray[i][j] -= 1; pointsArray[i+1][j] -= 1; pointsArray[i-1][j] -= 1; pointsArray[i][j+1] -= 1; pointsArray[i][j-1] -= 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<0a"}, {"=0|", "=0&", "=0&", "=0b"}, {"p0|", "p0&", "p0&", "p0d"}, {"-1.", "-1.", "-1.", "-1.", "-1."}} */
} private void f150(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] >= 3 && pointsArray[i][j]>= 2 )){   if((pointsArray[i+1][j] >= 1 ) || ( pointsArray[i-1][j]>= 1 ) || ( pointsArray[i][j+1]>= 1 && pointsArray[i][j-1]>= 1 )){   if((pointsArray[i+1][j] > 1 )) { pointsArray[i][j]  = 1; pointsArray[i+1][j] += 3;  } if(( pointsArray[i-1][j]> 1 )) { pointsArray[i][j]  = 1; pointsArray[i-1][j] += 3;  } if(( pointsArray[i][j+1]> 1 )) { pointsArray[i][j]  = 1; pointsArray[i][j+1] += 3;  } if(( pointsArray[i][j-1]> 1 )) { pointsArray[i][j]  = 1; pointsArray[i][j-1] += 3;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"p3&", "p2a"}, {"p1|", "p1|", "p1&", "p1b"}, {">1c", ">1c", ">1c", ">1d"}, {" 1.", "+3."}} */
} private void f151(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] == 1 )){   if((pointsArray[i+1][j] <= 0 ) || ( pointsArray[i-1][j]<= 0 ) || ( pointsArray[i][j+1]<= 0 && pointsArray[i][j-1]<= 0 )){   if((pointsArray[i+1][j] < 1 ) || ( pointsArray[i-1][j]< 1 )) { pointsArray[i][j] -= 1; pointsArray[i+1][j] += 0; pointsArray[i-1][j] += 0;  } if(( pointsArray[i][j+1]< 1 && pointsArray[i][j-1]< 1 )) { pointsArray[i][j] -= 1; pointsArray[i][j+1] += 0; pointsArray[i][j-1] += 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"=1a"}, {"o0|", "o0|", "o0&", "o0b"}, {"<1|", "<1c", "<1&", "<1d"}, {"-1.", "+0.", "+0."}} */
} private void f152(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 0 ) || ( pointsArray[i][j]!= 0 )){   if((pointsArray[i+1][j] < pointsArray[i][j] && pointsArray[i-1][j]< pointsArray[i][j] && pointsArray[i][j+1]< pointsArray[i][j] ) || ( pointsArray[i][j-1]< pointsArray[i][j] )){   if((pointsArray[i+1][j] != pointsArray[i][j] ) || ( pointsArray[i-1][j]!= pointsArray[i][j] ) || ( pointsArray[i][j+1]!= pointsArray[i][j] && pointsArray[i][j-1]!= pointsArray[i][j] )) { pointsArray[i][j] += 1; pointsArray[i+1][j]  = 0; pointsArray[i-1][j]  = 0; pointsArray[i][j+1]  = 0; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">0|", "!0a"}, {"<I&", "<I&", "<I|", "<Ib"}, {"!I|", "!I|", "!I&", "!Id"}, {"+1.", " 0.", " 0.", " 0.", " 0."}} */
} private void f153(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] >= 3 && pointsArray[i][j]!= 2 )){   if((pointsArray[i+1][j] != 1 && pointsArray[i-1][j]!= 1 && pointsArray[i][j+1]!= 1 && pointsArray[i][j-1]!= 1 )){   if((pointsArray[i+1][j] <= 3 ) || ( pointsArray[i-1][j]<= 3 && pointsArray[i][j+1]<= 3 && pointsArray[i][j-1]<= 3 )) { pointsArray[i][j] += 2; pointsArray[i+1][j] += 2; pointsArray[i-1][j] += 2; pointsArray[i][j+1] += 2; pointsArray[i][j-1] += 2;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"p3&", "!2a"}, {"!1&", "!1&", "!1&", "!1b"}, {"o3|", "o3&", "o3&", "o3d"}, {"+2.", "+2.", "+2.", "+2.", "+2."}} */
} private void f154(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 0 && pointsArray[i][j]!= 0 )){   if((pointsArray[i+1][j] == pointsArray[i][j] && pointsArray[i-1][j]== pointsArray[i][j] ) || ( pointsArray[i][j+1]== pointsArray[i][j] ) || ( pointsArray[i][j-1]== pointsArray[i][j] )){   if((pointsArray[i+1][j] != 1 )) { pointsArray[i][j] += 1; pointsArray[i+1][j] += 0;  } if(( pointsArray[i-1][j]!= 1 )) { pointsArray[i][j] += 1; pointsArray[i-1][j] += 0;  } if(( pointsArray[i][j+1]!= 1 )) { pointsArray[i][j] += 1; pointsArray[i][j+1] += 0;  } if(( pointsArray[i][j-1]!= 1 )) { pointsArray[i][j] += 1; pointsArray[i][j-1] += 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<0&", "!0a"}, {"=I&", "=I|", "=I|", "=Ib"}, {"!1c", "!1c", "!1c", "!1d"}, {"+1.", "+0."}} */
} private void f155(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] <= 2 ) || ( pointsArray[i][j]== 1 )){   if((pointsArray[i+1][j] == 1 ) || ( pointsArray[i-1][j]== 1 ) || ( pointsArray[i][j+1]== 1 ) || ( pointsArray[i][j-1]== 1 )){   if((pointsArray[i+1][j] <= pointsArray[i][j] && pointsArray[i-1][j]<= pointsArray[i][j] && pointsArray[i][j+1]<= pointsArray[i][j] ) || ( pointsArray[i][j-1]<= pointsArray[i][j] )) { pointsArray[i][j] += 0; pointsArray[i+1][j]  = 0; pointsArray[i-1][j]  = 0; pointsArray[i][j+1]  = 0; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"o2|", "=1a"}, {"=1|", "=1|", "=1|", "=1b"}, {"oI&", "oI&", "oI|", "oId"}, {"+0.", " 0.", " 0.", " 0.", " 0."}} */
} private void f156(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] != 0 ) || ( pointsArray[i][j]== 0 )){   if((pointsArray[i+1][j] != 1 && pointsArray[i-1][j]!= 1 ) || ( pointsArray[i][j+1]!= 1 ) || ( pointsArray[i][j-1]!= 1 )){   if((pointsArray[i+1][j] <= 0 && pointsArray[i-1][j]<= 0 )) { pointsArray[i][j] -= 1; pointsArray[i+1][j] += 1; pointsArray[i-1][j] += 1;  } if(( pointsArray[i][j+1]<= 0 && pointsArray[i][j-1]<= 0 )) { pointsArray[i][j] -= 1; pointsArray[i][j+1] += 1; pointsArray[i][j-1] += 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"!0|", "=0a"}, {"!1&", "!1|", "!1|", "!1b"}, {"o0&", "o0c", "o0&", "o0d"}, {"-1.", "+1.", "+1."}} */
} private void f157(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] != 0 ) || ( pointsArray[i][j]> 1 )){   if((pointsArray[i+1][j] < 0 && pointsArray[i-1][j]< 0 && pointsArray[i][j+1]< 0 ) || ( pointsArray[i][j-1]< 0 )){   if((pointsArray[i+1][j] > pointsArray[i][j] ) || ( pointsArray[i-1][j]> pointsArray[i][j] )) { pointsArray[i][j]  = 0; pointsArray[i+1][j] -= 1; pointsArray[i-1][j] -= 1;  } if(( pointsArray[i][j+1]> pointsArray[i][j] && pointsArray[i][j-1]> pointsArray[i][j] )) { pointsArray[i][j]  = 0; pointsArray[i][j+1] -= 1; pointsArray[i][j-1] -= 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"!0|", ">1a"}, {"<0&", "<0&", "<0|", "<0b"}, {">I|", ">Ic", ">I&", ">Id"}, {" 0.", "-1.", "-1."}} */
} private void f158(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] <= 2 )){   if((pointsArray[i+1][j] < pointsArray[i][j] ) || ( pointsArray[i-1][j]< pointsArray[i][j] ) || ( pointsArray[i][j+1]< pointsArray[i][j] && pointsArray[i][j-1]< pointsArray[i][j] )){   if((pointsArray[i+1][j] == 3 ) || ( pointsArray[i-1][j]== 3 )) { pointsArray[i][j] -= 3; pointsArray[i+1][j] += 3; pointsArray[i-1][j] += 3;  } if(( pointsArray[i][j+1]== 3 ) || ( pointsArray[i][j-1]== 3 )) { pointsArray[i][j] -= 3; pointsArray[i][j+1] += 3; pointsArray[i][j-1] += 3;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"o2a"}, {"<I|", "<I|", "<I&", "<Ib"}, {"=3|", "=3c", "=3|", "=3d"}, {"-3.", "+3.", "+3."}} */
} private void f159(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] != 0 )){   if((pointsArray[i+1][j] == pointsArray[i][j] && pointsArray[i-1][j]== pointsArray[i][j] && pointsArray[i][j+1]== pointsArray[i][j] && pointsArray[i][j-1]== pointsArray[i][j] )){   if((pointsArray[i+1][j] == 0 ) || ( pointsArray[i-1][j]== 0 )) { pointsArray[i][j]  = 1; pointsArray[i+1][j]  = 1; pointsArray[i-1][j]  = 1;  } if(( pointsArray[i][j+1]== 0 ) || ( pointsArray[i][j-1]== 0 )) { pointsArray[i][j]  = 1; pointsArray[i][j+1]  = 1; pointsArray[i][j-1]  = 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"!0a"}, {"=I&", "=I&", "=I&", "=Ib"}, {"=0|", "=0c", "=0|", "=0d"}, {" 1.", " 1.", " 1."}} */
} private void f160(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] <= 1 && pointsArray[i][j]> 1 )){   if((pointsArray[i+1][j] < 3 && pointsArray[i-1][j]< 3 && pointsArray[i][j+1]< 3 && pointsArray[i][j-1]< 3 )){   if((pointsArray[i+1][j] != 1 ) || ( pointsArray[i-1][j]!= 1 )) { pointsArray[i][j]  = 1; pointsArray[i+1][j]  = 0; pointsArray[i-1][j]  = 0;  } if(( pointsArray[i][j+1]!= 1 ) || ( pointsArray[i][j-1]!= 1 )) { pointsArray[i][j]  = 1; pointsArray[i][j+1]  = 0; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"o1&", ">1a"}, {"<3&", "<3&", "<3&", "<3b"}, {"!1|", "!1c", "!1|", "!1d"}, {" 1.", " 0.", " 0."}} */
} private void f161(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 1 ) || ( pointsArray[i][j]!= 0 )){   if((pointsArray[i+1][j] != pointsArray[i][j] && pointsArray[i-1][j]!= pointsArray[i][j] && pointsArray[i][j+1]!= pointsArray[i][j] ) || ( pointsArray[i][j-1]!= pointsArray[i][j] )){   if((pointsArray[i+1][j] <= 0 ) || ( pointsArray[i-1][j]<= 0 )) { pointsArray[i][j]  = 1; pointsArray[i+1][j] += 1; pointsArray[i-1][j] += 1;  } if(( pointsArray[i][j+1]<= 0 && pointsArray[i][j-1]<= 0 )) { pointsArray[i][j]  = 1; pointsArray[i][j+1] += 1; pointsArray[i][j-1] += 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<1|", "!0a"}, {"!I&", "!I&", "!I|", "!Ib"}, {"o0|", "o0c", "o0&", "o0d"}, {" 1.", "+1.", "+1."}} */
} private void f162(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 0 )){   if((pointsArray[i+1][j] < 0 && pointsArray[i-1][j]< 0 && pointsArray[i][j+1]< 0 ) || ( pointsArray[i][j-1]< 0 )){   if((pointsArray[i+1][j] > pointsArray[i][j] ) || ( pointsArray[i-1][j]> pointsArray[i][j] )) { pointsArray[i][j] -= 1; pointsArray[i+1][j] += 0; pointsArray[i-1][j] += 0;  } if(( pointsArray[i][j+1]> pointsArray[i][j] ) || ( pointsArray[i][j-1]> pointsArray[i][j] )) { pointsArray[i][j] -= 1; pointsArray[i][j+1] += 0; pointsArray[i][j-1] += 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">0a"}, {"<0&", "<0&", "<0|", "<0b"}, {">I|", ">Ic", ">I|", ">Id"}, {"-1.", "+0.", "+0."}} */
} private void f163(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] == 0 ) || ( pointsArray[i][j]> 2 )){   if((pointsArray[i+1][j] < 3 ) || ( pointsArray[i-1][j]< 3 ) || ( pointsArray[i][j+1]< 3 ) || ( pointsArray[i][j-1]< 3 )){   if((pointsArray[i+1][j] == 0 )) { pointsArray[i][j] -= 3; pointsArray[i+1][j] += 2;  } if(( pointsArray[i-1][j]== 0 )) { pointsArray[i][j] -= 3; pointsArray[i-1][j] += 2;  } if(( pointsArray[i][j+1]== 0 )) { pointsArray[i][j] -= 3; pointsArray[i][j+1] += 2;  } if(( pointsArray[i][j-1]== 0 )) { pointsArray[i][j] -= 3; pointsArray[i][j-1] += 2;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"=0|", ">2a"}, {"<3|", "<3|", "<3|", "<3b"}, {"=0c", "=0c", "=0c", "=0d"}, {"-3.", "+2."}} */
} private void f164(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] >= 1 ) || ( pointsArray[i][j]!= 0 )){   if((pointsArray[i+1][j] > 1 ) || ( pointsArray[i-1][j]> 1 ) || ( pointsArray[i][j+1]> 1 && pointsArray[i][j-1]> 1 )){   if((pointsArray[i+1][j] == 0 && pointsArray[i-1][j]== 0 && pointsArray[i][j+1]== 0 && pointsArray[i][j-1]== 0 )) { pointsArray[i][j]  = 0; pointsArray[i+1][j] -= 1; pointsArray[i-1][j] -= 1; pointsArray[i][j+1] -= 1; pointsArray[i][j-1] -= 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"p1|", "!0a"}, {">1|", ">1|", ">1&", ">1b"}, {"=0&", "=0&", "=0&", "=0d"}, {" 0.", "-1.", "-1.", "-1.", "-1."}} */
} private void f165(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] <= 3 && pointsArray[i][j]> 1 )){   if((pointsArray[i+1][j] < 1 ) || ( pointsArray[i-1][j]< 1 ) || ( pointsArray[i][j+1]< 1 ) || ( pointsArray[i][j-1]< 1 )){   if((pointsArray[i+1][j] >= 1 )) { pointsArray[i][j] += 3; pointsArray[i+1][j]  = 3;  } if(( pointsArray[i-1][j]>= 1 )) { pointsArray[i][j] += 3; pointsArray[i-1][j]  = 3;  } if(( pointsArray[i][j+1]>= 1 )) { pointsArray[i][j] += 3; pointsArray[i][j+1]  = 3;  } if(( pointsArray[i][j-1]>= 1 )) { pointsArray[i][j] += 3; pointsArray[i][j-1]  = 3;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"o3&", ">1a"}, {"<1|", "<1|", "<1|", "<1b"}, {"p1c", "p1c", "p1c", "p1d"}, {"+3.", " 3."}} */
} private void f166(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] != 1 )){   if((pointsArray[i+1][j] != pointsArray[i][j] && pointsArray[i-1][j]!= pointsArray[i][j] && pointsArray[i][j+1]!= pointsArray[i][j] && pointsArray[i][j-1]!= pointsArray[i][j] )){   if((pointsArray[i+1][j] != 0 && pointsArray[i-1][j]!= 0 )) { pointsArray[i][j] += 0; pointsArray[i+1][j] += 0; pointsArray[i-1][j] += 0;  } if(( pointsArray[i][j+1]!= 0 && pointsArray[i][j-1]!= 0 )) { pointsArray[i][j] += 0; pointsArray[i][j+1] += 0; pointsArray[i][j-1] += 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"!1a"}, {"!I&", "!I&", "!I&", "!Ib"}, {"!0&", "!0c", "!0&", "!0d"}, {"+0.", "+0.", "+0."}} */
} private void f167(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] <= 0 && pointsArray[i][j]> 0 )){   if((pointsArray[i+1][j] != 0 ) || ( pointsArray[i-1][j]!= 0 && pointsArray[i][j+1]!= 0 && pointsArray[i][j-1]!= 0 )){   if((pointsArray[i+1][j] <= pointsArray[i][j] ) || ( pointsArray[i-1][j]<= pointsArray[i][j] ) || ( pointsArray[i][j+1]<= pointsArray[i][j] && pointsArray[i][j-1]<= pointsArray[i][j] )) { pointsArray[i][j] -= 1; pointsArray[i+1][j] += 0; pointsArray[i-1][j] += 0; pointsArray[i][j+1] += 0; pointsArray[i][j-1] += 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"o0&", ">0a"}, {"!0|", "!0&", "!0&", "!0b"}, {"oI|", "oI|", "oI&", "oId"}, {"-1.", "+0.", "+0.", "+0.", "+0."}} */
} private void f168(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] <= 0 ) || ( pointsArray[i][j]<= 1 )){   if((pointsArray[i+1][j] > 0 ) || ( pointsArray[i-1][j]> 0 ) || ( pointsArray[i][j+1]> 0 ) || ( pointsArray[i][j-1]> 0 )){   if((pointsArray[i+1][j] > 2 ) || ( pointsArray[i-1][j]> 2 ) || ( pointsArray[i][j+1]> 2 ) || ( pointsArray[i][j-1]> 2 )) { pointsArray[i][j] += 2; pointsArray[i+1][j]  = 3; pointsArray[i-1][j]  = 3; pointsArray[i][j+1]  = 3; pointsArray[i][j-1]  = 3;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"o0|", "o1a"}, {">0|", ">0|", ">0|", ">0b"}, {">2|", ">2|", ">2|", ">2d"}, {"+2.", " 3.", " 3.", " 3.", " 3."}} */
} private void f169(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] != 0 && pointsArray[i][j]< 1 )){   if((pointsArray[i+1][j] != 1 ) || ( pointsArray[i-1][j]!= 1 && pointsArray[i][j+1]!= 1 && pointsArray[i][j-1]!= 1 )){   if((pointsArray[i+1][j] > 0 )) { pointsArray[i][j]  = 0; pointsArray[i+1][j]  = 0;  } if(( pointsArray[i-1][j]> 0 )) { pointsArray[i][j]  = 0; pointsArray[i-1][j]  = 0;  } if(( pointsArray[i][j+1]> 0 )) { pointsArray[i][j]  = 0; pointsArray[i][j+1]  = 0;  } if(( pointsArray[i][j-1]> 0 )) { pointsArray[i][j]  = 0; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"!0&", "<1a"}, {"!1|", "!1&", "!1&", "!1b"}, {">0c", ">0c", ">0c", ">0d"}, {" 0.", " 0."}} */
} private void f170(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 0 )){   if((pointsArray[i+1][j] <= 3 && pointsArray[i-1][j]<= 3 ) || ( pointsArray[i][j+1]<= 3 && pointsArray[i][j-1]<= 3 )){   if((pointsArray[i+1][j] >= 0 ) || ( pointsArray[i-1][j]>= 0 ) || ( pointsArray[i][j+1]>= 0 ) || ( pointsArray[i][j-1]>= 0 )) { pointsArray[i][j]  = 1; pointsArray[i+1][j] -= 3; pointsArray[i-1][j] -= 3; pointsArray[i][j+1] -= 3; pointsArray[i][j-1] -= 3;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">0a"}, {"o3&", "o3|", "o3&", "o3b"}, {"p0|", "p0|", "p0|", "p0d"}, {" 1.", "-3.", "-3.", "-3.", "-3."}} */
} private void f171(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 1 )){   if((pointsArray[i+1][j] <= pointsArray[i][j] && pointsArray[i-1][j]<= pointsArray[i][j] && pointsArray[i][j+1]<= pointsArray[i][j] && pointsArray[i][j-1]<= pointsArray[i][j] )){   if((pointsArray[i+1][j] != 0 )) { pointsArray[i][j] += 1; pointsArray[i+1][j]  = 0;  } if(( pointsArray[i-1][j]!= 0 )) { pointsArray[i][j] += 1; pointsArray[i-1][j]  = 0;  } if(( pointsArray[i][j+1]!= 0 )) { pointsArray[i][j] += 1; pointsArray[i][j+1]  = 0;  } if(( pointsArray[i][j-1]!= 0 )) { pointsArray[i][j] += 1; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">1a"}, {"oI&", "oI&", "oI&", "oIb"}, {"!0c", "!0c", "!0c", "!0d"}, {"+1.", " 0."}} */
} private void f172(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] <= 0 && pointsArray[i][j]<= 1 )){   if((pointsArray[i+1][j] >= 1 ) || ( pointsArray[i-1][j]>= 1 ) || ( pointsArray[i][j+1]>= 1 ) || ( pointsArray[i][j-1]>= 1 )){   if((pointsArray[i+1][j] > 0 ) || ( pointsArray[i-1][j]> 0 && pointsArray[i][j+1]> 0 ) || ( pointsArray[i][j-1]> 0 )) { pointsArray[i][j] += 0; pointsArray[i+1][j]  = 0; pointsArray[i-1][j]  = 0; pointsArray[i][j+1]  = 0; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"o0&", "o1a"}, {"p1|", "p1|", "p1|", "p1b"}, {">0|", ">0&", ">0|", ">0d"}, {"+0.", " 0.", " 0.", " 0.", " 0."}} */
} private void f173(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 0 ) || ( pointsArray[i][j]!= 3 )){   if((pointsArray[i+1][j] >= 3 && pointsArray[i-1][j]>= 3 ) || ( pointsArray[i][j+1]>= 3 ) || ( pointsArray[i][j-1]>= 3 )){   if((pointsArray[i+1][j] >= 3 && pointsArray[i-1][j]>= 3 ) || ( pointsArray[i][j+1]>= 3 ) || ( pointsArray[i][j-1]>= 3 )) { pointsArray[i][j]  = 1; pointsArray[i+1][j]  = 3; pointsArray[i-1][j]  = 3; pointsArray[i][j+1]  = 3; pointsArray[i][j-1]  = 3;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">0|", "!3a"}, {"p3&", "p3|", "p3|", "p3b"}, {"p3&", "p3|", "p3|", "p3d"}, {" 1.", " 3.", " 3.", " 3.", " 3."}} */
} private void f174(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 1 )){   if((pointsArray[i+1][j] >= 1 && pointsArray[i-1][j]>= 1 && pointsArray[i][j+1]>= 1 ) || ( pointsArray[i][j-1]>= 1 )){   if((pointsArray[i+1][j] != 1 && pointsArray[i-1][j]!= 1 )) { pointsArray[i][j]  = 1; pointsArray[i+1][j]  = 1; pointsArray[i-1][j]  = 1;  } if(( pointsArray[i][j+1]!= 1 ) || ( pointsArray[i][j-1]!= 1 )) { pointsArray[i][j]  = 1; pointsArray[i][j+1]  = 1; pointsArray[i][j-1]  = 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<1a"}, {"p1&", "p1&", "p1|", "p1b"}, {"!1&", "!1c", "!1|", "!1d"}, {" 1.", " 1.", " 1."}} */
} private void f175(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 1 )){   if((pointsArray[i+1][j] == 2 && pointsArray[i-1][j]== 2 && pointsArray[i][j+1]== 2 && pointsArray[i][j-1]== 2 )){   if((pointsArray[i+1][j] > pointsArray[i][j] )) { pointsArray[i][j] -= 1; pointsArray[i+1][j]  = 3;  } if(( pointsArray[i-1][j]> pointsArray[i][j] )) { pointsArray[i][j] -= 1; pointsArray[i-1][j]  = 3;  } if(( pointsArray[i][j+1]> pointsArray[i][j] )) { pointsArray[i][j] -= 1; pointsArray[i][j+1]  = 3;  } if(( pointsArray[i][j-1]> pointsArray[i][j] )) { pointsArray[i][j] -= 1; pointsArray[i][j-1]  = 3;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<1a"}, {"=2&", "=2&", "=2&", "=2b"}, {">Ic", ">Ic", ">Ic", ">Id"}, {"-1.", " 3."}} */
} private void f176(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 1 && pointsArray[i][j]> 0 )){   if((pointsArray[i+1][j] == 0 ) || ( pointsArray[i-1][j]== 0 ) || ( pointsArray[i][j+1]== 0 ) || ( pointsArray[i][j-1]== 0 )){   if((pointsArray[i+1][j] >= 1 )) { pointsArray[i][j] += 0; pointsArray[i+1][j] -= 1;  } if(( pointsArray[i-1][j]>= 1 )) { pointsArray[i][j] += 0; pointsArray[i-1][j] -= 1;  } if(( pointsArray[i][j+1]>= 1 )) { pointsArray[i][j] += 0; pointsArray[i][j+1] -= 1;  } if(( pointsArray[i][j-1]>= 1 )) { pointsArray[i][j] += 0; pointsArray[i][j-1] -= 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">1&", ">0a"}, {"=0|", "=0|", "=0|", "=0b"}, {"p1c", "p1c", "p1c", "p1d"}, {"+0.", "-1."}} */
} private void f177(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] >= 1 && pointsArray[i][j]>= 0 )){   if((pointsArray[i+1][j] >= pointsArray[i][j] ) || ( pointsArray[i-1][j]>= pointsArray[i][j] ) || ( pointsArray[i][j+1]>= pointsArray[i][j] ) || ( pointsArray[i][j-1]>= pointsArray[i][j] )){   if((pointsArray[i+1][j] >= pointsArray[i][j] ) || ( pointsArray[i-1][j]>= pointsArray[i][j] )) { pointsArray[i][j] -= 1; pointsArray[i+1][j]  = 1; pointsArray[i-1][j]  = 1;  } if(( pointsArray[i][j+1]>= pointsArray[i][j] && pointsArray[i][j-1]>= pointsArray[i][j] )) { pointsArray[i][j] -= 1; pointsArray[i][j+1]  = 1; pointsArray[i][j-1]  = 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"p1&", "p0a"}, {"pI|", "pI|", "pI|", "pIb"}, {"pI|", "pIc", "pI&", "pId"}, {"-1.", " 1.", " 1."}} */
} private void f178(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 1 )){   if((pointsArray[i+1][j] >= 2 && pointsArray[i-1][j]>= 2 && pointsArray[i][j+1]>= 2 ) || ( pointsArray[i][j-1]>= 2 )){   if((pointsArray[i+1][j] != pointsArray[i][j] && pointsArray[i-1][j]!= pointsArray[i][j] )) { pointsArray[i][j] += 2; pointsArray[i+1][j] += 1; pointsArray[i-1][j] += 1;  } if(( pointsArray[i][j+1]!= pointsArray[i][j] && pointsArray[i][j-1]!= pointsArray[i][j] )) { pointsArray[i][j] += 2; pointsArray[i][j+1] += 1; pointsArray[i][j-1] += 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">1a"}, {"p2&", "p2&", "p2|", "p2b"}, {"!I&", "!Ic", "!I&", "!Id"}, {"+2.", "+1.", "+1."}} */
} private void f179(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] >= 1 )){   if((pointsArray[i+1][j] == 1 ) || ( pointsArray[i-1][j]== 1 ) || ( pointsArray[i][j+1]== 1 ) || ( pointsArray[i][j-1]== 1 )){   if((pointsArray[i+1][j] < 1 )) { pointsArray[i][j] -= 1; pointsArray[i+1][j]  = 0;  } if(( pointsArray[i-1][j]< 1 )) { pointsArray[i][j] -= 1; pointsArray[i-1][j]  = 0;  } if(( pointsArray[i][j+1]< 1 )) { pointsArray[i][j] -= 1; pointsArray[i][j+1]  = 0;  } if(( pointsArray[i][j-1]< 1 )) { pointsArray[i][j] -= 1; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"p1a"}, {"=1|", "=1|", "=1|", "=1b"}, {"<1c", "<1c", "<1c", "<1d"}, {"-1.", " 0."}} */
} private void f180(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] <= 0 ) || ( pointsArray[i][j]> 3 )){   if((pointsArray[i+1][j] > 1 && pointsArray[i-1][j]> 1 ) || ( pointsArray[i][j+1]> 1 && pointsArray[i][j-1]> 1 )){   if((pointsArray[i+1][j] == pointsArray[i][j] && pointsArray[i-1][j]== pointsArray[i][j] ) || ( pointsArray[i][j+1]== pointsArray[i][j] && pointsArray[i][j-1]== pointsArray[i][j] )) { pointsArray[i][j] += 1; pointsArray[i+1][j] += 2; pointsArray[i-1][j] += 2; pointsArray[i][j+1] += 2; pointsArray[i][j-1] += 2;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"o0|", ">3a"}, {">1&", ">1|", ">1&", ">1b"}, {"=I&", "=I|", "=I&", "=Id"}, {"+1.", "+2.", "+2.", "+2.", "+2."}} */
} private void f181(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] != 1 && pointsArray[i][j]> 0 )){   if((pointsArray[i+1][j] != 0 && pointsArray[i-1][j]!= 0 && pointsArray[i][j+1]!= 0 && pointsArray[i][j-1]!= 0 )){   if((pointsArray[i+1][j] != 0 && pointsArray[i-1][j]!= 0 && pointsArray[i][j+1]!= 0 && pointsArray[i][j-1]!= 0 )) { pointsArray[i][j]  = 1; pointsArray[i+1][j] += 1; pointsArray[i-1][j] += 1; pointsArray[i][j+1] += 1; pointsArray[i][j-1] += 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"!1&", ">0a"}, {"!0&", "!0&", "!0&", "!0b"}, {"!0&", "!0&", "!0&", "!0d"}, {" 1.", "+1.", "+1.", "+1.", "+1."}} */
} private void f182(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] == 1 && pointsArray[i][j]!= 0 )){   if((pointsArray[i+1][j] >= 0 ) || ( pointsArray[i-1][j]>= 0 ) || ( pointsArray[i][j+1]>= 0 ) || ( pointsArray[i][j-1]>= 0 )){   if((pointsArray[i+1][j] >= 0 ) || ( pointsArray[i-1][j]>= 0 )) { pointsArray[i][j]  = 0; pointsArray[i+1][j]  = 1; pointsArray[i-1][j]  = 1;  } if(( pointsArray[i][j+1]>= 0 ) || ( pointsArray[i][j-1]>= 0 )) { pointsArray[i][j]  = 0; pointsArray[i][j+1]  = 1; pointsArray[i][j-1]  = 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"=1&", "!0a"}, {"p0|", "p0|", "p0|", "p0b"}, {"p0|", "p0c", "p0|", "p0d"}, {" 0.", " 1.", " 1."}} */
} private void f183(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 3 )){   if((pointsArray[i+1][j] > 2 && pointsArray[i-1][j]> 2 ) || ( pointsArray[i][j+1]> 2 ) || ( pointsArray[i][j-1]> 2 )){   if((pointsArray[i+1][j] < 2 )) { pointsArray[i][j] -= 3; pointsArray[i+1][j]  = 0;  } if(( pointsArray[i-1][j]< 2 )) { pointsArray[i][j] -= 3; pointsArray[i-1][j]  = 0;  } if(( pointsArray[i][j+1]< 2 )) { pointsArray[i][j] -= 3; pointsArray[i][j+1]  = 0;  } if(( pointsArray[i][j-1]< 2 )) { pointsArray[i][j] -= 3; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">3a"}, {">2&", ">2|", ">2|", ">2b"}, {"<2c", "<2c", "<2c", "<2d"}, {"-3.", " 0."}} */
} private void f184(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] == 0 )){   if((pointsArray[i+1][j] != pointsArray[i][j] ) || ( pointsArray[i-1][j]!= pointsArray[i][j] ) || ( pointsArray[i][j+1]!= pointsArray[i][j] && pointsArray[i][j-1]!= pointsArray[i][j] )){   if((pointsArray[i+1][j] != 1 ) || ( pointsArray[i-1][j]!= 1 && pointsArray[i][j+1]!= 1 ) || ( pointsArray[i][j-1]!= 1 )) { pointsArray[i][j] -= 0; pointsArray[i+1][j] -= 1; pointsArray[i-1][j] -= 1; pointsArray[i][j+1] -= 1; pointsArray[i][j-1] -= 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"=0a"}, {"!I|", "!I|", "!I&", "!Ib"}, {"!1|", "!1&", "!1|", "!1d"}, {"-0.", "-1.", "-1.", "-1.", "-1."}} */
} private void f185(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] <= 3 )){   if((pointsArray[i+1][j] > 2 && pointsArray[i-1][j]> 2 ) || ( pointsArray[i][j+1]> 2 && pointsArray[i][j-1]> 2 )){   if((pointsArray[i+1][j] != pointsArray[i][j] && pointsArray[i-1][j]!= pointsArray[i][j] )) { pointsArray[i][j] -= 0; pointsArray[i+1][j] -= 0; pointsArray[i-1][j] -= 0;  } if(( pointsArray[i][j+1]!= pointsArray[i][j] && pointsArray[i][j-1]!= pointsArray[i][j] )) { pointsArray[i][j] -= 0; pointsArray[i][j+1] -= 0; pointsArray[i][j-1] -= 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"o3a"}, {">2&", ">2|", ">2&", ">2b"}, {"!I&", "!Ic", "!I&", "!Id"}, {"-0.", "-0.", "-0."}} */
} private void f186(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 0 && pointsArray[i][j]> 1 )){   if((pointsArray[i+1][j] < 1 && pointsArray[i-1][j]< 1 && pointsArray[i][j+1]< 1 && pointsArray[i][j-1]< 1 )){   if((pointsArray[i+1][j] == 1 && pointsArray[i-1][j]== 1 && pointsArray[i][j+1]== 1 && pointsArray[i][j-1]== 1 )) { pointsArray[i][j] -= 1; pointsArray[i+1][j] += 0; pointsArray[i-1][j] += 0; pointsArray[i][j+1] += 0; pointsArray[i][j-1] += 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">0&", ">1a"}, {"<1&", "<1&", "<1&", "<1b"}, {"=1&", "=1&", "=1&", "=1d"}, {"-1.", "+0.", "+0.", "+0.", "+0."}} */
} private void f187(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 1 ) || ( pointsArray[i][j]> 0 )){   if((pointsArray[i+1][j] <= 0 ) || ( pointsArray[i-1][j]<= 0 ) || ( pointsArray[i][j+1]<= 0 && pointsArray[i][j-1]<= 0 )){   if((pointsArray[i+1][j] > 0 ) || ( pointsArray[i-1][j]> 0 )) { pointsArray[i][j] -= 0; pointsArray[i+1][j] += 0; pointsArray[i-1][j] += 0;  } if(( pointsArray[i][j+1]> 0 && pointsArray[i][j-1]> 0 )) { pointsArray[i][j] -= 0; pointsArray[i][j+1] += 0; pointsArray[i][j-1] += 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<1|", ">0a"}, {"o0|", "o0|", "o0&", "o0b"}, {">0|", ">0c", ">0&", ">0d"}, {"-0.", "+0.", "+0."}} */
} private void f188(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] == 3 )){   if((pointsArray[i+1][j] == 3 ) || ( pointsArray[i-1][j]== 3 ) || ( pointsArray[i][j+1]== 3 && pointsArray[i][j-1]== 3 )){   if((pointsArray[i+1][j] < 2 && pointsArray[i-1][j]< 2 && pointsArray[i][j+1]< 2 ) || ( pointsArray[i][j-1]< 2 )) { pointsArray[i][j] -= 0; pointsArray[i+1][j]  = 0; pointsArray[i-1][j]  = 0; pointsArray[i][j+1]  = 0; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"=3a"}, {"=3|", "=3|", "=3&", "=3b"}, {"<2&", "<2&", "<2|", "<2d"}, {"-0.", " 0.", " 0.", " 0.", " 0."}} */
} private void f189(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] <= 1 ) || ( pointsArray[i][j]<= 1 )){   if((pointsArray[i+1][j] == pointsArray[i][j] ) || ( pointsArray[i-1][j]== pointsArray[i][j] ) || ( pointsArray[i][j+1]== pointsArray[i][j] ) || ( pointsArray[i][j-1]== pointsArray[i][j] )){   if((pointsArray[i+1][j] < pointsArray[i][j] && pointsArray[i-1][j]< pointsArray[i][j] && pointsArray[i][j+1]< pointsArray[i][j] && pointsArray[i][j-1]< pointsArray[i][j] )) { pointsArray[i][j] -= 0; pointsArray[i+1][j] += 0; pointsArray[i-1][j] += 0; pointsArray[i][j+1] += 0; pointsArray[i][j-1] += 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"o1|", "o1a"}, {"=I|", "=I|", "=I|", "=Ib"}, {"<I&", "<I&", "<I&", "<Id"}, {"-0.", "+0.", "+0.", "+0.", "+0."}} */
} private void f190(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] != 0 )){   if((pointsArray[i+1][j] > 1 ) || ( pointsArray[i-1][j]> 1 && pointsArray[i][j+1]> 1 && pointsArray[i][j-1]> 1 )){   if((pointsArray[i+1][j] > pointsArray[i][j] ) || ( pointsArray[i-1][j]> pointsArray[i][j] )) { pointsArray[i][j]  = 3; pointsArray[i+1][j]  = 3; pointsArray[i-1][j]  = 3;  } if(( pointsArray[i][j+1]> pointsArray[i][j] && pointsArray[i][j-1]> pointsArray[i][j] )) { pointsArray[i][j]  = 3; pointsArray[i][j+1]  = 3; pointsArray[i][j-1]  = 3;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"!0a"}, {">1|", ">1&", ">1&", ">1b"}, {">I|", ">Ic", ">I&", ">Id"}, {" 3.", " 3.", " 3."}} */
} private void f191(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 0 )){   if((pointsArray[i+1][j] > 1 ) || ( pointsArray[i-1][j]> 1 ) || ( pointsArray[i][j+1]> 1 && pointsArray[i][j-1]> 1 )){   if((pointsArray[i+1][j] < pointsArray[i][j] )) { pointsArray[i][j] += 1; pointsArray[i+1][j]  = 1;  } if(( pointsArray[i-1][j]< pointsArray[i][j] )) { pointsArray[i][j] += 1; pointsArray[i-1][j]  = 1;  } if(( pointsArray[i][j+1]< pointsArray[i][j] )) { pointsArray[i][j] += 1; pointsArray[i][j+1]  = 1;  } if(( pointsArray[i][j-1]< pointsArray[i][j] )) { pointsArray[i][j] += 1; pointsArray[i][j-1]  = 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">0a"}, {">1|", ">1|", ">1&", ">1b"}, {"<Ic", "<Ic", "<Ic", "<Id"}, {"+1.", " 1."}} */
} private void f192(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] <= 1 && pointsArray[i][j]<= 0 )){   if((pointsArray[i+1][j] == pointsArray[i][j] && pointsArray[i-1][j]== pointsArray[i][j] ) || ( pointsArray[i][j+1]== pointsArray[i][j] && pointsArray[i][j-1]== pointsArray[i][j] )){   if((pointsArray[i+1][j] <= 0 )) { pointsArray[i][j] -= 0; pointsArray[i+1][j]  = 0;  } if(( pointsArray[i-1][j]<= 0 )) { pointsArray[i][j] -= 0; pointsArray[i-1][j]  = 0;  } if(( pointsArray[i][j+1]<= 0 )) { pointsArray[i][j] -= 0; pointsArray[i][j+1]  = 0;  } if(( pointsArray[i][j-1]<= 0 )) { pointsArray[i][j] -= 0; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"o1&", "o0a"}, {"=I&", "=I|", "=I&", "=Ib"}, {"o0c", "o0c", "o0c", "o0d"}, {"-0.", " 0."}} */
} private void f193(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 1 ) || ( pointsArray[i][j]> 3 )){   if((pointsArray[i+1][j] < 1 ) || ( pointsArray[i-1][j]< 1 ) || ( pointsArray[i][j+1]< 1 ) || ( pointsArray[i][j-1]< 1 )){   if((pointsArray[i+1][j] < 1 && pointsArray[i-1][j]< 1 )) { pointsArray[i][j] += 3; pointsArray[i+1][j]  = 2; pointsArray[i-1][j]  = 2;  } if(( pointsArray[i][j+1]< 1 ) || ( pointsArray[i][j-1]< 1 )) { pointsArray[i][j] += 3; pointsArray[i][j+1]  = 2; pointsArray[i][j-1]  = 2;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">1|", ">3a"}, {"<1|", "<1|", "<1|", "<1b"}, {"<1&", "<1c", "<1|", "<1d"}, {"+3.", " 2.", " 2."}} */
} private void f194(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] != 0 )){   if((pointsArray[i+1][j] == 1 && pointsArray[i-1][j]== 1 && pointsArray[i][j+1]== 1 && pointsArray[i][j-1]== 1 )){   if((pointsArray[i+1][j] > 0 )) { pointsArray[i][j] += 1; pointsArray[i+1][j] += 0;  } if(( pointsArray[i-1][j]> 0 )) { pointsArray[i][j] += 1; pointsArray[i-1][j] += 0;  } if(( pointsArray[i][j+1]> 0 )) { pointsArray[i][j] += 1; pointsArray[i][j+1] += 0;  } if(( pointsArray[i][j-1]> 0 )) { pointsArray[i][j] += 1; pointsArray[i][j-1] += 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"!0a"}, {"=1&", "=1&", "=1&", "=1b"}, {">0c", ">0c", ">0c", ">0d"}, {"+1.", "+0."}} */
} private void f195(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] >= 3 ) || ( pointsArray[i][j]< 3 )){   if((pointsArray[i+1][j] >= 3 ) || ( pointsArray[i-1][j]>= 3 && pointsArray[i][j+1]>= 3 && pointsArray[i][j-1]>= 3 )){   if((pointsArray[i+1][j] == 2 )) { pointsArray[i][j]  = 3; pointsArray[i+1][j] += 1;  } if(( pointsArray[i-1][j]== 2 )) { pointsArray[i][j]  = 3; pointsArray[i-1][j] += 1;  } if(( pointsArray[i][j+1]== 2 )) { pointsArray[i][j]  = 3; pointsArray[i][j+1] += 1;  } if(( pointsArray[i][j-1]== 2 )) { pointsArray[i][j]  = 3; pointsArray[i][j-1] += 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"p3|", "<3a"}, {"p3|", "p3&", "p3&", "p3b"}, {"=2c", "=2c", "=2c", "=2d"}, {" 3.", "+1."}} */
} private void f196(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 1 )){   if((pointsArray[i+1][j] == pointsArray[i][j] && pointsArray[i-1][j]== pointsArray[i][j] ) || ( pointsArray[i][j+1]== pointsArray[i][j] ) || ( pointsArray[i][j-1]== pointsArray[i][j] )){   if((pointsArray[i+1][j] == 0 ) || ( pointsArray[i-1][j]== 0 ) || ( pointsArray[i][j+1]== 0 ) || ( pointsArray[i][j-1]== 0 )) { pointsArray[i][j] += 1; pointsArray[i+1][j]  = 1; pointsArray[i-1][j]  = 1; pointsArray[i][j+1]  = 1; pointsArray[i][j-1]  = 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">1a"}, {"=I&", "=I|", "=I|", "=Ib"}, {"=0|", "=0|", "=0|", "=0d"}, {"+1.", " 1.", " 1.", " 1.", " 1."}} */
} private void f197(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] >= 1 ) || ( pointsArray[i][j]== 1 )){   if((pointsArray[i+1][j] > pointsArray[i][j] ) || ( pointsArray[i-1][j]> pointsArray[i][j] && pointsArray[i][j+1]> pointsArray[i][j] && pointsArray[i][j-1]> pointsArray[i][j] )){   if((pointsArray[i+1][j] >= 1 && pointsArray[i-1][j]>= 1 && pointsArray[i][j+1]>= 1 ) || ( pointsArray[i][j-1]>= 1 )) { pointsArray[i][j]  = 1; pointsArray[i+1][j]  = 0; pointsArray[i-1][j]  = 0; pointsArray[i][j+1]  = 0; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"p1|", "=1a"}, {">I|", ">I&", ">I&", ">Ib"}, {"p1&", "p1&", "p1|", "p1d"}, {" 1.", " 0.", " 0.", " 0.", " 0."}} */
} private void f198(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] == 1 )){   if((pointsArray[i+1][j] == pointsArray[i][j] ) || ( pointsArray[i-1][j]== pointsArray[i][j] && pointsArray[i][j+1]== pointsArray[i][j] && pointsArray[i][j-1]== pointsArray[i][j] )){   if((pointsArray[i+1][j] <= 0 )) { pointsArray[i][j] += 1; pointsArray[i+1][j] += 0;  } if(( pointsArray[i-1][j]<= 0 )) { pointsArray[i][j] += 1; pointsArray[i-1][j] += 0;  } if(( pointsArray[i][j+1]<= 0 )) { pointsArray[i][j] += 1; pointsArray[i][j+1] += 0;  } if(( pointsArray[i][j-1]<= 0 )) { pointsArray[i][j] += 1; pointsArray[i][j-1] += 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"=1a"}, {"=I|", "=I&", "=I&", "=Ib"}, {"o0c", "o0c", "o0c", "o0d"}, {"+1.", "+0."}} */
} private void f199(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] != 0 )){   if((pointsArray[i+1][j] != 0 && pointsArray[i-1][j]!= 0 ) || ( pointsArray[i][j+1]!= 0 && pointsArray[i][j-1]!= 0 )){   if((pointsArray[i+1][j] > pointsArray[i][j] )) { pointsArray[i][j] -= 1; pointsArray[i+1][j] -= 1;  } if(( pointsArray[i-1][j]> pointsArray[i][j] )) { pointsArray[i][j] -= 1; pointsArray[i-1][j] -= 1;  } if(( pointsArray[i][j+1]> pointsArray[i][j] )) { pointsArray[i][j] -= 1; pointsArray[i][j+1] -= 1;  } if(( pointsArray[i][j-1]> pointsArray[i][j] )) { pointsArray[i][j] -= 1; pointsArray[i][j-1] -= 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"!0a"}, {"!0&", "!0|", "!0&", "!0b"}, {">Ic", ">Ic", ">Ic", ">Id"}, {"-1.", "-1."}} */
} private void f200(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] != 1 )){   if((pointsArray[i+1][j] == 0 && pointsArray[i-1][j]== 0 && pointsArray[i][j+1]== 0 ) || ( pointsArray[i][j-1]== 0 )){   if((pointsArray[i+1][j] == 3 && pointsArray[i-1][j]== 3 ) || ( pointsArray[i][j+1]== 3 ) || ( pointsArray[i][j-1]== 3 )) { pointsArray[i][j]  = 3; pointsArray[i+1][j]  = 1; pointsArray[i-1][j]  = 1; pointsArray[i][j+1]  = 1; pointsArray[i][j-1]  = 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"!1a"}, {"=0&", "=0&", "=0|", "=0b"}, {"=3&", "=3|", "=3|", "=3d"}, {" 3.", " 1.", " 1.", " 1.", " 1."}} */
} private void f201(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 1 )){   if((pointsArray[i+1][j] <= 0 && pointsArray[i-1][j]<= 0 ) || ( pointsArray[i][j+1]<= 0 ) || ( pointsArray[i][j-1]<= 0 )){   if((pointsArray[i+1][j] < 1 ) || ( pointsArray[i-1][j]< 1 ) || ( pointsArray[i][j+1]< 1 ) || ( pointsArray[i][j-1]< 1 )) { pointsArray[i][j]  = 0; pointsArray[i+1][j]  = 0; pointsArray[i-1][j]  = 0; pointsArray[i][j+1]  = 0; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<1a"}, {"o0&", "o0|", "o0|", "o0b"}, {"<1|", "<1|", "<1|", "<1d"}, {" 0.", " 0.", " 0.", " 0.", " 0."}} */
} private void f202(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] != 0 && pointsArray[i][j]>= 1 )){   if((pointsArray[i+1][j] < 1 ) || ( pointsArray[i-1][j]< 1 && pointsArray[i][j+1]< 1 ) || ( pointsArray[i][j-1]< 1 )){   if((pointsArray[i+1][j] > 0 ) || ( pointsArray[i-1][j]> 0 ) || ( pointsArray[i][j+1]> 0 ) || ( pointsArray[i][j-1]> 0 )) { pointsArray[i][j] -= 1; pointsArray[i+1][j]  = 1; pointsArray[i-1][j]  = 1; pointsArray[i][j+1]  = 1; pointsArray[i][j-1]  = 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"!0&", "p1a"}, {"<1|", "<1&", "<1|", "<1b"}, {">0|", ">0|", ">0|", ">0d"}, {"-1.", " 1.", " 1.", " 1.", " 1."}} */
} private void f203(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] == 1 )){   if((pointsArray[i+1][j] == pointsArray[i][j] && pointsArray[i-1][j]== pointsArray[i][j] ) || ( pointsArray[i][j+1]== pointsArray[i][j] && pointsArray[i][j-1]== pointsArray[i][j] )){   if((pointsArray[i+1][j] <= 2 )) { pointsArray[i][j]  = 3; pointsArray[i+1][j]  = 1;  } if(( pointsArray[i-1][j]<= 2 )) { pointsArray[i][j]  = 3; pointsArray[i-1][j]  = 1;  } if(( pointsArray[i][j+1]<= 2 )) { pointsArray[i][j]  = 3; pointsArray[i][j+1]  = 1;  } if(( pointsArray[i][j-1]<= 2 )) { pointsArray[i][j]  = 3; pointsArray[i][j-1]  = 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"=1a"}, {"=I&", "=I|", "=I&", "=Ib"}, {"o2c", "o2c", "o2c", "o2d"}, {" 3.", " 1."}} */
} private void f204(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 1 )){   if((pointsArray[i+1][j] > 1 ) || ( pointsArray[i-1][j]> 1 && pointsArray[i][j+1]> 1 ) || ( pointsArray[i][j-1]> 1 )){   if((pointsArray[i+1][j] != 0 && pointsArray[i-1][j]!= 0 )) { pointsArray[i][j]  = 1; pointsArray[i+1][j]  = 0; pointsArray[i-1][j]  = 0;  } if(( pointsArray[i][j+1]!= 0 ) || ( pointsArray[i][j-1]!= 0 )) { pointsArray[i][j]  = 1; pointsArray[i][j+1]  = 0; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">1a"}, {">1|", ">1&", ">1|", ">1b"}, {"!0&", "!0c", "!0|", "!0d"}, {" 1.", " 0.", " 0."}} */
} private void f205(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 1 ) || ( pointsArray[i][j]> 2 )){   if((pointsArray[i+1][j] >= 3 && pointsArray[i-1][j]>= 3 ) || ( pointsArray[i][j+1]>= 3 ) || ( pointsArray[i][j-1]>= 3 )){   if((pointsArray[i+1][j] == pointsArray[i][j] )) { pointsArray[i][j] -= 2; pointsArray[i+1][j]  = 3;  } if(( pointsArray[i-1][j]== pointsArray[i][j] )) { pointsArray[i][j] -= 2; pointsArray[i-1][j]  = 3;  } if(( pointsArray[i][j+1]== pointsArray[i][j] )) { pointsArray[i][j] -= 2; pointsArray[i][j+1]  = 3;  } if(( pointsArray[i][j-1]== pointsArray[i][j] )) { pointsArray[i][j] -= 2; pointsArray[i][j-1]  = 3;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<1|", ">2a"}, {"p3&", "p3|", "p3|", "p3b"}, {"=Ic", "=Ic", "=Ic", "=Id"}, {"-2.", " 3."}} */
} private void f206(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] >= 0 )){   if((pointsArray[i+1][j] < pointsArray[i][j] && pointsArray[i-1][j]< pointsArray[i][j] ) || ( pointsArray[i][j+1]< pointsArray[i][j] && pointsArray[i][j-1]< pointsArray[i][j] )){   if((pointsArray[i+1][j] <= 1 ) || ( pointsArray[i-1][j]<= 1 ) || ( pointsArray[i][j+1]<= 1 && pointsArray[i][j-1]<= 1 )) { pointsArray[i][j] -= 0; pointsArray[i+1][j] += 0; pointsArray[i-1][j] += 0; pointsArray[i][j+1] += 0; pointsArray[i][j-1] += 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"p0a"}, {"<I&", "<I|", "<I&", "<Ib"}, {"o1|", "o1|", "o1&", "o1d"}, {"-0.", "+0.", "+0.", "+0.", "+0."}} */
} private void f207(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] >= 1 )){   if((pointsArray[i+1][j] != 1 && pointsArray[i-1][j]!= 1 && pointsArray[i][j+1]!= 1 ) || ( pointsArray[i][j-1]!= 1 )){   if((pointsArray[i+1][j] == 1 && pointsArray[i-1][j]== 1 )) { pointsArray[i][j]  = 1; pointsArray[i+1][j] -= 1; pointsArray[i-1][j] -= 1;  } if(( pointsArray[i][j+1]== 1 ) || ( pointsArray[i][j-1]== 1 )) { pointsArray[i][j]  = 1; pointsArray[i][j+1] -= 1; pointsArray[i][j-1] -= 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"p1a"}, {"!1&", "!1&", "!1|", "!1b"}, {"=1&", "=1c", "=1|", "=1d"}, {" 1.", "-1.", "-1."}} */
} private void f208(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 2 ) || ( pointsArray[i][j]<= 2 )){   if((pointsArray[i+1][j] == 3 ) || ( pointsArray[i-1][j]== 3 ) || ( pointsArray[i][j+1]== 3 ) || ( pointsArray[i][j-1]== 3 )){   if((pointsArray[i+1][j] <= pointsArray[i][j] ) || ( pointsArray[i-1][j]<= pointsArray[i][j] )) { pointsArray[i][j] += 0; pointsArray[i+1][j]  = 2; pointsArray[i-1][j]  = 2;  } if(( pointsArray[i][j+1]<= pointsArray[i][j] ) || ( pointsArray[i][j-1]<= pointsArray[i][j] )) { pointsArray[i][j] += 0; pointsArray[i][j+1]  = 2; pointsArray[i][j-1]  = 2;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<2|", "o2a"}, {"=3|", "=3|", "=3|", "=3b"}, {"oI|", "oIc", "oI|", "oId"}, {"+0.", " 2.", " 2."}} */
} private void f209(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] <= 1 ) || ( pointsArray[i][j]< 1 )){   if((pointsArray[i+1][j] < 0 ) || ( pointsArray[i-1][j]< 0 ) || ( pointsArray[i][j+1]< 0 && pointsArray[i][j-1]< 0 )){   if((pointsArray[i+1][j] > pointsArray[i][j] ) || ( pointsArray[i-1][j]> pointsArray[i][j] )) { pointsArray[i][j] -= 1; pointsArray[i+1][j]  = 0; pointsArray[i-1][j]  = 0;  } if(( pointsArray[i][j+1]> pointsArray[i][j] ) || ( pointsArray[i][j-1]> pointsArray[i][j] )) { pointsArray[i][j] -= 1; pointsArray[i][j+1]  = 0; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"o1|", "<1a"}, {"<0|", "<0|", "<0&", "<0b"}, {">I|", ">Ic", ">I|", ">Id"}, {"-1.", " 0.", " 0."}} */
} private void f210(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 3 ) || ( pointsArray[i][j]>= 3 )){   if((pointsArray[i+1][j] >= 0 && pointsArray[i-1][j]>= 0 && pointsArray[i][j+1]>= 0 && pointsArray[i][j-1]>= 0 )){   if((pointsArray[i+1][j] == 3 )) { pointsArray[i][j] -= 1; pointsArray[i+1][j] += 2;  } if(( pointsArray[i-1][j]== 3 )) { pointsArray[i][j] -= 1; pointsArray[i-1][j] += 2;  } if(( pointsArray[i][j+1]== 3 )) { pointsArray[i][j] -= 1; pointsArray[i][j+1] += 2;  } if(( pointsArray[i][j-1]== 3 )) { pointsArray[i][j] -= 1; pointsArray[i][j-1] += 2;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">3|", "p3a"}, {"p0&", "p0&", "p0&", "p0b"}, {"=3c", "=3c", "=3c", "=3d"}, {"-1.", "+2."}} */
} private void f211(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] >= 1 )){   if((pointsArray[i+1][j] == pointsArray[i][j] && pointsArray[i-1][j]== pointsArray[i][j] ) || ( pointsArray[i][j+1]== pointsArray[i][j] ) || ( pointsArray[i][j-1]== pointsArray[i][j] )){   if((pointsArray[i+1][j] > pointsArray[i][j] ) || ( pointsArray[i-1][j]> pointsArray[i][j] )) { pointsArray[i][j] -= 1; pointsArray[i+1][j]  = 1; pointsArray[i-1][j]  = 1;  } if(( pointsArray[i][j+1]> pointsArray[i][j] && pointsArray[i][j-1]> pointsArray[i][j] )) { pointsArray[i][j] -= 1; pointsArray[i][j+1]  = 1; pointsArray[i][j-1]  = 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"p1a"}, {"=I&", "=I|", "=I|", "=Ib"}, {">I|", ">Ic", ">I&", ">Id"}, {"-1.", " 1.", " 1."}} */
} private void f212(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 0 && pointsArray[i][j]< 0 )){   if((pointsArray[i+1][j] <= 0 ) || ( pointsArray[i-1][j]<= 0 && pointsArray[i][j+1]<= 0 ) || ( pointsArray[i][j-1]<= 0 )){   if((pointsArray[i+1][j] == 0 )) { pointsArray[i][j]  = 1; pointsArray[i+1][j]  = 0;  } if(( pointsArray[i-1][j]== 0 )) { pointsArray[i][j]  = 1; pointsArray[i-1][j]  = 0;  } if(( pointsArray[i][j+1]== 0 )) { pointsArray[i][j]  = 1; pointsArray[i][j+1]  = 0;  } if(( pointsArray[i][j-1]== 0 )) { pointsArray[i][j]  = 1; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<0&", "<0a"}, {"o0|", "o0&", "o0|", "o0b"}, {"=0c", "=0c", "=0c", "=0d"}, {" 1.", " 0."}} */
} private void f213(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] == 3 )){   if((pointsArray[i+1][j] >= pointsArray[i][j] ) || ( pointsArray[i-1][j]>= pointsArray[i][j] && pointsArray[i][j+1]>= pointsArray[i][j] && pointsArray[i][j-1]>= pointsArray[i][j] )){   if((pointsArray[i+1][j] != pointsArray[i][j] )) { pointsArray[i][j]  = 2; pointsArray[i+1][j]  = 0;  } if(( pointsArray[i-1][j]!= pointsArray[i][j] )) { pointsArray[i][j]  = 2; pointsArray[i-1][j]  = 0;  } if(( pointsArray[i][j+1]!= pointsArray[i][j] )) { pointsArray[i][j]  = 2; pointsArray[i][j+1]  = 0;  } if(( pointsArray[i][j-1]!= pointsArray[i][j] )) { pointsArray[i][j]  = 2; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"=3a"}, {"pI|", "pI&", "pI&", "pIb"}, {"!Ic", "!Ic", "!Ic", "!Id"}, {" 2.", " 0."}} */
} private void f214(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] >= 1 )){   if((pointsArray[i+1][j] >= 0 ) || ( pointsArray[i-1][j]>= 0 && pointsArray[i][j+1]>= 0 && pointsArray[i][j-1]>= 0 )){   if((pointsArray[i+1][j] > 1 && pointsArray[i-1][j]> 1 ) || ( pointsArray[i][j+1]> 1 && pointsArray[i][j-1]> 1 )) { pointsArray[i][j] -= 1; pointsArray[i+1][j]  = 0; pointsArray[i-1][j]  = 0; pointsArray[i][j+1]  = 0; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"p1a"}, {"p0|", "p0&", "p0&", "p0b"}, {">1&", ">1|", ">1&", ">1d"}, {"-1.", " 0.", " 0.", " 0.", " 0."}} */
} private void f215(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] == 3 )){   if((pointsArray[i+1][j] > 0 ) || ( pointsArray[i-1][j]> 0 && pointsArray[i][j+1]> 0 && pointsArray[i][j-1]> 0 )){   if((pointsArray[i+1][j] <= 0 && pointsArray[i-1][j]<= 0 )) { pointsArray[i][j] += 3; pointsArray[i+1][j] -= 3; pointsArray[i-1][j] -= 3;  } if(( pointsArray[i][j+1]<= 0 ) || ( pointsArray[i][j-1]<= 0 )) { pointsArray[i][j] += 3; pointsArray[i][j+1] -= 3; pointsArray[i][j-1] -= 3;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"=3a"}, {">0|", ">0&", ">0&", ">0b"}, {"o0&", "o0c", "o0|", "o0d"}, {"+3.", "-3.", "-3."}} */
} private void f216(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] <= 0 )){   if((pointsArray[i+1][j] <= pointsArray[i][j] && pointsArray[i-1][j]<= pointsArray[i][j] ) || ( pointsArray[i][j+1]<= pointsArray[i][j] ) || ( pointsArray[i][j-1]<= pointsArray[i][j] )){   if((pointsArray[i+1][j] < pointsArray[i][j] && pointsArray[i-1][j]< pointsArray[i][j] )) { pointsArray[i][j]  = 0; pointsArray[i+1][j] += 0; pointsArray[i-1][j] += 0;  } if(( pointsArray[i][j+1]< pointsArray[i][j] && pointsArray[i][j-1]< pointsArray[i][j] )) { pointsArray[i][j]  = 0; pointsArray[i][j+1] += 0; pointsArray[i][j-1] += 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"o0a"}, {"oI&", "oI|", "oI|", "oIb"}, {"<I&", "<Ic", "<I&", "<Id"}, {" 0.", "+0.", "+0."}} */
} private void f217(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] != 0 )){   if((pointsArray[i+1][j] > 0 && pointsArray[i-1][j]> 0 ) || ( pointsArray[i][j+1]> 0 ) || ( pointsArray[i][j-1]> 0 )){   if((pointsArray[i+1][j] < 1 && pointsArray[i-1][j]< 1 )) { pointsArray[i][j] -= 1; pointsArray[i+1][j] += 0; pointsArray[i-1][j] += 0;  } if(( pointsArray[i][j+1]< 1 && pointsArray[i][j-1]< 1 )) { pointsArray[i][j] -= 1; pointsArray[i][j+1] += 0; pointsArray[i][j-1] += 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"!0a"}, {">0&", ">0|", ">0|", ">0b"}, {"<1&", "<1c", "<1&", "<1d"}, {"-1.", "+0.", "+0."}} */
} private void f218(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 0 ) || ( pointsArray[i][j]== 0 )){   if((pointsArray[i+1][j] >= 3 && pointsArray[i-1][j]>= 3 && pointsArray[i][j+1]>= 3 ) || ( pointsArray[i][j-1]>= 3 )){   if((pointsArray[i+1][j] <= 1 ) || ( pointsArray[i-1][j]<= 1 && pointsArray[i][j+1]<= 1 ) || ( pointsArray[i][j-1]<= 1 )) { pointsArray[i][j] += 0; pointsArray[i+1][j]  = 2; pointsArray[i-1][j]  = 2; pointsArray[i][j+1]  = 2; pointsArray[i][j-1]  = 2;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">0|", "=0a"}, {"p3&", "p3&", "p3|", "p3b"}, {"o1|", "o1&", "o1|", "o1d"}, {"+0.", " 2.", " 2.", " 2.", " 2."}} */
} private void f219(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] == 0 )){   if((pointsArray[i+1][j] <= 0 ) || ( pointsArray[i-1][j]<= 0 ) || ( pointsArray[i][j+1]<= 0 ) || ( pointsArray[i][j-1]<= 0 )){   if((pointsArray[i+1][j] > 1 && pointsArray[i-1][j]> 1 && pointsArray[i][j+1]> 1 && pointsArray[i][j-1]> 1 )) { pointsArray[i][j] += 0; pointsArray[i+1][j]  = 0; pointsArray[i-1][j]  = 0; pointsArray[i][j+1]  = 0; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"=0a"}, {"o0|", "o0|", "o0|", "o0b"}, {">1&", ">1&", ">1&", ">1d"}, {"+0.", " 0.", " 0.", " 0.", " 0."}} */
} private void f220(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] != 1 ) || ( pointsArray[i][j]<= 0 )){   if((pointsArray[i+1][j] > pointsArray[i][j] && pointsArray[i-1][j]> pointsArray[i][j] ) || ( pointsArray[i][j+1]> pointsArray[i][j] ) || ( pointsArray[i][j-1]> pointsArray[i][j] )){   if((pointsArray[i+1][j] == 1 ) || ( pointsArray[i-1][j]== 1 ) || ( pointsArray[i][j+1]== 1 && pointsArray[i][j-1]== 1 )) { pointsArray[i][j] += 1; pointsArray[i+1][j] += 1; pointsArray[i-1][j] += 1; pointsArray[i][j+1] += 1; pointsArray[i][j-1] += 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"!1|", "o0a"}, {">I&", ">I|", ">I|", ">Ib"}, {"=1|", "=1|", "=1&", "=1d"}, {"+1.", "+1.", "+1.", "+1.", "+1."}} */
} private void f221(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 1 )){   if((pointsArray[i+1][j] > pointsArray[i][j] && pointsArray[i-1][j]> pointsArray[i][j] ) || ( pointsArray[i][j+1]> pointsArray[i][j] && pointsArray[i][j-1]> pointsArray[i][j] )){   if((pointsArray[i+1][j] != 0 )) { pointsArray[i][j] += 0; pointsArray[i+1][j]  = 1;  } if(( pointsArray[i-1][j]!= 0 )) { pointsArray[i][j] += 0; pointsArray[i-1][j]  = 1;  } if(( pointsArray[i][j+1]!= 0 )) { pointsArray[i][j] += 0; pointsArray[i][j+1]  = 1;  } if(( pointsArray[i][j-1]!= 0 )) { pointsArray[i][j] += 0; pointsArray[i][j-1]  = 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">1a"}, {">I&", ">I|", ">I&", ">Ib"}, {"!0c", "!0c", "!0c", "!0d"}, {"+0.", " 1."}} */
} private void f222(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 1 )){   if((pointsArray[i+1][j] != 1 && pointsArray[i-1][j]!= 1 && pointsArray[i][j+1]!= 1 && pointsArray[i][j-1]!= 1 )){   if((pointsArray[i+1][j] == 1 )) { pointsArray[i][j]  = 1; pointsArray[i+1][j]  = 1;  } if(( pointsArray[i-1][j]== 1 )) { pointsArray[i][j]  = 1; pointsArray[i-1][j]  = 1;  } if(( pointsArray[i][j+1]== 1 )) { pointsArray[i][j]  = 1; pointsArray[i][j+1]  = 1;  } if(( pointsArray[i][j-1]== 1 )) { pointsArray[i][j]  = 1; pointsArray[i][j-1]  = 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">1a"}, {"!1&", "!1&", "!1&", "!1b"}, {"=1c", "=1c", "=1c", "=1d"}, {" 1.", " 1."}} */
} private void f223(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] <= 1 )){   if((pointsArray[i+1][j] < pointsArray[i][j] && pointsArray[i-1][j]< pointsArray[i][j] ) || ( pointsArray[i][j+1]< pointsArray[i][j] && pointsArray[i][j-1]< pointsArray[i][j] )){   if((pointsArray[i+1][j] >= 3 )) { pointsArray[i][j]  = 2; pointsArray[i+1][j]  = 2;  } if(( pointsArray[i-1][j]>= 3 )) { pointsArray[i][j]  = 2; pointsArray[i-1][j]  = 2;  } if(( pointsArray[i][j+1]>= 3 )) { pointsArray[i][j]  = 2; pointsArray[i][j+1]  = 2;  } if(( pointsArray[i][j-1]>= 3 )) { pointsArray[i][j]  = 2; pointsArray[i][j-1]  = 2;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"o1a"}, {"<I&", "<I|", "<I&", "<Ib"}, {"p3c", "p3c", "p3c", "p3d"}, {" 2.", " 2."}} */
} private void f224(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 0 && pointsArray[i][j]!= 0 )){   if((pointsArray[i+1][j] != pointsArray[i][j] ) || ( pointsArray[i-1][j]!= pointsArray[i][j] ) || ( pointsArray[i][j+1]!= pointsArray[i][j] && pointsArray[i][j-1]!= pointsArray[i][j] )){   if((pointsArray[i+1][j] < 1 && pointsArray[i-1][j]< 1 ) || ( pointsArray[i][j+1]< 1 && pointsArray[i][j-1]< 1 )) { pointsArray[i][j]  = 0; pointsArray[i+1][j]  = 0; pointsArray[i-1][j]  = 0; pointsArray[i][j+1]  = 0; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<0&", "!0a"}, {"!I|", "!I|", "!I&", "!Ib"}, {"<1&", "<1|", "<1&", "<1d"}, {" 0.", " 0.", " 0.", " 0.", " 0."}} */
} private void f225(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] <= 2 )){   if((pointsArray[i+1][j] <= 1 && pointsArray[i-1][j]<= 1 && pointsArray[i][j+1]<= 1 && pointsArray[i][j-1]<= 1 )){   if((pointsArray[i+1][j] != pointsArray[i][j] ) || ( pointsArray[i-1][j]!= pointsArray[i][j] )) { pointsArray[i][j] += 0; pointsArray[i+1][j]  = 2; pointsArray[i-1][j]  = 2;  } if(( pointsArray[i][j+1]!= pointsArray[i][j] && pointsArray[i][j-1]!= pointsArray[i][j] )) { pointsArray[i][j] += 0; pointsArray[i][j+1]  = 2; pointsArray[i][j-1]  = 2;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"o2a"}, {"o1&", "o1&", "o1&", "o1b"}, {"!I|", "!Ic", "!I&", "!Id"}, {"+0.", " 2.", " 2."}} */
} private void f226(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 1 ) || ( pointsArray[i][j]>= 1 )){   if((pointsArray[i+1][j] >= 0 ) || ( pointsArray[i-1][j]>= 0 ) || ( pointsArray[i][j+1]>= 0 && pointsArray[i][j-1]>= 0 )){   if((pointsArray[i+1][j] < pointsArray[i][j] ) || ( pointsArray[i-1][j]< pointsArray[i][j] && pointsArray[i][j+1]< pointsArray[i][j] ) || ( pointsArray[i][j-1]< pointsArray[i][j] )) { pointsArray[i][j]  = 0; pointsArray[i+1][j]  = 1; pointsArray[i-1][j]  = 1; pointsArray[i][j+1]  = 1; pointsArray[i][j-1]  = 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<1|", "p1a"}, {"p0|", "p0|", "p0&", "p0b"}, {"<I|", "<I&", "<I|", "<Id"}, {" 0.", " 1.", " 1.", " 1.", " 1."}} */
} private void f227(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] == 0 )){   if((pointsArray[i+1][j] > 1 && pointsArray[i-1][j]> 1 && pointsArray[i][j+1]> 1 ) || ( pointsArray[i][j-1]> 1 )){   if((pointsArray[i+1][j] == 0 )) { pointsArray[i][j]  = 1; pointsArray[i+1][j] -= 1;  } if(( pointsArray[i-1][j]== 0 )) { pointsArray[i][j]  = 1; pointsArray[i-1][j] -= 1;  } if(( pointsArray[i][j+1]== 0 )) { pointsArray[i][j]  = 1; pointsArray[i][j+1] -= 1;  } if(( pointsArray[i][j-1]== 0 )) { pointsArray[i][j]  = 1; pointsArray[i][j-1] -= 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"=0a"}, {">1&", ">1&", ">1|", ">1b"}, {"=0c", "=0c", "=0c", "=0d"}, {" 1.", "-1."}} */
} private void f228(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] <= 2 && pointsArray[i][j]<= 2 )){   if((pointsArray[i+1][j] < 2 && pointsArray[i-1][j]< 2 ) || ( pointsArray[i][j+1]< 2 ) || ( pointsArray[i][j-1]< 2 )){   if((pointsArray[i+1][j] <= 0 ) || ( pointsArray[i-1][j]<= 0 && pointsArray[i][j+1]<= 0 ) || ( pointsArray[i][j-1]<= 0 )) { pointsArray[i][j]  = 0; pointsArray[i+1][j] += 2; pointsArray[i-1][j] += 2; pointsArray[i][j+1] += 2; pointsArray[i][j-1] += 2;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"o2&", "o2a"}, {"<2&", "<2|", "<2|", "<2b"}, {"o0|", "o0&", "o0|", "o0d"}, {" 0.", "+2.", "+2.", "+2.", "+2."}} */
} private void f229(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] <= 0 )){   if((pointsArray[i+1][j] == 1 ) || ( pointsArray[i-1][j]== 1 ) || ( pointsArray[i][j+1]== 1 ) || ( pointsArray[i][j-1]== 1 )){   if((pointsArray[i+1][j] <= 0 )) { pointsArray[i][j] -= 0; pointsArray[i+1][j]  = 0;  } if(( pointsArray[i-1][j]<= 0 )) { pointsArray[i][j] -= 0; pointsArray[i-1][j]  = 0;  } if(( pointsArray[i][j+1]<= 0 )) { pointsArray[i][j] -= 0; pointsArray[i][j+1]  = 0;  } if(( pointsArray[i][j-1]<= 0 )) { pointsArray[i][j] -= 0; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"o0a"}, {"=1|", "=1|", "=1|", "=1b"}, {"o0c", "o0c", "o0c", "o0d"}, {"-0.", " 0."}} */
} private void f230(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] != 0 ) || ( pointsArray[i][j]< 2 )){   if((pointsArray[i+1][j] != pointsArray[i][j] && pointsArray[i-1][j]!= pointsArray[i][j] && pointsArray[i][j+1]!= pointsArray[i][j] && pointsArray[i][j-1]!= pointsArray[i][j] )){   if((pointsArray[i+1][j] < 1 )) { pointsArray[i][j] -= 3; pointsArray[i+1][j] -= 0;  } if(( pointsArray[i-1][j]< 1 )) { pointsArray[i][j] -= 3; pointsArray[i-1][j] -= 0;  } if(( pointsArray[i][j+1]< 1 )) { pointsArray[i][j] -= 3; pointsArray[i][j+1] -= 0;  } if(( pointsArray[i][j-1]< 1 )) { pointsArray[i][j] -= 3; pointsArray[i][j-1] -= 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"!0|", "<2a"}, {"!I&", "!I&", "!I&", "!Ib"}, {"<1c", "<1c", "<1c", "<1d"}, {"-3.", "-0."}} */
} private void f231(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 1 ) || ( pointsArray[i][j]!= 0 )){   if((pointsArray[i+1][j] < 0 && pointsArray[i-1][j]< 0 && pointsArray[i][j+1]< 0 ) || ( pointsArray[i][j-1]< 0 )){   if((pointsArray[i+1][j] < 1 )) { pointsArray[i][j]  = 0; pointsArray[i+1][j] += 1;  } if(( pointsArray[i-1][j]< 1 )) { pointsArray[i][j]  = 0; pointsArray[i-1][j] += 1;  } if(( pointsArray[i][j+1]< 1 )) { pointsArray[i][j]  = 0; pointsArray[i][j+1] += 1;  } if(( pointsArray[i][j-1]< 1 )) { pointsArray[i][j]  = 0; pointsArray[i][j-1] += 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">1|", "!0a"}, {"<0&", "<0&", "<0|", "<0b"}, {"<1c", "<1c", "<1c", "<1d"}, {" 0.", "+1."}} */
} private void f232(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] == 0 )){   if((pointsArray[i+1][j] >= 0 && pointsArray[i-1][j]>= 0 && pointsArray[i][j+1]>= 0 && pointsArray[i][j-1]>= 0 )){   if((pointsArray[i+1][j] >= 1 && pointsArray[i-1][j]>= 1 && pointsArray[i][j+1]>= 1 && pointsArray[i][j-1]>= 1 )) { pointsArray[i][j]  = 0; pointsArray[i+1][j]  = 0; pointsArray[i-1][j]  = 0; pointsArray[i][j+1]  = 0; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"=0a"}, {"p0&", "p0&", "p0&", "p0b"}, {"p1&", "p1&", "p1&", "p1d"}, {" 0.", " 0.", " 0.", " 0.", " 0."}} */
} private void f233(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 3 && pointsArray[i][j]>= 1 )){   if((pointsArray[i+1][j] >= 3 && pointsArray[i-1][j]>= 3 ) || ( pointsArray[i][j+1]>= 3 && pointsArray[i][j-1]>= 3 )){   if((pointsArray[i+1][j] > 0 && pointsArray[i-1][j]> 0 && pointsArray[i][j+1]> 0 ) || ( pointsArray[i][j-1]> 0 )) { pointsArray[i][j]  = 3; pointsArray[i+1][j]  = 0; pointsArray[i-1][j]  = 0; pointsArray[i][j+1]  = 0; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">3&", "p1a"}, {"p3&", "p3|", "p3&", "p3b"}, {">0&", ">0&", ">0|", ">0d"}, {" 3.", " 0.", " 0.", " 0.", " 0."}} */
} private void f234(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 0 )){   if((pointsArray[i+1][j] < 0 && pointsArray[i-1][j]< 0 ) || ( pointsArray[i][j+1]< 0 && pointsArray[i][j-1]< 0 )){   if((pointsArray[i+1][j] == 1 ) || ( pointsArray[i-1][j]== 1 ) || ( pointsArray[i][j+1]== 1 && pointsArray[i][j-1]== 1 )) { pointsArray[i][j] -= 0; pointsArray[i+1][j] += 1; pointsArray[i-1][j] += 1; pointsArray[i][j+1] += 1; pointsArray[i][j-1] += 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<0a"}, {"<0&", "<0|", "<0&", "<0b"}, {"=1|", "=1|", "=1&", "=1d"}, {"-0.", "+1.", "+1.", "+1.", "+1."}} */
} private void f235(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] == 1 && pointsArray[i][j]> 2 )){   if((pointsArray[i+1][j] == 0 && pointsArray[i-1][j]== 0 && pointsArray[i][j+1]== 0 ) || ( pointsArray[i][j-1]== 0 )){   if((pointsArray[i+1][j] <= 3 ) || ( pointsArray[i-1][j]<= 3 ) || ( pointsArray[i][j+1]<= 3 ) || ( pointsArray[i][j-1]<= 3 )) { pointsArray[i][j] -= 0; pointsArray[i+1][j]  = 0; pointsArray[i-1][j]  = 0; pointsArray[i][j+1]  = 0; pointsArray[i][j-1]  = 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"=1&", ">2a"}, {"=0&", "=0&", "=0|", "=0b"}, {"o3|", "o3|", "o3|", "o3d"}, {"-0.", " 0.", " 0.", " 0.", " 0."}} */
} private void f236(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 0 ) || ( pointsArray[i][j]!= 0 )){   if((pointsArray[i+1][j] != pointsArray[i][j] && pointsArray[i-1][j]!= pointsArray[i][j] ) || ( pointsArray[i][j+1]!= pointsArray[i][j] ) || ( pointsArray[i][j-1]!= pointsArray[i][j] )){   if((pointsArray[i+1][j] < pointsArray[i][j] ) || ( pointsArray[i-1][j]< pointsArray[i][j] && pointsArray[i][j+1]< pointsArray[i][j] && pointsArray[i][j-1]< pointsArray[i][j] )) { pointsArray[i][j] -= 1; pointsArray[i+1][j] -= 1; pointsArray[i-1][j] -= 1; pointsArray[i][j+1] -= 1; pointsArray[i][j-1] -= 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<0|", "!0a"}, {"!I&", "!I|", "!I|", "!Ib"}, {"<I|", "<I&", "<I&", "<Id"}, {"-1.", "-1.", "-1.", "-1.", "-1."}} */
} private void f237(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 1 && pointsArray[i][j]== 0 )){   if((pointsArray[i+1][j] != pointsArray[i][j] ) || ( pointsArray[i-1][j]!= pointsArray[i][j] ) || ( pointsArray[i][j+1]!= pointsArray[i][j] && pointsArray[i][j-1]!= pointsArray[i][j] )){   if((pointsArray[i+1][j] > pointsArray[i][j] ) || ( pointsArray[i-1][j]> pointsArray[i][j] ) || ( pointsArray[i][j+1]> pointsArray[i][j] && pointsArray[i][j-1]> pointsArray[i][j] )) { pointsArray[i][j]  = 0; pointsArray[i+1][j] -= 0; pointsArray[i-1][j] -= 0; pointsArray[i][j+1] -= 0; pointsArray[i][j-1] -= 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">1&", "=0a"}, {"!I|", "!I|", "!I&", "!Ib"}, {">I|", ">I|", ">I&", ">Id"}, {" 0.", "-0.", "-0.", "-0.", "-0."}} */
} private void f238(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] <= 3 ) || ( pointsArray[i][j]>= 0 )){   if((pointsArray[i+1][j] >= pointsArray[i][j] ) || ( pointsArray[i-1][j]>= pointsArray[i][j] ) || ( pointsArray[i][j+1]>= pointsArray[i][j] ) || ( pointsArray[i][j-1]>= pointsArray[i][j] )){   if((pointsArray[i+1][j] == 0 )) { pointsArray[i][j]  = 1; pointsArray[i+1][j] -= 0;  } if(( pointsArray[i-1][j]== 0 )) { pointsArray[i][j]  = 1; pointsArray[i-1][j] -= 0;  } if(( pointsArray[i][j+1]== 0 )) { pointsArray[i][j]  = 1; pointsArray[i][j+1] -= 0;  } if(( pointsArray[i][j-1]== 0 )) { pointsArray[i][j]  = 1; pointsArray[i][j-1] -= 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"o3|", "p0a"}, {"pI|", "pI|", "pI|", "pIb"}, {"=0c", "=0c", "=0c", "=0d"}, {" 1.", "-0."}} */
} private void f239(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] != 0 )){   if((pointsArray[i+1][j] < 1 && pointsArray[i-1][j]< 1 && pointsArray[i][j+1]< 1 && pointsArray[i][j-1]< 1 )){   if((pointsArray[i+1][j] == 1 ) || ( pointsArray[i-1][j]== 1 )) { pointsArray[i][j] += 1; pointsArray[i+1][j]  = 1; pointsArray[i-1][j]  = 1;  } if(( pointsArray[i][j+1]== 1 ) || ( pointsArray[i][j-1]== 1 )) { pointsArray[i][j] += 1; pointsArray[i][j+1]  = 1; pointsArray[i][j-1]  = 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"!0a"}, {"<1&", "<1&", "<1&", "<1b"}, {"=1|", "=1c", "=1|", "=1d"}, {"+1.", " 1.", " 1."}} */
} private void f240(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] <= 2 )){   if((pointsArray[i+1][j] != 3 ) || ( pointsArray[i-1][j]!= 3 ) || ( pointsArray[i][j+1]!= 3 ) || ( pointsArray[i][j-1]!= 3 )){   if((pointsArray[i+1][j] <= pointsArray[i][j] ) || ( pointsArray[i-1][j]<= pointsArray[i][j] ) || ( pointsArray[i][j+1]<= pointsArray[i][j] && pointsArray[i][j-1]<= pointsArray[i][j] )) { pointsArray[i][j] -= 2; pointsArray[i+1][j] += 2; pointsArray[i-1][j] += 2; pointsArray[i][j+1] += 2; pointsArray[i][j-1] += 2;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"o2a"}, {"!3|", "!3|", "!3|", "!3b"}, {"oI|", "oI|", "oI&", "oId"}, {"-2.", "+2.", "+2.", "+2.", "+2."}} */
} private void f241(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 0 ) || ( pointsArray[i][j]> 0 )){   if((pointsArray[i+1][j] > 0 && pointsArray[i-1][j]> 0 && pointsArray[i][j+1]> 0 && pointsArray[i][j-1]> 0 )){   if((pointsArray[i+1][j] >= 0 ) || ( pointsArray[i-1][j]>= 0 ) || ( pointsArray[i][j+1]>= 0 && pointsArray[i][j-1]>= 0 )) { pointsArray[i][j] -= 1; pointsArray[i+1][j]  = 1; pointsArray[i-1][j]  = 1; pointsArray[i][j+1]  = 1; pointsArray[i][j-1]  = 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">0|", ">0a"}, {">0&", ">0&", ">0&", ">0b"}, {"p0|", "p0|", "p0&", "p0d"}, {"-1.", " 1.", " 1.", " 1.", " 1."}} */
} private void f242(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 1 ) || ( pointsArray[i][j]< 0 )){   if((pointsArray[i+1][j] > 1 ) || ( pointsArray[i-1][j]> 1 ) || ( pointsArray[i][j+1]> 1 && pointsArray[i][j-1]> 1 )){   if((pointsArray[i+1][j] == pointsArray[i][j] )) { pointsArray[i][j] -= 0; pointsArray[i+1][j]  = 1;  } if(( pointsArray[i-1][j]== pointsArray[i][j] )) { pointsArray[i][j] -= 0; pointsArray[i-1][j]  = 1;  } if(( pointsArray[i][j+1]== pointsArray[i][j] )) { pointsArray[i][j] -= 0; pointsArray[i][j+1]  = 1;  } if(( pointsArray[i][j-1]== pointsArray[i][j] )) { pointsArray[i][j] -= 0; pointsArray[i][j-1]  = 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">1|", "<0a"}, {">1|", ">1|", ">1&", ">1b"}, {"=Ic", "=Ic", "=Ic", "=Id"}, {"-0.", " 1."}} */
} private void f243(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] == 0 )){   if((pointsArray[i+1][j] == 0 ) || ( pointsArray[i-1][j]== 0 ) || ( pointsArray[i][j+1]== 0 && pointsArray[i][j-1]== 0 )){   if((pointsArray[i+1][j] >= 2 )) { pointsArray[i][j] -= 2; pointsArray[i+1][j]  = 3;  } if(( pointsArray[i-1][j]>= 2 )) { pointsArray[i][j] -= 2; pointsArray[i-1][j]  = 3;  } if(( pointsArray[i][j+1]>= 2 )) { pointsArray[i][j] -= 2; pointsArray[i][j+1]  = 3;  } if(( pointsArray[i][j-1]>= 2 )) { pointsArray[i][j] -= 2; pointsArray[i][j-1]  = 3;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"=0a"}, {"=0|", "=0|", "=0&", "=0b"}, {"p2c", "p2c", "p2c", "p2d"}, {"-2.", " 3."}} */
} private void f244(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 0 )){   if((pointsArray[i+1][j] <= 0 && pointsArray[i-1][j]<= 0 && pointsArray[i][j+1]<= 0 && pointsArray[i][j-1]<= 0 )){   if((pointsArray[i+1][j] <= pointsArray[i][j] && pointsArray[i-1][j]<= pointsArray[i][j] && pointsArray[i][j+1]<= pointsArray[i][j] && pointsArray[i][j-1]<= pointsArray[i][j] )) { pointsArray[i][j]  = 1; pointsArray[i+1][j] += 0; pointsArray[i-1][j] += 0; pointsArray[i][j+1] += 0; pointsArray[i][j-1] += 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<0a"}, {"o0&", "o0&", "o0&", "o0b"}, {"oI&", "oI&", "oI&", "oId"}, {" 1.", "+0.", "+0.", "+0.", "+0."}} */
} private void f245(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] < 1 )){   if((pointsArray[i+1][j] > 1 && pointsArray[i-1][j]> 1 && pointsArray[i][j+1]> 1 ) || ( pointsArray[i][j-1]> 1 )){   if((pointsArray[i+1][j] == 3 ) || ( pointsArray[i-1][j]== 3 ) || ( pointsArray[i][j+1]== 3 ) || ( pointsArray[i][j-1]== 3 )) { pointsArray[i][j] -= 0; pointsArray[i+1][j] -= 0; pointsArray[i-1][j] -= 0; pointsArray[i][j+1] -= 0; pointsArray[i][j-1] -= 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"<1a"}, {">1&", ">1&", ">1|", ">1b"}, {"=3|", "=3|", "=3|", "=3d"}, {"-0.", "-0.", "-0.", "-0.", "-0."}} */
} private void f246(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] >= 0 )){   if((pointsArray[i+1][j] == pointsArray[i][j] ) || ( pointsArray[i-1][j]== pointsArray[i][j] && pointsArray[i][j+1]== pointsArray[i][j] ) || ( pointsArray[i][j-1]== pointsArray[i][j] )){   if((pointsArray[i+1][j] == 0 && pointsArray[i-1][j]== 0 ) || ( pointsArray[i][j+1]== 0 && pointsArray[i][j-1]== 0 )) { pointsArray[i][j]  = 1; pointsArray[i+1][j] -= 0; pointsArray[i-1][j] -= 0; pointsArray[i][j+1] -= 0; pointsArray[i][j-1] -= 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"p0a"}, {"=I|", "=I&", "=I|", "=Ib"}, {"=0&", "=0|", "=0&", "=0d"}, {" 1.", "-0.", "-0.", "-0.", "-0."}} */
} private void f247(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] > 1 ) || ( pointsArray[i][j]== 0 )){   if((pointsArray[i+1][j] == pointsArray[i][j] && pointsArray[i-1][j]== pointsArray[i][j] ) || ( pointsArray[i][j+1]== pointsArray[i][j] && pointsArray[i][j-1]== pointsArray[i][j] )){   if((pointsArray[i+1][j] < pointsArray[i][j] ) || ( pointsArray[i-1][j]< pointsArray[i][j] && pointsArray[i][j+1]< pointsArray[i][j] && pointsArray[i][j-1]< pointsArray[i][j] )) { pointsArray[i][j]  = 1; pointsArray[i+1][j]  = 1; pointsArray[i-1][j]  = 1; pointsArray[i][j+1]  = 1; pointsArray[i][j-1]  = 1;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{">1|", "=0a"}, {"=I&", "=I|", "=I&", "=Ib"}, {"<I|", "<I&", "<I&", "<Id"}, {" 1.", " 1.", " 1.", " 1.", " 1."}} */
} private void f248(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] != 2 )){   if((pointsArray[i+1][j] > pointsArray[i][j] ) || ( pointsArray[i-1][j]> pointsArray[i][j] ) || ( pointsArray[i][j+1]> pointsArray[i][j] && pointsArray[i][j-1]> pointsArray[i][j] )){   if((pointsArray[i+1][j] > pointsArray[i][j] && pointsArray[i-1][j]> pointsArray[i][j] )) { pointsArray[i][j] -= 2; pointsArray[i+1][j]  = 2; pointsArray[i-1][j]  = 2;  } if(( pointsArray[i][j+1]> pointsArray[i][j] && pointsArray[i][j-1]> pointsArray[i][j] )) { pointsArray[i][j] -= 2; pointsArray[i][j+1]  = 2; pointsArray[i][j-1]  = 2;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"!2a"}, {">I|", ">I|", ">I&", ">Ib"}, {">I&", ">Ic", ">I&", ">Id"}, {"-2.", " 2.", " 2."}} */
} private void f249(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] == 1 )){   if((pointsArray[i+1][j] == 1 ) || ( pointsArray[i-1][j]== 1 && pointsArray[i][j+1]== 1 ) || ( pointsArray[i][j-1]== 1 )){   if((pointsArray[i+1][j] < 1 )) { pointsArray[i][j]  = 1; pointsArray[i+1][j] += 0;  } if(( pointsArray[i-1][j]< 1 )) { pointsArray[i][j]  = 1; pointsArray[i-1][j] += 0;  } if(( pointsArray[i][j+1]< 1 )) { pointsArray[i][j]  = 1; pointsArray[i][j+1] += 0;  } if(( pointsArray[i][j-1]< 1 )) { pointsArray[i][j]  = 1; pointsArray[i][j-1] += 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"=1a"}, {"=1|", "=1&", "=1|", "=1b"}, {"<1c", "<1c", "<1c", "<1d"}, {" 1.", "+0."}} */
} private void f250(int i, int j, int mySize) {if(i > 0) {if(i < mySize-1) {if(j > 0) {if(j < mySize-1) { /*Proceed*/if((pointsArray[i][j] == 3 ) || ( pointsArray[i][j]!= 0 )){   if((pointsArray[i+1][j] < 0 ) || ( pointsArray[i-1][j]< 0 && pointsArray[i][j+1]< 0 && pointsArray[i][j-1]< 0 )){   if((pointsArray[i+1][j] <= 0 && pointsArray[i-1][j]<= 0 ) || ( pointsArray[i][j+1]<= 0 ) || ( pointsArray[i][j-1]<= 0 )) { pointsArray[i][j] += 0; pointsArray[i+1][j] += 0; pointsArray[i-1][j] += 0; pointsArray[i][j+1] += 0; pointsArray[i][j-1] += 0;  } /**/}}/*EndOfFunction/**/    /**/ }}}} /* {{"=3|", "!0a"}, {"<0|", "<0&", "<0&", "<0b"}, {"o0&", "o0|", "o0|", "o0d"}, {"+0.", "+0.", "+0.", "+0.", "+0."}} */
}

	

    
    /************************************************************/
    /************************************************************/
    /********************* END FUNCTION BOX *********************/
    /************************************************************/
    /************************************************************/
   
  
    
    
    /************************************************************/
    /************************************************************/
    /********************* END FUNCTION BOX *********************/
    /************************************************************/
    /************************************************************/
   
  
    
    
    /************************************************************/
    /************************************************************/
    /********************* END FUNCTION BOX *********************/
    /************************************************************/
    /************************************************************/
   
  
    
    
    /************************************************************/
    /************************************************************/
    /********************* END FUNCTION BOX *********************/
    /************************************************************/
    /************************************************************/
   
  
    
    
    /************************************************************/
    /************************************************************/
    /********************* END FUNCTION BOX *********************/
    /************************************************************/
    /************************************************************/
   
  
    
    public void setZero(int mySize) {
        for(int i=0; i < mySize; i++){
            for(int j=0; j < mySize; j++){
                pointsArray[i][j] = 0;
            }
        }
    }
    
    public int getPoint(int i, int j) {
        return pointsArray[i][j];
    }

     private void seedMe(int i, int j) {
        //int randm=r.nextInt(randStr);
        //int randm=rXOR.nextInt(randStr);
        int randm=rSec.nextInt(randStr);
        
        if(randm == 0){
            /*if(pointsArray[i][j] > 0){
                if(rSec.nextInt(randStr*2) == 0) { pointsArray[i][j]--; }
            } else /**/if(pointsArray[i][j] == 0 && fuelLimit != 0){
                pointsArray[i][j] = 1;
            }
	    
	    /*if(pointsArray[i][j] == 0 && fuelLimit <= 0 && rSec.nextInt(512) == 0){
                pointsArray[i][j] = 1;
            }/**/

        }
    
    }
    
    private void cutBoarders(int i, int j, int mySize) {
        if(i <= 1) {pointsArray[i][j] = 0;}
        if(i >= mySize-2) {pointsArray[i][j] = 0;}
        if(j <= 1) {pointsArray[i][j] = 0;}
        if(j >= mySize-2) {pointsArray[i][j] = 0;}
    }
    
     private void TIMEBOX() {
	
	//if(maxVal > 1 ) { randStr=maxVal;}
	 
	maxVal=1;
	totalVal=0;
	notZero=0;
	
	for(int i = 0; i < freq.length; i++) {
	    freq[i] = 0;
	}
	
	if(rndRotation == 0 && rndRotationSize > 0) {randStr+=dir; doubleBack--; rndRotation=rndRotationSize;} else if (rndRotationSize > 0){rndRotation--;}
	if(doubleBack == 0 && dir == -1) { doubleBackSize+=rndRotationSize; }
	if(doubleBack == 0) {dir*=-1; doubleBack=doubleBackSize;}
	if(fuelLimit>0){fuelLimit--;}
	
	if(ufuel > 0) {ufuel--;}
	if(ufuel == 0 ) {
	    
	    if(r.nextInt(64) == 0) {
		iticker[r.nextInt(tikLen+iStik.length)] = r.nextInt(250); 

                if(r.nextInt(3) == 0) {iticker[r.nextInt(tikLen+iStik.length)] = 0;}
                
		String sSs = "";

		for(int iiii = 0; iiii < iticker.length; iiii++) {
		    sSs += iticker[iiii] + ", ";
		}

		System.out.println(sSs);
		ufuel=32;
	    }
	}
	
	
	
     }
     
     private void MAXVAL(int i, int j, int mySize) {
	if(i > 1 && i < mySize -2 && j > 1 && j < mySize -2) { //MAXVAL CALCULATION
	    totalVal+=pointsArray[i][j];
	    if(pointsArray[i][j]>maxVal){
		 maxVal=pointsArray[i][j];
	    }

            if(pointsArray[i][j] > -1){
                if(pointsArray[i][j] < freq.length-1) { freq[pointsArray[i][j]]++; } else {
                    freq[freq.length-1]++;
                }
            }
            
	    if(pointsArray[i][j] != 0){
		notZero++;
	    }
	    
	}
     }

    void addKeyListener(KeyListener keyListener) {
	throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
}


/*System.out.println("tock " + (tock-1));
		 //if(tock == 1) { t1 = i; }
		 tock--;
		 if(tock == -2) {break;}/**/